{"/Users/stephaniesong/Desktop/CPSC 310/project_team170/src/controller/IInsightFacade.ts":{"path":"/Users/stephaniesong/Desktop/CPSC 310/project_team170/src/controller/IInsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":113}},"2":{"start":{"line":5,"column":0},"end":{"line":8,"column":89}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":48}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":42}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":23}},"6":{"start":{"line":12,"column":8},"end":{"line":12,"column":52}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}},"8":{"start":{"line":18,"column":8},"end":{"line":18,"column":23}},"9":{"start":{"line":19,"column":8},"end":{"line":19,"column":53}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":38}},"11":{"start":{"line":25,"column":8},"end":{"line":25,"column":23}},"12":{"start":{"line":26,"column":8},"end":{"line":26,"column":59}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":31},"end":{"line":8,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":25},"end":{"line":13,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":25},"end":{"line":20,"column":5}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":25},"end":{"line":27,"column":5}},"line":24}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":24},"end":{"line":8,"column":87}},"type":"binary-expr","locations":[{"start":{"line":8,"column":24},"end":{"line":8,"column":50}},{"start":{"line":8,"column":55},"end":{"line":8,"column":86}}],"line":8}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":41,"6":41,"7":1,"8":0,"9":0,"10":1,"11":0,"12":0,"13":1},"f":{"0":1,"1":41,"2":0,"3":0},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/stephaniesong/Desktop/CPSC 310/project_team170/src/controller/IInsightFacade.ts","sources":["/Users/stephaniesong/Desktop/CPSC 310/project_team170/src/controller/IInsightFacade.ts"],"names":[],"mappings":";;;AAMA,IAAY,kBAGX;AAHD,WAAY,kBAAkB;IAC7B,2CAAqB,CAAA;IACrB,qCAAe,CAAA;AAChB,CAAC,EAHW,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAG7B;AAYD,MAAa,YAAa,SAAQ,KAAK;IACtC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IAC7C,CAAC;CACD;AALD,oCAKC;AAED,MAAa,aAAc,SAAQ,KAAK;IACvC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;IAC9C,CAAC;CACD;AALD,sCAKC;AAED,MAAa,mBAAoB,SAAQ,KAAK;IAC7C,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;IACpD,CAAC;CACD;AALD,kDAKC","sourcesContent":["/*\n * This is the primary high-level API for the project. In this folder there should be:\n * A class called InsightFacade, this should be in a file called InsightFacade.ts.\n * You should not change this interface at all or the test suite will not work.\n */\n\nexport enum InsightDatasetKind {\n\tSections = \"sections\",\n\tRooms = \"rooms\",\n}\n\nexport interface InsightDataset {\n\tid: string;\n\tkind: InsightDatasetKind;\n\tnumRows: number;\n}\n\nexport interface InsightResult {\n\t[key: string]: string | number;\n}\n\nexport class InsightError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, InsightError);\n\t}\n}\n\nexport class NotFoundError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, NotFoundError);\n\t}\n}\n\nexport class ResultTooLargeError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, ResultTooLargeError);\n\t}\n}\n\nexport interface IInsightFacade {\n\t/**\n\t * Add a dataset to insightUBC.\n\t *\n\t * @param id  The id of the dataset being added. Follows the format /^[^_]+$/\n\t * @param content  The base64 content of the dataset. This content should be in the form of a serialized zip file.\n\t * @param kind  The kind of the dataset\n\t *\n\t * @return Promise <string[]>\n\t *\n\t * The promise should fulfill on a successful add, reject for any failures.\n\t * The promise should fulfill with a string array,\n\t * containing the ids of all currently added datasets upon a successful add.\n\t * The promise should reject with an InsightError describing the error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t * If id is the same as the id of an already added dataset, the dataset should be rejected and not saved.\n\t *\n\t * After receiving the dataset, it should be processed into a data structure of\n\t * your design. The processed data structure should be persisted to disk; your\n\t * system should be able to load this persisted value into memory for answering\n\t * queries.\n\t *\n\t * Ultimately, a dataset must be added or loaded from disk before queries can\n\t * be successfully answered.\n\t */\n\taddDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]>;\n\n\t/**\n\t * Remove a dataset from insightUBC.\n\t *\n\t * @param id  The id of the dataset to remove. Follows the format /^[^_]+$/\n\t *\n\t * @return Promise <string>\n\t *\n\t * The promise should fulfill upon a successful removal, reject on any error.\n\t * Attempting to remove a dataset that hasn't been added yet counts as an error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t *\n\t * The promise should fulfill the id of the dataset that was removed.\n\t * The promise should reject with a NotFoundError (if a valid id was not yet added)\n\t * or an InsightError (invalid id or any other source of failure) describing the error.\n\t *\n\t * This will delete both disk and memory caches for the dataset for the id meaning\n\t * that subsequent queries for that id should fail unless a new addDataset happens first.\n\t */\n\tremoveDataset(id: string): Promise<string>;\n\n\t/**\n\t * Perform a query on insightUBC.\n\t *\n\t * @param query  The query to be performed.\n\t *\n\t * If a query is incorrectly formatted, references a dataset not added (in memory or on disk),\n\t * or references multiple datasets, it should be rejected.\n\t *\n\t * @return Promise <InsightResult[]>\n\t *\n\t * The promise should fulfill with an array of results.\n\t * The promise should reject with a ResultTooLargeError (if the query returns too many results)\n\t * or an InsightError (for any other source of failure) describing the error.\n\t */\n\tperformQuery(query: unknown): Promise<InsightResult[]>;\n\n\t/**\n\t * List all currently added datasets, their types, and number of rows.\n\t *\n\t * @return Promise <InsightDataset[]>\n\t * The promise should fulfill an array of currently added InsightDatasets, and will only fulfill.\n\t */\n\tlistDatasets(): Promise<InsightDataset[]>;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ea10be354176c644aef9b75f7ff6b8f8806e1939","contentHash":"69f13637369e0d392fa5a62c330ca0d01c91cfd209a332b5fcbdfd8e6a01be2f"},"/Users/stephaniesong/Desktop/CPSC 310/project_team170/src/controller/InsightFacade.ts":{"path":"/Users/stephaniesong/Desktop/CPSC 310/project_team170/src/controller/InsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"16":{"start":{"line":19,"column":31},"end":{"line":19,"column":42}},"17":{"start":{"line":20,"column":17},"end":{"line":20,"column":19}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"19":{"start":{"line":21,"column":21},"end":{"line":21,"column":141}},"20":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"21":{"start":{"line":21,"column":109},"end":{"line":21,"column":141}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"23":{"start":{"line":23,"column":4},"end":{"line":23,"column":18}},"24":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"25":{"start":{"line":26,"column":4},"end":{"line":26,"column":62}},"26":{"start":{"line":28,"column":0},"end":{"line":28,"column":62}},"27":{"start":{"line":29,"column":11},"end":{"line":29,"column":38}},"28":{"start":{"line":30,"column":16},"end":{"line":30,"column":49}},"29":{"start":{"line":31,"column":25},"end":{"line":31,"column":52}},"30":{"start":{"line":32,"column":25},"end":{"line":32,"column":62}},"31":{"start":{"line":33,"column":23},"end":{"line":33,"column":58}},"32":{"start":{"line":37,"column":8},"end":{"line":37,"column":34}},"33":{"start":{"line":38,"column":8},"end":{"line":38,"column":21}},"34":{"start":{"line":41,"column":8},"end":{"line":54,"column":9}},"35":{"start":{"line":42,"column":25},"end":{"line":42,"column":49}},"36":{"start":{"line":43,"column":12},"end":{"line":53,"column":13}},"37":{"start":{"line":44,"column":16},"end":{"line":52,"column":17}},"38":{"start":{"line":45,"column":38},"end":{"line":45,"column":63}},"39":{"start":{"line":46,"column":20},"end":{"line":51,"column":21}},"40":{"start":{"line":47,"column":44},"end":{"line":47,"column":101}},"41":{"start":{"line":48,"column":47},"end":{"line":48,"column":70}},"42":{"start":{"line":49,"column":24},"end":{"line":49,"column":69}},"43":{"start":{"line":50,"column":24},"end":{"line":50,"column":69}},"44":{"start":{"line":57,"column":8},"end":{"line":69,"column":9}},"45":{"start":{"line":58,"column":12},"end":{"line":58,"column":39}},"46":{"start":{"line":59,"column":12},"end":{"line":59,"column":36}},"47":{"start":{"line":60,"column":12},"end":{"line":60,"column":38}},"48":{"start":{"line":61,"column":36},"end":{"line":61,"column":70}},"49":{"start":{"line":62,"column":12},"end":{"line":62,"column":50}},"50":{"start":{"line":63,"column":29},"end":{"line":63,"column":61}},"51":{"start":{"line":64,"column":12},"end":{"line":64,"column":47}},"52":{"start":{"line":67,"column":12},"end":{"line":67,"column":31}},"53":{"start":{"line":68,"column":12},"end":{"line":68,"column":41}},"54":{"start":{"line":72,"column":8},"end":{"line":74,"column":9}},"55":{"start":{"line":73,"column":12},"end":{"line":73,"column":74}},"56":{"start":{"line":77,"column":8},"end":{"line":79,"column":9}},"57":{"start":{"line":78,"column":12},"end":{"line":78,"column":76}},"58":{"start":{"line":82,"column":8},"end":{"line":84,"column":9}},"59":{"start":{"line":83,"column":12},"end":{"line":83,"column":80}},"60":{"start":{"line":87,"column":8},"end":{"line":107,"column":9}},"61":{"start":{"line":88,"column":27},"end":{"line":88,"column":29}},"62":{"start":{"line":89,"column":22},"end":{"line":89,"column":43}},"63":{"start":{"line":90,"column":12},"end":{"line":90,"column":77}},"64":{"start":{"line":91,"column":12},"end":{"line":101,"column":15}},"65":{"start":{"line":92,"column":16},"end":{"line":100,"column":17}},"66":{"start":{"line":93,"column":20},"end":{"line":96,"column":21}},"67":{"start":{"line":94,"column":44},"end":{"line":94,"column":64}},"68":{"start":{"line":95,"column":24},"end":{"line":95,"column":51}},"69":{"start":{"line":99,"column":20},"end":{"line":99,"column":115}},"70":{"start":{"line":102,"column":32},"end":{"line":102,"column":59}},"71":{"start":{"line":103,"column":12},"end":{"line":103,"column":31}},"72":{"start":{"line":106,"column":12},"end":{"line":106,"column":71}},"73":{"start":{"line":110,"column":26},"end":{"line":110,"column":28}},"74":{"start":{"line":111,"column":8},"end":{"line":131,"column":9}},"75":{"start":{"line":112,"column":12},"end":{"line":130,"column":13}},"76":{"start":{"line":113,"column":33},"end":{"line":113,"column":48}},"77":{"start":{"line":114,"column":33},"end":{"line":125,"column":19}},"78":{"start":{"line":114,"column":66},"end":{"line":125,"column":17}},"79":{"start":{"line":126,"column":16},"end":{"line":126,"column":59}},"80":{"start":{"line":129,"column":16},"end":{"line":129,"column":75}},"81":{"start":{"line":132,"column":8},"end":{"line":132,"column":43}},"82":{"start":{"line":133,"column":35},"end":{"line":133,"column":62}},"83":{"start":{"line":134,"column":8},"end":{"line":136,"column":9}},"84":{"start":{"line":135,"column":12},"end":{"line":135,"column":35}},"85":{"start":{"line":137,"column":8},"end":{"line":137,"column":80}},"86":{"start":{"line":140,"column":8},"end":{"line":150,"column":9}},"87":{"start":{"line":141,"column":12},"end":{"line":141,"column":39}},"88":{"start":{"line":142,"column":12},"end":{"line":142,"column":29}},"89":{"start":{"line":143,"column":12},"end":{"line":143,"column":37}},"90":{"start":{"line":144,"column":12},"end":{"line":144,"column":52}},"91":{"start":{"line":145,"column":12},"end":{"line":145,"column":39}},"92":{"start":{"line":148,"column":12},"end":{"line":148,"column":31}},"93":{"start":{"line":149,"column":12},"end":{"line":149,"column":41}},"94":{"start":{"line":153,"column":8},"end":{"line":155,"column":9}},"95":{"start":{"line":154,"column":12},"end":{"line":154,"column":82}},"96":{"start":{"line":158,"column":8},"end":{"line":176,"column":11}},"97":{"start":{"line":159,"column":35},"end":{"line":159,"column":72}},"98":{"start":{"line":160,"column":12},"end":{"line":175,"column":13}},"99":{"start":{"line":161,"column":34},"end":{"line":161,"column":70}},"100":{"start":{"line":162,"column":16},"end":{"line":164,"column":17}},"101":{"start":{"line":163,"column":20},"end":{"line":163,"column":99}},"102":{"start":{"line":165,"column":39},"end":{"line":165,"column":67}},"103":{"start":{"line":166,"column":16},"end":{"line":168,"column":17}},"104":{"start":{"line":167,"column":20},"end":{"line":167,"column":107}},"105":{"start":{"line":169,"column":43},"end":{"line":169,"column":76}},"106":{"start":{"line":170,"column":32},"end":{"line":170,"column":92}},"107":{"start":{"line":171,"column":16},"end":{"line":171,"column":48}},"108":{"start":{"line":174,"column":16},"end":{"line":174,"column":45}},"109":{"start":{"line":179,"column":26},"end":{"line":179,"column":28}},"110":{"start":{"line":180,"column":8},"end":{"line":187,"column":9}},"111":{"start":{"line":181,"column":28},"end":{"line":185,"column":13}},"112":{"start":{"line":186,"column":12},"end":{"line":186,"column":38}},"113":{"start":{"line":188,"column":8},"end":{"line":188,"column":33}},"114":{"start":{"line":189,"column":8},"end":{"line":189,"column":44}},"115":{"start":{"line":192,"column":0},"end":{"line":192,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":80},"end":{"line":13,"column":81}},"loc":{"start":{"line":13,"column":95},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":5},"end":{"line":15,"column":6}},"loc":{"start":{"line":15,"column":20},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":50},"end":{"line":18,"column":51}},"loc":{"start":{"line":18,"column":65},"end":{"line":24,"column":1}},"line":18},"6":{"name":"(anonymous_6)","decl":{"start":{"line":25,"column":56},"end":{"line":25,"column":57}},"loc":{"start":{"line":25,"column":71},"end":{"line":27,"column":1}},"line":25},"7":{"name":"(anonymous_7)","decl":{"start":{"line":36,"column":4},"end":{"line":36,"column":5}},"loc":{"start":{"line":36,"column":18},"end":{"line":39,"column":5}},"line":36},"8":{"name":"(anonymous_8)","decl":{"start":{"line":40,"column":4},"end":{"line":40,"column":5}},"loc":{"start":{"line":40,"column":12},"end":{"line":55,"column":5}},"line":40},"9":{"name":"(anonymous_9)","decl":{"start":{"line":56,"column":4},"end":{"line":56,"column":5}},"loc":{"start":{"line":56,"column":40},"end":{"line":70,"column":5}},"line":56},"10":{"name":"(anonymous_10)","decl":{"start":{"line":71,"column":4},"end":{"line":71,"column":5}},"loc":{"start":{"line":71,"column":26},"end":{"line":75,"column":5}},"line":71},"11":{"name":"(anonymous_11)","decl":{"start":{"line":76,"column":4},"end":{"line":76,"column":5}},"loc":{"start":{"line":76,"column":23},"end":{"line":80,"column":5}},"line":76},"12":{"name":"(anonymous_12)","decl":{"start":{"line":81,"column":4},"end":{"line":81,"column":5}},"loc":{"start":{"line":81,"column":25},"end":{"line":85,"column":5}},"line":81},"13":{"name":"(anonymous_13)","decl":{"start":{"line":86,"column":4},"end":{"line":86,"column":5}},"loc":{"start":{"line":86,"column":34},"end":{"line":108,"column":5}},"line":86},"14":{"name":"(anonymous_14)","decl":{"start":{"line":91,"column":24},"end":{"line":91,"column":25}},"loc":{"start":{"line":91,"column":48},"end":{"line":101,"column":13}},"line":91},"15":{"name":"(anonymous_15)","decl":{"start":{"line":109,"column":4},"end":{"line":109,"column":5}},"loc":{"start":{"line":109,"column":37},"end":{"line":138,"column":5}},"line":109},"16":{"name":"(anonymous_16)","decl":{"start":{"line":114,"column":53},"end":{"line":114,"column":54}},"loc":{"start":{"line":114,"column":66},"end":{"line":125,"column":17}},"line":114},"17":{"name":"(anonymous_17)","decl":{"start":{"line":139,"column":4},"end":{"line":139,"column":5}},"loc":{"start":{"line":139,"column":22},"end":{"line":151,"column":5}},"line":139},"18":{"name":"(anonymous_18)","decl":{"start":{"line":152,"column":4},"end":{"line":152,"column":5}},"loc":{"start":{"line":152,"column":16},"end":{"line":156,"column":5}},"line":152},"19":{"name":"(anonymous_19)","decl":{"start":{"line":157,"column":4},"end":{"line":157,"column":5}},"loc":{"start":{"line":157,"column":24},"end":{"line":177,"column":5}},"line":157},"20":{"name":"(anonymous_20)","decl":{"start":{"line":158,"column":27},"end":{"line":158,"column":28}},"loc":{"start":{"line":158,"column":48},"end":{"line":176,"column":9}},"line":158},"21":{"name":"(anonymous_21)","decl":{"start":{"line":178,"column":4},"end":{"line":178,"column":5}},"loc":{"start":{"line":178,"column":25},"end":{"line":190,"column":5}},"line":178}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":57}},{"start":{"line":13,"column":63},"end":{"line":17,"column":1}}],"line":13},"9":{"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":1}},"type":"cond-expr","locations":[{"start":{"line":13,"column":80},"end":{"line":15,"column":1}},{"start":{"line":15,"column":5},"end":{"line":17,"column":1}}],"line":13},"10":{"loc":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":45}},{"start":{"line":18,"column":50},"end":{"line":24,"column":1}}],"line":18},"11":{"loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},{"start":{"line":19,"column":4},"end":{"line":19,"column":42}}],"line":19},"12":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":11}},{"start":{"line":19,"column":15},"end":{"line":19,"column":29}}],"line":19},"13":{"loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},{"start":{"line":21,"column":4},"end":{"line":21,"column":141}}],"line":21},"14":{"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},{"start":{"line":21,"column":40},"end":{"line":21,"column":141}}],"line":21},"15":{"loc":{"start":{"line":21,"column":44},"end":{"line":21,"column":107}},"type":"binary-expr","locations":[{"start":{"line":21,"column":44},"end":{"line":21,"column":59}},{"start":{"line":21,"column":63},"end":{"line":21,"column":107}}],"line":21},"16":{"loc":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":27}},{"start":{"line":25,"column":31},"end":{"line":25,"column":51}},{"start":{"line":25,"column":56},"end":{"line":27,"column":1}}],"line":25},"17":{"loc":{"start":{"line":26,"column":11},"end":{"line":26,"column":61}},"type":"cond-expr","locations":[{"start":{"line":26,"column":37},"end":{"line":26,"column":40}},{"start":{"line":26,"column":43},"end":{"line":26,"column":61}}],"line":26},"18":{"loc":{"start":{"line":26,"column":12},"end":{"line":26,"column":33}},"type":"binary-expr","locations":[{"start":{"line":26,"column":12},"end":{"line":26,"column":15}},{"start":{"line":26,"column":19},"end":{"line":26,"column":33}}],"line":26},"19":{"loc":{"start":{"line":41,"column":8},"end":{"line":54,"column":9}},"type":"if","locations":[{"start":{"line":41,"column":8},"end":{"line":54,"column":9}},{"start":{"line":41,"column":8},"end":{"line":54,"column":9}}],"line":41},"20":{"loc":{"start":{"line":43,"column":12},"end":{"line":53,"column":13}},"type":"if","locations":[{"start":{"line":43,"column":12},"end":{"line":53,"column":13}},{"start":{"line":43,"column":12},"end":{"line":53,"column":13}}],"line":43},"21":{"loc":{"start":{"line":46,"column":20},"end":{"line":51,"column":21}},"type":"if","locations":[{"start":{"line":46,"column":20},"end":{"line":51,"column":21}},{"start":{"line":46,"column":20},"end":{"line":51,"column":21}}],"line":46},"22":{"loc":{"start":{"line":72,"column":8},"end":{"line":74,"column":9}},"type":"if","locations":[{"start":{"line":72,"column":8},"end":{"line":74,"column":9}},{"start":{"line":72,"column":8},"end":{"line":74,"column":9}}],"line":72},"23":{"loc":{"start":{"line":72,"column":12},"end":{"line":72,"column":55}},"type":"binary-expr","locations":[{"start":{"line":72,"column":12},"end":{"line":72,"column":21}},{"start":{"line":72,"column":25},"end":{"line":72,"column":41}},{"start":{"line":72,"column":45},"end":{"line":72,"column":55}}],"line":72},"24":{"loc":{"start":{"line":77,"column":8},"end":{"line":79,"column":9}},"type":"if","locations":[{"start":{"line":77,"column":8},"end":{"line":79,"column":9}},{"start":{"line":77,"column":8},"end":{"line":79,"column":9}}],"line":77},"25":{"loc":{"start":{"line":82,"column":8},"end":{"line":84,"column":9}},"type":"if","locations":[{"start":{"line":82,"column":8},"end":{"line":84,"column":9}},{"start":{"line":82,"column":8},"end":{"line":84,"column":9}}],"line":82},"26":{"loc":{"start":{"line":92,"column":16},"end":{"line":100,"column":17}},"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":100,"column":17}},{"start":{"line":92,"column":16},"end":{"line":100,"column":17}}],"line":92},"27":{"loc":{"start":{"line":93,"column":20},"end":{"line":96,"column":21}},"type":"if","locations":[{"start":{"line":93,"column":20},"end":{"line":96,"column":21}},{"start":{"line":93,"column":20},"end":{"line":96,"column":21}}],"line":93},"28":{"loc":{"start":{"line":134,"column":8},"end":{"line":136,"column":9}},"type":"if","locations":[{"start":{"line":134,"column":8},"end":{"line":136,"column":9}},{"start":{"line":134,"column":8},"end":{"line":136,"column":9}}],"line":134},"29":{"loc":{"start":{"line":153,"column":8},"end":{"line":155,"column":9}},"type":"if","locations":[{"start":{"line":153,"column":8},"end":{"line":155,"column":9}},{"start":{"line":153,"column":8},"end":{"line":155,"column":9}}],"line":153},"30":{"loc":{"start":{"line":162,"column":16},"end":{"line":164,"column":17}},"type":"if","locations":[{"start":{"line":162,"column":16},"end":{"line":164,"column":17}},{"start":{"line":162,"column":16},"end":{"line":164,"column":17}}],"line":162},"31":{"loc":{"start":{"line":166,"column":16},"end":{"line":168,"column":17}},"type":"if","locations":[{"start":{"line":166,"column":16},"end":{"line":168,"column":17}},{"start":{"line":166,"column":16},"end":{"line":168,"column":17}}],"line":166}},"s":{"0":1,"1":103,"2":103,"3":103,"4":103,"5":98,"6":4,"7":103,"8":0,"9":0,"10":0,"11":1,"12":1,"13":0,"14":1,"15":1,"16":0,"17":1,"18":1,"19":1,"20":103,"21":103,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":0,"53":0,"54":1,"55":0,"56":1,"57":0,"58":1,"59":0,"60":1,"61":1,"62":1,"63":1,"64":1,"65":5945,"66":5945,"67":5944,"68":5944,"69":0,"70":1,"71":1,"72":0,"73":1,"74":1,"75":5944,"76":5944,"77":5944,"78":64612,"79":5944,"80":0,"81":1,"82":1,"83":1,"84":1,"85":1,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":39,"97":39,"98":39,"99":39,"100":25,"101":1,"102":24,"103":24,"104":0,"105":24,"106":24,"107":0,"108":39,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":1},"f":{"0":103,"1":4,"2":0,"3":1,"4":0,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":5945,"15":1,"16":64612,"17":0,"18":0,"19":39,"20":39,"21":0},"b":{"0":[1,1,1],"1":[1,0],"2":[103,0],"3":[98,5],"4":[103,103],"5":[5,98],"6":[98,5],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[0,1],"12":[1,1],"13":[1,0],"14":[103,0],"15":[103,103],"16":[1,1,1],"17":[0,1],"18":[1,1],"19":[0,1],"20":[0,0],"21":[0,0],"22":[0,1],"23":[1,1,1],"24":[0,1],"25":[0,1],"26":[5945,0],"27":[5944,1],"28":[1,0],"29":[0,0],"30":[1,24],"31":[0,24]},"inputSourceMap":{"version":3,"file":"/Users/stephaniesong/Desktop/CPSC 310/project_team170/src/controller/InsightFacade.ts","sources":["/Users/stephaniesong/Desktop/CPSC 310/project_team170/src/controller/InsightFacade.ts"],"names":[],"mappings":"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","sourcesContent":["import * as fs from \"fs\";\nimport JSZip from \"jszip\";\nimport {\n\tIInsightFacade,\n\tInsightDataset,\n\tInsightDatasetKind,\n\tInsightError,\n\tInsightResult,\n\tNotFoundError\n} from \"./IInsightFacade\";\nimport {Section} from \"./section\";\n\n\nimport {QueryValidator} from \"./utilities/QueryValidator\";\nimport {PerformQuery} from \"./utilities/PerformQuery\";\n\n/**\n * This is the main programmatic entry point for the project.\n * Method documentation is in IInsightFacade\n *\n */\nexport default class InsightFacade implements IInsightFacade {\n\tpublic datasets: Map<string, any[]>;\n\n\tconstructor() {\n\t\tthis.datasets = new Map();\n\n\t\t// crash handling\n\t\tthis.crash();\n\t}\n\n\t// crash handling\n\tprivate crash() {\n\t\tif (fs.existsSync(\"./data\")) {\n\t\t\tconst disk: string[] = fs.readdirSync(\"./data\");\n\n\t\t\t// if datasets is missing courses compared to disk\n\t\t\tif (this.datasets.size < disk.length) {\n\t\t\t\tfor (const file of disk) {\n\t\t\t\t\tconst datasetId = file.replace(\".json\", \"\");\n\n\t\t\t\t\tif (!this.datasets.has(datasetId)) {\n\t\t\t\t\t\tconst fileContent = fs.readFileSync(\"./data/\" + datasetId + \".json\", \"utf-8\");\n\t\t\t\t\t\tconst datasetContent = JSON.parse(fileContent);\n\t\t\t\t\t\tthis.datasets.set(datasetId, datasetContent);\n\t\t\t\t\t\tthis.datasets.set(datasetId, datasetContent);\n\t\t\t\t\t\t// TODO: when crash happens, populate datasets from disk\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async addDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]> {\n\t\ttry {\n\t\t\t// Make sure id is valid\n\t\t\tthis.validateDatasetId(id);\n\n\t\t\t// Make sure kind is valid\n\t\t\tthis.validateKind(kind);\n\n\t\t\t// Check if the dataset with the same id already exists\n\t\t\tthis.checkDuplicateId(id);\n\n\t\t\t// Extract and validate content\n\t\t\tconst contentUnzipped = await this.extractContent(content);\n\n\t\t\t// Parse content\n\t\t\tthis.saveContent(id, contentUnzipped);\n\n\t\t\t// console.log([...this.datasets.values()]);\n\t\t\t// return id after dataset successfully added\n\t\t\tlet datasetIds: string[] = Array.from(this.datasets.keys());\n\t\t\treturn Promise.resolve(datasetIds);\n\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t\treturn Promise.reject(error);\n\t\t}\n\t}\n\n\t// Make sure id is valid\n\tprivate validateDatasetId(id: string) {\n\t\tif (id === \"\" || id.includes(\"_\") || id === \" \") {\n\t\t\tthrow new InsightError(\"Invalid dataset id\");\n\t\t}\n\t}\n\n\t// Make sure kind is valid\n\tprivate validateKind(kind: InsightDatasetKind) {\n\t\tif (kind !== InsightDatasetKind.Sections) {\n\t\t\tthrow new InsightError(\"Invalid dataset kind\");\n\t\t}\n\t}\n\n\t// Check if the dataset with the same id already exists\n\tprivate checkDuplicateId(id: string) {\n\t\tif (this.datasets.has(id)) {\n\t\t\tthrow new InsightError(\"Dataset id already exist\");\n\t\t}\n\t}\n\n\tprivate async extractContent(content: string){\n\t\ttry {\n\t\t\tlet promises: Array<Promise<string>> = [];\n\t\t\tlet zip = new JSZip();\n\t\t\tzip = await JSZip.loadAsync(content, {base64: true});\n\n\t\t\t// for each to iterate through jszip object\n\t\t\tzip.forEach((relativePath, file) => {\n\t\t\t\tif (relativePath.startsWith(\"courses/\")) {\n\t\t\t\t\tif (!relativePath.endsWith(\"/\")){\n\t\t\t\t\t\t// call await promise.all on array to hold all those promises & push promise onto array\n\t\t\t\t\t\t// Access the contents of the file and add it to the result array\n\t\t\t\t\t\tconst promiseFile = file.async(\"string\");\n\t\t\t\t\t\tpromises.push(promiseFile);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthrow new InsightError(\"Invalid content (folder not named courses or empty)\");\n\t\t\t\t}\n\t\t\t});\n\t\t\tconst courseFiles: string[] = await Promise.all(promises);\n\t\t\t// console.log(courseFiles);\n\t\t\treturn courseFiles;\n\t\t} catch (error) {\n\t\t\tthrow new InsightError(\"Invalid content\");\n\t\t}\n\t}\n\n\tprivate saveContent(id: string, contentUnzipped: string[]){\n\t\tlet allSections: Section[] = [];\n\n\t\tfor (const str of contentUnzipped){\n\t\t\ttry {\n\t\t\t\t// console.log(str);\n\t\t\t\t// console.log(\"inside try\");\n\t\t\t\tconst jsonData = JSON.parse(str);\n\t\t\t\t// console.log(\"inside parse\");\n\t\t\t\t// console.log(jsonData);\n\t\t\t\tconst sections: Section[] = jsonData.result.map((course: any) => ({\n\t\t\t\t\ttitle: course.Title,\n\t\t\t\t\tuuid: course.id,\n\t\t\t\t\tinstructor: course.Professor,\n\t\t\t\t\taudit: course.Audit,\n\t\t\t\t\tyear: course.Year,\n\t\t\t\t\tid: course.Course,\n\t\t\t\t\tpass: course.Pass,\n\t\t\t\t\tfail: course.Fail,\n\t\t\t\t\tavg: course.Avg,\n\t\t\t\t\tdept: course.Subject\n\t\t\t\t}));\n\t\t\t\tallSections = allSections.concat(sections);\n\t\t\t} catch (error) {\n\t\t\t\tthrow new InsightError(\"Invalid content\");\n\t\t\t}\n\t\t}\n\n\t\tthis.datasets.set(id, allSections);\n\t\tconst serializedSections = JSON.stringify(allSections);\n\t\t// console.log(serializedSections);\n\t\tif (!fs.existsSync(\"./data\")) {\n\t\t\tfs.mkdirSync(\"./data\");\n\t\t}\n\t\tfs.writeFileSync(\"./data/\" + id + \".json\", serializedSections, \"utf-8\");\n\t}\n\n\tpublic removeDataset(id: string): Promise<string> {\n\t\ttry {\n\t\t\t// Make sure id is valid\n\t\t\tthis.validateDatasetId(id);\n\n\t\t\t// Make sure id exist\n\t\t\tthis.idExist(id);\n\n\t\t\t// Remove dataset\n\t\t\tthis.datasets.delete(id);\n\t\t\tfs.unlinkSync(\"./data/\" + id + \".json\");\n\n\t\t\treturn Promise.resolve(id);\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t\treturn Promise.reject(error);\n\t\t}\n\t}\n\n\tprivate idExist(id: string) {\n\t\tif (!fs.existsSync(\"./data/\" + id + \".json\")) {\n\t\t\tthrow new NotFoundError(\"Dataset id does not exist\");\n\t\t}\n\t}\n\n\tpublic performQuery(query: unknown): Promise<InsightResult[]> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst queryValidator = new QueryValidator();\n\t\t\ttry {\n\t\t\t\tconst datasetID = queryValidator.queryValidator(query);\n\t\t\t\tif (!this.datasets.has(datasetID)) {\n\t\t\t\t\tthrow new InsightError(\"Reference dataset id not added yet.\");\n\t\t\t\t}\n\t\t\t\tconst datasetContent = this.datasets.get(datasetID);\n\t\t\t\tif (!datasetContent){\n\t\t\t\t\tthrow new InsightError(\"Dataset content not found for the given id.\");\n\t\t\t\t}\n\t\t\t\tconst performQueryHelper = new PerformQuery();\n\t\t\t\tconst results = performQueryHelper.performQueryHelper(query, datasetContent);\n\t\t\t\treturn Promise.resolve(results);\n\t\t\t} catch (error) {\n\t\t\t\treturn Promise.reject(error);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic async listDatasets(): Promise<InsightDataset[]> {\n\t\tlet datasetList: InsightDataset[] = [];\n\t\t// let totalRows = 0;\n\n\t\tfor (let [key, value] of this.datasets) {\n\t\t\t// totalRows += value.length;\n\t\t\tconst dataset: InsightDataset = {\n\t\t\t\tid: key,\n\t\t\t\tkind: InsightDatasetKind.Sections,\n\t\t\t\tnumRows: value.length\n\t\t\t};\n\t\t\tdatasetList.push(dataset);\n\t\t}\n\t\tconsole.log(datasetList);\n\t\treturn Promise.resolve(datasetList);\n\t}\n}\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"145cfe71270929e89a91214b13da64e2ba97ec69","contentHash":"9a39a0b04e0a7a9fd1c93c15e218873a67cf5fe8019bc05042d37840305ad1e7"},"/Users/stephaniesong/Desktop/CPSC 310/project_team170/src/controller/utilities/QueryValidator.ts":{"path":"/Users/stephaniesong/Desktop/CPSC 310/project_team170/src/controller/utilities/QueryValidator.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"2":{"start":{"line":4,"column":25},"end":{"line":4,"column":53}},"3":{"start":{"line":6,"column":14},"end":{"line":6,"column":54}},"4":{"start":{"line":7,"column":14},"end":{"line":7,"column":59}},"5":{"start":{"line":9,"column":8},"end":{"line":26,"column":9}},"6":{"start":{"line":10,"column":25},"end":{"line":10,"column":43}},"7":{"start":{"line":11,"column":12},"end":{"line":13,"column":13}},"8":{"start":{"line":12,"column":16},"end":{"line":12,"column":92}},"9":{"start":{"line":14,"column":12},"end":{"line":18,"column":13}},"10":{"start":{"line":15,"column":16},"end":{"line":17,"column":17}},"11":{"start":{"line":16,"column":20},"end":{"line":16,"column":84}},"12":{"start":{"line":19,"column":23},"end":{"line":19,"column":62}},"13":{"start":{"line":20,"column":12},"end":{"line":20,"column":52}},"14":{"start":{"line":21,"column":12},"end":{"line":21,"column":22}},"15":{"start":{"line":24,"column":12},"end":{"line":24,"column":33}},"16":{"start":{"line":25,"column":12},"end":{"line":25,"column":24}},"17":{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},"18":{"start":{"line":30,"column":12},"end":{"line":30,"column":24}},"19":{"start":{"line":32,"column":24},"end":{"line":32,"column":42}},"20":{"start":{"line":33,"column":8},"end":{"line":35,"column":9}},"21":{"start":{"line":34,"column":12},"end":{"line":34,"column":107}},"22":{"start":{"line":36,"column":24},"end":{"line":36,"column":45}},"23":{"start":{"line":37,"column":8},"end":{"line":51,"column":9}},"24":{"start":{"line":38,"column":12},"end":{"line":38,"column":71}},"25":{"start":{"line":40,"column":13},"end":{"line":51,"column":9}},"26":{"start":{"line":41,"column":12},"end":{"line":41,"column":67}},"27":{"start":{"line":43,"column":13},"end":{"line":51,"column":9}},"28":{"start":{"line":44,"column":12},"end":{"line":44,"column":67}},"29":{"start":{"line":46,"column":13},"end":{"line":51,"column":9}},"30":{"start":{"line":47,"column":12},"end":{"line":47,"column":64}},"31":{"start":{"line":50,"column":12},"end":{"line":50,"column":88}},"32":{"start":{"line":54,"column":8},"end":{"line":56,"column":9}},"33":{"start":{"line":55,"column":12},"end":{"line":55,"column":68}},"34":{"start":{"line":57,"column":8},"end":{"line":61,"column":9}},"35":{"start":{"line":58,"column":12},"end":{"line":60,"column":13}},"36":{"start":{"line":59,"column":16},"end":{"line":59,"column":85}},"37":{"start":{"line":62,"column":8},"end":{"line":62,"column":20}},"38":{"start":{"line":65,"column":21},"end":{"line":65,"column":48}},"39":{"start":{"line":66,"column":8},"end":{"line":68,"column":9}},"40":{"start":{"line":67,"column":12},"end":{"line":67,"column":85}},"41":{"start":{"line":69,"column":8},"end":{"line":69,"column":20}},"42":{"start":{"line":72,"column":21},"end":{"line":72,"column":48}},"43":{"start":{"line":73,"column":22},"end":{"line":73,"column":39}},"44":{"start":{"line":74,"column":8},"end":{"line":76,"column":9}},"45":{"start":{"line":75,"column":12},"end":{"line":75,"column":85}},"46":{"start":{"line":77,"column":8},"end":{"line":79,"column":9}},"47":{"start":{"line":78,"column":12},"end":{"line":78,"column":102}},"48":{"start":{"line":80,"column":8},"end":{"line":80,"column":20}},"49":{"start":{"line":83,"column":8},"end":{"line":85,"column":9}},"50":{"start":{"line":84,"column":12},"end":{"line":84,"column":39}},"51":{"start":{"line":86,"column":8},"end":{"line":88,"column":9}},"52":{"start":{"line":87,"column":12},"end":{"line":87,"column":57}},"53":{"start":{"line":89,"column":8},"end":{"line":91,"column":9}},"54":{"start":{"line":90,"column":12},"end":{"line":90,"column":25}},"55":{"start":{"line":92,"column":8},"end":{"line":92,"column":20}},"56":{"start":{"line":95,"column":8},"end":{"line":97,"column":9}},"57":{"start":{"line":96,"column":12},"end":{"line":96,"column":71}},"58":{"start":{"line":98,"column":8},"end":{"line":98,"column":49}},"59":{"start":{"line":101,"column":8},"end":{"line":126,"column":9}},"60":{"start":{"line":102,"column":25},"end":{"line":102,"column":45}},"61":{"start":{"line":103,"column":12},"end":{"line":105,"column":13}},"62":{"start":{"line":104,"column":16},"end":{"line":104,"column":83}},"63":{"start":{"line":106,"column":12},"end":{"line":110,"column":13}},"64":{"start":{"line":107,"column":16},"end":{"line":109,"column":17}},"65":{"start":{"line":108,"column":20},"end":{"line":108,"column":87}},"66":{"start":{"line":111,"column":12},"end":{"line":113,"column":13}},"67":{"start":{"line":112,"column":16},"end":{"line":112,"column":93}},"68":{"start":{"line":114,"column":23},"end":{"line":114,"column":53}},"69":{"start":{"line":115,"column":33},"end":{"line":115,"column":75}},"70":{"start":{"line":116,"column":12},"end":{"line":121,"column":13}},"71":{"start":{"line":117,"column":16},"end":{"line":119,"column":17}},"72":{"start":{"line":118,"column":20},"end":{"line":118,"column":82}},"73":{"start":{"line":120,"column":16},"end":{"line":120,"column":68}},"74":{"start":{"line":122,"column":12},"end":{"line":122,"column":22}},"75":{"start":{"line":125,"column":12},"end":{"line":125,"column":83}},"76":{"start":{"line":129,"column":24},"end":{"line":129,"column":39}},"77":{"start":{"line":130,"column":28},"end":{"line":130,"column":38}},"78":{"start":{"line":131,"column":8},"end":{"line":133,"column":9}},"79":{"start":{"line":132,"column":12},"end":{"line":132,"column":45}},"80":{"start":{"line":134,"column":8},"end":{"line":134,"column":70}},"81":{"start":{"line":137,"column":8},"end":{"line":144,"column":9}},"82":{"start":{"line":138,"column":12},"end":{"line":140,"column":13}},"83":{"start":{"line":139,"column":16},"end":{"line":139,"column":86}},"84":{"start":{"line":141,"column":12},"end":{"line":143,"column":13}},"85":{"start":{"line":142,"column":16},"end":{"line":142,"column":81}},"86":{"start":{"line":145,"column":8},"end":{"line":145,"column":23}},"87":{"start":{"line":148,"column":22},"end":{"line":148,"column":38}},"88":{"start":{"line":149,"column":8},"end":{"line":151,"column":9}},"89":{"start":{"line":150,"column":12},"end":{"line":150,"column":25}},"90":{"start":{"line":152,"column":8},"end":{"line":152,"column":41}},"91":{"start":{"line":155,"column":8},"end":{"line":157,"column":9}},"92":{"start":{"line":156,"column":12},"end":{"line":156,"column":100}},"93":{"start":{"line":160,"column":0},"end":{"line":160,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":26},"end":{"line":27,"column":5}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":30},"end":{"line":52,"column":5}},"line":28},"2":{"name":"(anonymous_2)","decl":{"start":{"line":53,"column":4},"end":{"line":53,"column":5}},"loc":{"start":{"line":53,"column":50},"end":{"line":63,"column":5}},"line":53},"3":{"name":"(anonymous_3)","decl":{"start":{"line":64,"column":4},"end":{"line":64,"column":5}},"loc":{"start":{"line":64,"column":42},"end":{"line":70,"column":5}},"line":64},"4":{"name":"(anonymous_4)","decl":{"start":{"line":71,"column":4},"end":{"line":71,"column":5}},"loc":{"start":{"line":71,"column":42},"end":{"line":81,"column":5}},"line":71},"5":{"name":"(anonymous_5)","decl":{"start":{"line":82,"column":4},"end":{"line":82,"column":5}},"loc":{"start":{"line":82,"column":31},"end":{"line":93,"column":5}},"line":82},"6":{"name":"(anonymous_6)","decl":{"start":{"line":94,"column":4},"end":{"line":94,"column":5}},"loc":{"start":{"line":94,"column":36},"end":{"line":99,"column":5}},"line":94},"7":{"name":"(anonymous_7)","decl":{"start":{"line":100,"column":4},"end":{"line":100,"column":5}},"loc":{"start":{"line":100,"column":30},"end":{"line":127,"column":5}},"line":100},"8":{"name":"(anonymous_8)","decl":{"start":{"line":128,"column":4},"end":{"line":128,"column":5}},"loc":{"start":{"line":128,"column":30},"end":{"line":135,"column":5}},"line":128},"9":{"name":"(anonymous_9)","decl":{"start":{"line":136,"column":4},"end":{"line":136,"column":5}},"loc":{"start":{"line":136,"column":34},"end":{"line":146,"column":5}},"line":136},"10":{"name":"(anonymous_10)","decl":{"start":{"line":147,"column":4},"end":{"line":147,"column":5}},"loc":{"start":{"line":147,"column":38},"end":{"line":153,"column":5}},"line":147},"11":{"name":"(anonymous_11)","decl":{"start":{"line":154,"column":4},"end":{"line":154,"column":5}},"loc":{"start":{"line":154,"column":43},"end":{"line":158,"column":5}},"line":154}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":12},"end":{"line":13,"column":13}},"type":"if","locations":[{"start":{"line":11,"column":12},"end":{"line":13,"column":13}},{"start":{"line":11,"column":12},"end":{"line":13,"column":13}}],"line":11},"1":{"loc":{"start":{"line":11,"column":16},"end":{"line":11,"column":68}},"type":"binary-expr","locations":[{"start":{"line":11,"column":16},"end":{"line":11,"column":39}},{"start":{"line":11,"column":43},"end":{"line":11,"column":68}}],"line":11},"2":{"loc":{"start":{"line":15,"column":16},"end":{"line":17,"column":17}},"type":"if","locations":[{"start":{"line":15,"column":16},"end":{"line":17,"column":17}},{"start":{"line":15,"column":16},"end":{"line":17,"column":17}}],"line":15},"3":{"loc":{"start":{"line":15,"column":20},"end":{"line":15,"column":56}},"type":"binary-expr","locations":[{"start":{"line":15,"column":20},"end":{"line":15,"column":35}},{"start":{"line":15,"column":39},"end":{"line":15,"column":56}}],"line":15},"4":{"loc":{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},{"start":{"line":29,"column":8},"end":{"line":31,"column":9}}],"line":29},"5":{"loc":{"start":{"line":33,"column":8},"end":{"line":35,"column":9}},"type":"if","locations":[{"start":{"line":33,"column":8},"end":{"line":35,"column":9}},{"start":{"line":33,"column":8},"end":{"line":35,"column":9}}],"line":33},"6":{"loc":{"start":{"line":37,"column":8},"end":{"line":51,"column":9}},"type":"if","locations":[{"start":{"line":37,"column":8},"end":{"line":51,"column":9}},{"start":{"line":37,"column":8},"end":{"line":51,"column":9}}],"line":37},"7":{"loc":{"start":{"line":37,"column":12},"end":{"line":37,"column":53}},"type":"binary-expr","locations":[{"start":{"line":37,"column":12},"end":{"line":37,"column":31}},{"start":{"line":37,"column":35},"end":{"line":37,"column":53}}],"line":37},"8":{"loc":{"start":{"line":40,"column":13},"end":{"line":51,"column":9}},"type":"if","locations":[{"start":{"line":40,"column":13},"end":{"line":51,"column":9}},{"start":{"line":40,"column":13},"end":{"line":51,"column":9}}],"line":40},"9":{"loc":{"start":{"line":40,"column":17},"end":{"line":40,"column":79}},"type":"binary-expr","locations":[{"start":{"line":40,"column":17},"end":{"line":40,"column":35}},{"start":{"line":40,"column":39},"end":{"line":40,"column":57}},{"start":{"line":40,"column":61},"end":{"line":40,"column":79}}],"line":40},"10":{"loc":{"start":{"line":43,"column":13},"end":{"line":51,"column":9}},"type":"if","locations":[{"start":{"line":43,"column":13},"end":{"line":51,"column":9}},{"start":{"line":43,"column":13},"end":{"line":51,"column":9}}],"line":43},"11":{"loc":{"start":{"line":46,"column":13},"end":{"line":51,"column":9}},"type":"if","locations":[{"start":{"line":46,"column":13},"end":{"line":51,"column":9}},{"start":{"line":46,"column":13},"end":{"line":51,"column":9}}],"line":46},"12":{"loc":{"start":{"line":54,"column":8},"end":{"line":56,"column":9}},"type":"if","locations":[{"start":{"line":54,"column":8},"end":{"line":56,"column":9}},{"start":{"line":54,"column":8},"end":{"line":56,"column":9}}],"line":54},"13":{"loc":{"start":{"line":54,"column":12},"end":{"line":54,"column":75}},"type":"binary-expr","locations":[{"start":{"line":54,"column":12},"end":{"line":54,"column":43}},{"start":{"line":54,"column":47},"end":{"line":54,"column":75}}],"line":54},"14":{"loc":{"start":{"line":58,"column":12},"end":{"line":60,"column":13}},"type":"if","locations":[{"start":{"line":58,"column":12},"end":{"line":60,"column":13}},{"start":{"line":58,"column":12},"end":{"line":60,"column":13}}],"line":58},"15":{"loc":{"start":{"line":66,"column":8},"end":{"line":68,"column":9}},"type":"if","locations":[{"start":{"line":66,"column":8},"end":{"line":68,"column":9}},{"start":{"line":66,"column":8},"end":{"line":68,"column":9}}],"line":66},"16":{"loc":{"start":{"line":66,"column":12},"end":{"line":66,"column":96}},"type":"binary-expr","locations":[{"start":{"line":66,"column":12},"end":{"line":66,"column":55}},{"start":{"line":66,"column":59},"end":{"line":66,"column":96}}],"line":66},"17":{"loc":{"start":{"line":74,"column":8},"end":{"line":76,"column":9}},"type":"if","locations":[{"start":{"line":74,"column":8},"end":{"line":76,"column":9}},{"start":{"line":74,"column":8},"end":{"line":76,"column":9}}],"line":74},"18":{"loc":{"start":{"line":74,"column":12},"end":{"line":74,"column":84}},"type":"binary-expr","locations":[{"start":{"line":74,"column":12},"end":{"line":74,"column":55}},{"start":{"line":74,"column":59},"end":{"line":74,"column":84}}],"line":74},"19":{"loc":{"start":{"line":77,"column":8},"end":{"line":79,"column":9}},"type":"if","locations":[{"start":{"line":77,"column":8},"end":{"line":79,"column":9}},{"start":{"line":77,"column":8},"end":{"line":79,"column":9}}],"line":77},"20":{"loc":{"start":{"line":83,"column":8},"end":{"line":85,"column":9}},"type":"if","locations":[{"start":{"line":83,"column":8},"end":{"line":85,"column":9}},{"start":{"line":83,"column":8},"end":{"line":85,"column":9}}],"line":83},"21":{"loc":{"start":{"line":86,"column":8},"end":{"line":88,"column":9}},"type":"if","locations":[{"start":{"line":86,"column":8},"end":{"line":88,"column":9}},{"start":{"line":86,"column":8},"end":{"line":88,"column":9}}],"line":86},"22":{"loc":{"start":{"line":89,"column":8},"end":{"line":91,"column":9}},"type":"if","locations":[{"start":{"line":89,"column":8},"end":{"line":91,"column":9}},{"start":{"line":89,"column":8},"end":{"line":91,"column":9}}],"line":89},"23":{"loc":{"start":{"line":95,"column":8},"end":{"line":97,"column":9}},"type":"if","locations":[{"start":{"line":95,"column":8},"end":{"line":97,"column":9}},{"start":{"line":95,"column":8},"end":{"line":97,"column":9}}],"line":95},"24":{"loc":{"start":{"line":95,"column":12},"end":{"line":95,"column":78}},"type":"binary-expr","locations":[{"start":{"line":95,"column":12},"end":{"line":95,"column":40}},{"start":{"line":95,"column":44},"end":{"line":95,"column":78}}],"line":95},"25":{"loc":{"start":{"line":103,"column":12},"end":{"line":105,"column":13}},"type":"if","locations":[{"start":{"line":103,"column":12},"end":{"line":105,"column":13}},{"start":{"line":103,"column":12},"end":{"line":105,"column":13}}],"line":103},"26":{"loc":{"start":{"line":107,"column":16},"end":{"line":109,"column":17}},"type":"if","locations":[{"start":{"line":107,"column":16},"end":{"line":109,"column":17}},{"start":{"line":107,"column":16},"end":{"line":109,"column":17}}],"line":107},"27":{"loc":{"start":{"line":107,"column":20},"end":{"line":107,"column":56}},"type":"binary-expr","locations":[{"start":{"line":107,"column":20},"end":{"line":107,"column":37}},{"start":{"line":107,"column":41},"end":{"line":107,"column":56}}],"line":107},"28":{"loc":{"start":{"line":111,"column":12},"end":{"line":113,"column":13}},"type":"if","locations":[{"start":{"line":111,"column":12},"end":{"line":113,"column":13}},{"start":{"line":111,"column":12},"end":{"line":113,"column":13}}],"line":111},"29":{"loc":{"start":{"line":111,"column":16},"end":{"line":111,"column":79}},"type":"binary-expr","locations":[{"start":{"line":111,"column":16},"end":{"line":111,"column":47}},{"start":{"line":111,"column":51},"end":{"line":111,"column":79}}],"line":111},"30":{"loc":{"start":{"line":116,"column":12},"end":{"line":121,"column":13}},"type":"if","locations":[{"start":{"line":116,"column":12},"end":{"line":121,"column":13}},{"start":{"line":116,"column":12},"end":{"line":121,"column":13}}],"line":116},"31":{"loc":{"start":{"line":117,"column":16},"end":{"line":119,"column":17}},"type":"if","locations":[{"start":{"line":117,"column":16},"end":{"line":119,"column":17}},{"start":{"line":117,"column":16},"end":{"line":119,"column":17}}],"line":117},"32":{"loc":{"start":{"line":131,"column":8},"end":{"line":133,"column":9}},"type":"if","locations":[{"start":{"line":131,"column":8},"end":{"line":133,"column":9}},{"start":{"line":131,"column":8},"end":{"line":133,"column":9}}],"line":131},"33":{"loc":{"start":{"line":131,"column":12},"end":{"line":131,"column":72}},"type":"binary-expr","locations":[{"start":{"line":131,"column":12},"end":{"line":131,"column":43}},{"start":{"line":131,"column":47},"end":{"line":131,"column":72}}],"line":131},"34":{"loc":{"start":{"line":138,"column":12},"end":{"line":140,"column":13}},"type":"if","locations":[{"start":{"line":138,"column":12},"end":{"line":140,"column":13}},{"start":{"line":138,"column":12},"end":{"line":140,"column":13}}],"line":138},"35":{"loc":{"start":{"line":141,"column":12},"end":{"line":143,"column":13}},"type":"if","locations":[{"start":{"line":141,"column":12},"end":{"line":143,"column":13}},{"start":{"line":141,"column":12},"end":{"line":143,"column":13}}],"line":141},"36":{"loc":{"start":{"line":141,"column":16},"end":{"line":141,"column":112}},"type":"binary-expr","locations":[{"start":{"line":141,"column":16},"end":{"line":141,"column":62}},{"start":{"line":141,"column":66},"end":{"line":141,"column":112}}],"line":141},"37":{"loc":{"start":{"line":149,"column":8},"end":{"line":151,"column":9}},"type":"if","locations":[{"start":{"line":149,"column":8},"end":{"line":151,"column":9}},{"start":{"line":149,"column":8},"end":{"line":151,"column":9}}],"line":149},"38":{"loc":{"start":{"line":149,"column":12},"end":{"line":149,"column":49}},"type":"binary-expr","locations":[{"start":{"line":149,"column":12},"end":{"line":149,"column":30}},{"start":{"line":149,"column":34},"end":{"line":149,"column":49}}],"line":149},"39":{"loc":{"start":{"line":155,"column":8},"end":{"line":157,"column":9}},"type":"if","locations":[{"start":{"line":155,"column":8},"end":{"line":157,"column":9}},{"start":{"line":155,"column":8},"end":{"line":157,"column":9}}],"line":155},"40":{"loc":{"start":{"line":155,"column":12},"end":{"line":155,"column":70}},"type":"binary-expr","locations":[{"start":{"line":155,"column":12},"end":{"line":155,"column":37}},{"start":{"line":155,"column":41},"end":{"line":155,"column":70}}],"line":155}},"s":{"0":1,"1":1,"2":1,"3":39,"4":39,"5":39,"6":39,"7":39,"8":3,"9":36,"10":73,"11":1,"12":35,"13":30,"14":25,"15":14,"16":14,"17":62,"18":0,"19":62,"20":62,"21":0,"22":62,"23":62,"24":16,"25":46,"26":26,"27":20,"28":16,"29":4,"30":2,"31":2,"32":16,"33":1,"34":15,"35":30,"36":0,"37":14,"38":26,"39":26,"40":0,"41":26,"42":16,"43":16,"44":16,"45":0,"46":16,"47":1,"48":14,"49":16,"50":7,"51":15,"52":7,"53":15,"54":1,"55":14,"56":2,"57":0,"58":2,"59":35,"60":35,"61":35,"62":1,"63":34,"64":59,"65":0,"66":34,"67":1,"68":33,"69":32,"70":31,"71":23,"72":0,"73":23,"74":30,"75":5,"76":33,"77":33,"78":33,"79":32,"80":1,"81":32,"82":98,"83":0,"84":98,"85":1,"86":31,"87":201,"88":201,"89":1,"90":200,"91":23,"92":1,"93":1},"f":{"0":39,"1":62,"2":16,"3":26,"4":16,"5":16,"6":2,"7":35,"8":33,"9":32,"10":201,"11":23},"b":{"0":[3,36],"1":[39,37],"2":[1,72],"3":[73,37],"4":[0,62],"5":[0,62],"6":[16,46],"7":[62,53],"8":[26,20],"9":[46,41,26],"10":[16,4],"11":[2,2],"12":[1,15],"13":[16,16],"14":[0,29],"15":[0,26],"16":[26,23],"17":[0,16],"18":[16,14],"19":[1,14],"20":[7,8],"21":[7,8],"22":[1,14],"23":[0,2],"24":[2,2],"25":[1,34],"26":[0,59],"27":[59,25],"28":[1,33],"29":[34,34],"30":[23,8],"31":[0,23],"32":[32,1],"33":[33,33],"34":[0,98],"35":[1,97],"36":[98,61],"37":[1,200],"38":[201,200],"39":[1,22],"40":[23,23]},"inputSourceMap":{"version":3,"file":"/Users/stephaniesong/Desktop/CPSC 310/project_team170/src/controller/utilities/QueryValidator.ts","sources":["/Users/stephaniesong/Desktop/CPSC 310/project_team170/src/controller/utilities/QueryValidator.ts"],"names":[],"mappings":";;;AAAA,sDAA+C;AAE/C,MAAa,cAAc;IAClB,OAAO,GAAa,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;IAC7D,OAAO,GAAa,CAAC,MAAM,EAAE,IAAI,EAAE,YAAY,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;IAEnE,cAAc,CAAC,KAAU;QAC/B,IAAI;YACH,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAGhC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;gBACzD,MAAM,IAAI,6BAAY,CAAC,kCAAkC,CAAC,CAAC;aAC3D;YAGD,KAAK,IAAI,GAAG,IAAI,IAAI,EAAE;gBACrB,IAAI,GAAG,KAAK,OAAO,IAAI,GAAG,KAAK,SAAS,EAAE;oBACzC,MAAM,IAAI,6BAAY,CAAC,sBAAsB,CAAC,CAAC;iBAC/C;aACD;YAED,MAAM,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;YACnD,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC;SACV;QAAC,OAAO,KAAK,EAAE;YACf,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACrB,MAAM,KAAK,CAAC;SACZ;IACF,CAAC;IAEO,cAAc,CAAC,KAAU,EAAE,EAAU;QAE5C,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;YACpC,OAAO,IAAI,CAAC;SACZ;QAED,MAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAEnC,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;YACvB,MAAM,IAAI,6BAAY,CAAC,oCAAoC,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;SAC9E;QAED,IAAI,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QACtC,IAAI,SAAS,KAAK,KAAK,IAAI,SAAS,KAAK,IAAI,EAAC;YAC7C,OAAO,IAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC,CAAC;SAC3D;aAAM,IAAI,SAAS,KAAK,IAAI,IAAI,SAAS,KAAK,IAAI,IAAI,SAAS,KAAK,IAAI,EAAC;YACzE,OAAO,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC,CAAC;SACvD;aAAM,IAAI,SAAS,KAAK,IAAI,EAAC;YAC7B,OAAO,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC,CAAC;SACvD;aAAM,IAAI,SAAS,KAAK,KAAK,EAAC;YAC9B,OAAO,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC,CAAC;SACpD;aAAM;YACN,MAAM,IAAI,6BAAY,CAAC,sBAAsB,GAAG,SAAS,CAAC,CAAC;SAC3D;IACF,CAAC;IAEO,wBAAwB,CAAC,eAAsB,EAAE,EAAU;QAClE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,eAAe,CAAC,IAAI,eAAe,CAAC,MAAM,KAAK,CAAC,EAAC;YACnE,MAAM,IAAI,6BAAY,CAAC,cAAc,CAAC,CAAC;SACvC;QAED,KAAK,IAAI,SAAS,IAAI,eAAe,EAAE;YACtC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,EAAE,CAAC,EAAE;gBACxC,MAAM,IAAI,6BAAY,CAAC,2BAA2B,CAAC,CAAC;aACpD;SACD;QACD,OAAO,IAAI,CAAC;IACb,CAAC;IAEO,oBAAoB,CAAC,WAAgB,EAAE,EAAU;QACxD,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;QAGzC,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,OAAO,WAAW,CAAC,IAAI,CAAC,KAAK,QAAQ,EAAC;YACxF,MAAM,IAAI,6BAAY,CAAC,+BAA+B,CAAC,CAAC;SACxD;QACD,OAAO,IAAI,CAAC;IACb,CAAC;IAEO,oBAAoB,CAAC,WAAgB,EAAE,EAAU;QACxD,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;QACzC,MAAM,KAAK,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC;QAGhC,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAC;YAC5E,MAAM,IAAI,6BAAY,CAAC,+BAA+B,CAAC,CAAC;SACxD;QAGD,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,EAAE;YACrC,MAAM,IAAI,6BAAY,CAAC,wCAAwC,GAAG,KAAK,CAAC,CAAC;SACzE;QAED,OAAO,IAAI,CAAC;IACb,CAAC;IAEO,mBAAmB,CAAC,KAAa;QAExC,IAAI,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;YAC1B,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;SAC3B;QACD,IAAI,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;YACxB,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;SAC7C;QAGD,IAAI,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;YACxB,OAAO,KAAK,CAAC;SACb;QAED,OAAO,IAAI,CAAC;IACb,CAAC;IAEO,iBAAiB,CAAC,QAAa,EAAE,EAAU;QAClD,IAAI,OAAO,QAAQ,KAAK,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,KAAK,CAAC,EAAC;YACtE,MAAM,IAAI,6BAAY,CAAC,iBAAiB,CAAC,CAAC;SAC1C;QACD,OAAO,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;IAC1C,CAAC;IAEO,gBAAgB,CAAC,OAAY;QACpC,IAAG;YACF,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAElC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;gBAC9B,MAAM,IAAI,6BAAY,CAAC,yBAAyB,CAAC,CAAC;aAClD;YAGD,KAAK,IAAI,GAAG,IAAI,IAAI,EAAE;gBACrB,IAAI,GAAG,KAAK,SAAS,IAAI,GAAG,KAAK,OAAO,EAAE;oBACzC,MAAM,IAAI,6BAAY,CAAC,yBAAyB,CAAC,CAAC;iBAClD;aACD;YAGD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;gBACpE,MAAM,IAAI,6BAAY,CAAC,mCAAmC,CAAC,CAAC;aAC5D;YAED,MAAM,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;YAC1C,MAAM,YAAY,GAAa,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;YAE1E,IAAI,OAAO,CAAC,KAAK,EAAC;gBACjB,IAAI,OAAO,OAAO,CAAC,KAAK,KAAK,QAAQ,EAAE;oBACtC,MAAM,IAAI,6BAAY,CAAC,oBAAoB,CAAC,CAAC;iBAC7C;gBACD,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,KAAK,EAAE,YAAY,EAAE,EAAE,CAAC,CAAC;aACpD;YAED,OAAO,EAAE,CAAC;SACV;QAAC,OAAO,KAAK,EAAC;YACd,MAAM,IAAI,6BAAY,CAAC,6BAA6B,CAAC,CAAC;SACtD;IACF,CAAC;IAEO,gBAAgB,CAAC,OAAY;QACpC,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;QAChC,MAAM,WAAW,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;QAC/B,IAAI,OAAO,WAAW,KAAK,QAAQ,IAAI,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;YACjE,OAAO,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;SACjC;QACD,MAAM,IAAI,6BAAY,CAAC,oBAAoB,CAAC,CAAC;IAC9C,CAAC;IAEO,gBAAgB,CAAC,OAAc,EAAE,EAAU;QAClD,KAAK,IAAI,MAAM,IAAI,OAAO,EAAE;YAC3B,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;gBAC/B,MAAM,IAAI,6BAAY,CAAC,4BAA4B,CAAC,CAAC;aACrD;YACD,IAAG,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE;gBACpG,MAAM,IAAI,6BAAY,CAAC,uBAAuB,CAAC,CAAC;aAChD;SACD;QACD,OAAO,OAAO,CAAC;IAChB,CAAC;IAIO,cAAc,CAAC,KAAa,EAAE,EAAU,EAAE,MAAgB;QACjE,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC/B,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE;YAC1C,OAAO,KAAK,CAAC;SACb;QACD,OAAO,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC;IAEO,aAAa,CAAC,KAAa,EAAE,YAAsB,EAAE,EAAU;QACtE,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;YAC/D,MAAM,IAAI,6BAAY,CAAC,8CAA8C,CAAC,CAAC;SACvE;IACF,CAAC;CACD;AA/LD,wCA+LC","sourcesContent":["import {InsightError} from \"../IInsightFacade\";\n\nexport class QueryValidator{\n\tprivate mfields: string[] = [\"avg\", \"pass\", \"fail\", \"audit\", \"year\"];\n\tprivate sfields: string[] = [\"dept\", \"id\", \"instructor\", \"title\", \"uuid\"];\n\n\tpublic queryValidator(query: any) {\n\t\ttry {\n\t\t\tconst keys = Object.keys(query);\n\n\t\t\t// make sure both WHERE and OPTIONS exist\n\t\t\tif (!keys.includes(\"WHERE\") || !keys.includes(\"OPTIONS\")) {\n\t\t\t\tthrow new InsightError(\"Missing WHERE or OPTIONS or both\");\n\t\t\t}\n\n\t\t\t// make sure nothing weird is in the mix\n\t\t\tfor (let key of keys) {\n\t\t\t\tif (key !== \"WHERE\" && key !== \"OPTIONS\") {\n\t\t\t\t\tthrow new InsightError(\"Excess keys in query\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst id = this.optionsValidator(query[\"OPTIONS\"]);\n\t\t\tthis.whereValidator(query[\"WHERE\"], id);\n\t\t\treturn id;\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tprivate whereValidator(where: any, id: string): boolean{\n\t\t// true if WHERE is empty, we just probably have over 5k results\n\t\tif (Object.keys(where).length === 0) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst filters = Object.keys(where);\n\t\t// false if there are more than one filter key not nested\n\t\tif (filters.length > 1) {\n\t\t\tthrow new InsightError(\"WHERE should only have 1 key, has \" + filters.length);\n\t\t}\n\n\t\tlet filterKey = Object.keys(where)[0];\n\t\tif (filterKey === \"AND\" || filterKey === \"OR\"){\n\t\t\treturn this.logicComparisonValidator(where[filterKey], id);\n\t\t} else if (filterKey === \"LT\" || filterKey === \"GT\" || filterKey === \"EQ\"){\n\t\t\treturn this.mComparisonValidator(where[filterKey], id);\n\t\t} else if (filterKey === \"IS\"){\n\t\t\treturn this.sComparisonValidator(where[filterKey], id);\n\t\t} else if (filterKey === \"NOT\"){\n\t\t\treturn this.negationValidator(where[filterKey], id);\n\t\t} else {\n\t\t\tthrow new InsightError(\"Invalid filter key: \" + filterKey);\n\t\t}\n\t}\n\n\tprivate logicComparisonValidator(logicComparison: any[], id: string): boolean {\n\t\tif (!Array.isArray(logicComparison) || logicComparison.length === 0){\n\t\t\tthrow new InsightError(\"Wrong logic.\");\n\t\t}\n\n\t\tfor (let condition of logicComparison) {\n\t\t\tif (!this.whereValidator(condition, id)) {\n\t\t\t\tthrow new InsightError(\"Invalid direct comparison\");\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate mComparisonValidator(mComparison: any, id: string): boolean{\n\t\tconst mKey = Object.keys(mComparison)[0];\n\n\t\t// make sure key is equal to \"id_field\" and value is a number\n\t\tif (this.fieldValidator(mKey, id, this.mfields) && typeof mComparison[mKey] !== \"number\"){\n\t\t\tthrow new InsightError(\"Invalid value in mComparison.\");\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate sComparisonValidator(sComparison: any, id: string): boolean{\n\t\tconst sKey = Object.keys(sComparison)[0];\n\t\tconst value = sComparison[sKey];\n\n\t\t// make sure key is equal to \"id_field\" and value is a string\n\t\tif (this.fieldValidator(sKey, id, this.sfields) && typeof value !== \"string\"){\n\t\t\tthrow new InsightError(\"Invalid value in sComparison.\");\n\t\t}\n\n\t\t// Validate wildcard asterisks\n\t\tif (!this.validWildcardString(value)) {\n\t\t\tthrow new InsightError(\"Invalid wildcard string in IS filter: \" + value);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate validWildcardString(value: string): boolean {\n\t\t// Validate that if asterisks are used, and are only at the beginning and/or end, max: 1\n\t\tif (value.startsWith(\"*\")) {\n\t\t\tvalue = value.substring(1);\n\t\t}\n\t\tif (value.endsWith(\"*\")) {\n\t\t\tvalue = value.substring(0, value.length - 1);\n\t\t}\n\n\t\t// Check if there's still an asterisk in the string\n\t\tif (value.includes(\"*\")) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate negationValidator(negation: any, id: string): boolean{\n\t\tif (typeof negation !== \"object\" || Object.keys(negation).length !== 1){\n\t\t\tthrow new InsightError(\"Wrong negation.\");\n\t\t}\n\t\treturn this.whereValidator(negation, id);\n\t}\n\n\tprivate optionsValidator(options: any): string {\n\t\ttry{\n\t\t\tconst keys = Object.keys(options);\n\t\t\t// make sure COLUMNS exist\n\t\t\tif (!keys.includes(\"COLUMNS\")) {\n\t\t\t\tthrow new InsightError(\"OPTIONS missing COLUMNS\");\n\t\t\t}\n\n\t\t\t// make sure nothing weird is in the mix of COLUMNS and ORDER\n\t\t\tfor (let key of keys) {\n\t\t\t\tif (key !== \"COLUMNS\" && key !== \"ORDER\") {\n\t\t\t\t\tthrow new InsightError(\"Invalid keys in OPTIONS\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// make sure COLUMNS is an array and has at least one value\n\t\t\tif (!Array.isArray(options.COLUMNS) || options.COLUMNS.length === 0) {\n\t\t\t\tthrow new InsightError(\"COLUMNS must be a non-empty array\");\n\t\t\t}\n\n\t\t\tconst id = this.getIdFromOptions(options);\n\t\t\tconst validColumns: string[] = this.columnsValidator(options.COLUMNS, id);\n\t\t\t// ORDER is optional, it can exist or not exist\n\t\t\tif (options.ORDER){\n\t\t\t\tif (typeof options.ORDER !== \"string\") {\n\t\t\t\t\tthrow new InsightError(\"Invalid ORDER type\");\n\t\t\t\t}\n\t\t\t\tthis.validateOrder(options.ORDER, validColumns, id);\n\t\t\t}\n\n\t\t\treturn id;\n\t\t} catch (error){\n\t\t\tthrow new InsightError(\"Incorrect format of OPTIONS\");\n\t\t}\n\t}\n\n\tprivate getIdFromOptions(options: any): string {\n\t\tconst columns = options.COLUMNS;\n\t\tconst firstColumn = columns[0];\n\t\tif (typeof firstColumn === \"string\" && firstColumn.includes(\"_\")) {\n\t\t\treturn firstColumn.split(\"_\")[0];  // Split the string and get the id\n\t\t}\n\t\tthrow new InsightError(\"Invalid dataset id\");\n\t}\n\n\tprivate columnsValidator(columns: any[], id: string): string[] {\n\t\tfor (let column of columns) {\n\t\t\tif (typeof column !== \"string\") {\n\t\t\t\tthrow new InsightError(\"Invalid type of COLUMN key\");\n\t\t\t}\n\t\t\tif(!this.fieldValidator(column, id, this.mfields) && !this.fieldValidator(column, id, this.sfields)) {\n\t\t\t\tthrow new InsightError(\"Invalid COLUMNS field\");\n\t\t\t}\n\t\t}\n\t\treturn columns;\n\t}\n\n\t// pass in \"id_field\", id, and type of field\n\t// check if \"id_field\" is valid\n\tprivate fieldValidator(field: string, id: string, fields: string[]): boolean {\n\t\tconst parts = field.split(\"_\");\n\t\tif (parts.length !== 2 || parts[0] !== id) {\n\t\t\treturn false;\n\t\t}\n\t\treturn fields.includes(parts[1]);\n\t}\n\n\tprivate validateOrder(order: string, validColumns: string[], id: string) {\n\t\tif (typeof order !== \"string\" || !validColumns.includes(order)) {\n\t\t\tthrow new InsightError(\"Wrong order or order not included in columns\");\n\t\t}\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f915ef4d415fa5d017674953ce3f347f511e58b8","contentHash":"950bdc81f4da1f2812625ca9e6113db22fec369a39383c92bc9a0e2328a63b62"},"/Users/stephaniesong/Desktop/CPSC 310/project_team170/src/controller/utilities/PerformQuery.ts":{"path":"/Users/stephaniesong/Desktop/CPSC 310/project_team170/src/controller/utilities/PerformQuery.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":4,"column":25},"end":{"line":4,"column":53}},"3":{"start":{"line":6,"column":20},"end":{"line":6,"column":22}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":44}},"5":{"start":{"line":9,"column":24},"end":{"line":9,"column":54}},"6":{"start":{"line":10,"column":8},"end":{"line":21,"column":9}},"7":{"start":{"line":11,"column":12},"end":{"line":11,"column":97}},"8":{"start":{"line":13,"column":13},"end":{"line":21,"column":9}},"9":{"start":{"line":14,"column":12},"end":{"line":14,"column":93}},"10":{"start":{"line":16,"column":13},"end":{"line":21,"column":9}},"11":{"start":{"line":17,"column":12},"end":{"line":17,"column":93}},"12":{"start":{"line":19,"column":13},"end":{"line":21,"column":9}},"13":{"start":{"line":20,"column":12},"end":{"line":20,"column":90}},"14":{"start":{"line":22,"column":8},"end":{"line":24,"column":9}},"15":{"start":{"line":23,"column":12},"end":{"line":23,"column":87}},"16":{"start":{"line":25,"column":24},"end":{"line":25,"column":51}},"17":{"start":{"line":26,"column":22},"end":{"line":26,"column":47}},"18":{"start":{"line":27,"column":28},"end":{"line":33,"column":10}},"19":{"start":{"line":28,"column":31},"end":{"line":28,"column":33}},"20":{"start":{"line":29,"column":12},"end":{"line":31,"column":13}},"21":{"start":{"line":30,"column":16},"end":{"line":30,"column":54}},"22":{"start":{"line":32,"column":12},"end":{"line":32,"column":32}},"23":{"start":{"line":34,"column":8},"end":{"line":34,"column":67}},"24":{"start":{"line":35,"column":8},"end":{"line":35,"column":34}},"25":{"start":{"line":38,"column":30},"end":{"line":38,"column":51}},"26":{"start":{"line":39,"column":27},"end":{"line":39,"column":47}},"27":{"start":{"line":40,"column":8},"end":{"line":42,"column":9}},"28":{"start":{"line":41,"column":12},"end":{"line":41,"column":98}},"29":{"start":{"line":43,"column":22},"end":{"line":43,"column":36}},"30":{"start":{"line":44,"column":8},"end":{"line":88,"column":9}},"31":{"start":{"line":46,"column":16},"end":{"line":60,"column":17}},"32":{"start":{"line":47,"column":41},"end":{"line":47,"column":66}},"33":{"start":{"line":48,"column":20},"end":{"line":59,"column":21}},"34":{"start":{"line":49,"column":24},"end":{"line":49,"column":127}},"35":{"start":{"line":49,"column":61},"end":{"line":49,"column":125}},"36":{"start":{"line":51,"column":25},"end":{"line":59,"column":21}},"37":{"start":{"line":52,"column":24},"end":{"line":52,"column":123}},"38":{"start":{"line":52,"column":61},"end":{"line":52,"column":121}},"39":{"start":{"line":54,"column":25},"end":{"line":59,"column":21}},"40":{"start":{"line":55,"column":24},"end":{"line":55,"column":123}},"41":{"start":{"line":55,"column":61},"end":{"line":55,"column":121}},"42":{"start":{"line":57,"column":25},"end":{"line":59,"column":21}},"43":{"start":{"line":58,"column":24},"end":{"line":58,"column":121}},"44":{"start":{"line":58,"column":61},"end":{"line":58,"column":119}},"45":{"start":{"line":61,"column":16},"end":{"line":61,"column":31}},"46":{"start":{"line":63,"column":38},"end":{"line":63,"column":40}},"47":{"start":{"line":64,"column":16},"end":{"line":84,"column":17}},"48":{"start":{"line":65,"column":41},"end":{"line":65,"column":66}},"49":{"start":{"line":66,"column":38},"end":{"line":66,"column":40}},"50":{"start":{"line":67,"column":20},"end":{"line":78,"column":21}},"51":{"start":{"line":68,"column":24},"end":{"line":68,"column":86}},"52":{"start":{"line":70,"column":25},"end":{"line":78,"column":21}},"53":{"start":{"line":71,"column":24},"end":{"line":71,"column":82}},"54":{"start":{"line":73,"column":25},"end":{"line":78,"column":21}},"55":{"start":{"line":74,"column":24},"end":{"line":74,"column":82}},"56":{"start":{"line":76,"column":25},"end":{"line":78,"column":21}},"57":{"start":{"line":77,"column":24},"end":{"line":77,"column":79}},"58":{"start":{"line":79,"column":20},"end":{"line":83,"column":21}},"59":{"start":{"line":80,"column":24},"end":{"line":82,"column":25}},"60":{"start":{"line":80,"column":70},"end":{"line":80,"column":127}},"61":{"start":{"line":81,"column":28},"end":{"line":81,"column":57}},"62":{"start":{"line":85,"column":16},"end":{"line":85,"column":39}},"63":{"start":{"line":87,"column":21},"end":{"line":87,"column":88}},"64":{"start":{"line":91,"column":27},"end":{"line":91,"column":44}},"65":{"start":{"line":92,"column":20},"end":{"line":92,"column":49}},"66":{"start":{"line":93,"column":22},"end":{"line":93,"column":40}},"67":{"start":{"line":94,"column":8},"end":{"line":103,"column":9}},"68":{"start":{"line":96,"column":16},"end":{"line":96,"column":84}},"69":{"start":{"line":96,"column":62},"end":{"line":96,"column":82}},"70":{"start":{"line":98,"column":16},"end":{"line":98,"column":84}},"71":{"start":{"line":98,"column":62},"end":{"line":98,"column":82}},"72":{"start":{"line":100,"column":16},"end":{"line":100,"column":86}},"73":{"start":{"line":100,"column":62},"end":{"line":100,"column":84}},"74":{"start":{"line":102,"column":16},"end":{"line":102,"column":80}},"75":{"start":{"line":106,"column":21},"end":{"line":106,"column":38}},"76":{"start":{"line":107,"column":22},"end":{"line":107,"column":29}},"77":{"start":{"line":108,"column":8},"end":{"line":122,"column":11}},"78":{"start":{"line":109,"column":33},"end":{"line":109,"column":46}},"79":{"start":{"line":110,"column":12},"end":{"line":121,"column":13}},"80":{"start":{"line":111,"column":16},"end":{"line":111,"column":83}},"81":{"start":{"line":113,"column":17},"end":{"line":121,"column":13}},"82":{"start":{"line":114,"column":16},"end":{"line":114,"column":65}},"83":{"start":{"line":116,"column":17},"end":{"line":121,"column":13}},"84":{"start":{"line":117,"column":16},"end":{"line":117,"column":85}},"85":{"start":{"line":120,"column":16},"end":{"line":120,"column":46}},"86":{"start":{"line":125,"column":30},"end":{"line":125,"column":32}},"87":{"start":{"line":126,"column":28},"end":{"line":126,"column":52}},"88":{"start":{"line":127,"column":8},"end":{"line":138,"column":9}},"89":{"start":{"line":128,"column":12},"end":{"line":128,"column":90}},"90":{"start":{"line":130,"column":13},"end":{"line":138,"column":9}},"91":{"start":{"line":131,"column":12},"end":{"line":131,"column":86}},"92":{"start":{"line":133,"column":13},"end":{"line":138,"column":9}},"93":{"start":{"line":134,"column":12},"end":{"line":134,"column":86}},"94":{"start":{"line":136,"column":13},"end":{"line":138,"column":9}},"95":{"start":{"line":137,"column":12},"end":{"line":137,"column":83}},"96":{"start":{"line":139,"column":8},"end":{"line":141,"column":11}},"97":{"start":{"line":140,"column":12},"end":{"line":140,"column":53}},"98":{"start":{"line":144,"column":8},"end":{"line":146,"column":9}},"99":{"start":{"line":145,"column":12},"end":{"line":145,"column":32}},"100":{"start":{"line":147,"column":8},"end":{"line":157,"column":11}},"101":{"start":{"line":148,"column":25},"end":{"line":148,"column":33}},"102":{"start":{"line":149,"column":25},"end":{"line":149,"column":33}},"103":{"start":{"line":150,"column":12},"end":{"line":155,"column":13}},"104":{"start":{"line":151,"column":16},"end":{"line":151,"column":41}},"105":{"start":{"line":153,"column":17},"end":{"line":155,"column":13}},"106":{"start":{"line":154,"column":16},"end":{"line":154,"column":52}},"107":{"start":{"line":156,"column":12},"end":{"line":156,"column":81}},"108":{"start":{"line":160,"column":0},"end":{"line":160,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":4},"end":{"line":7,"column":5}},"loc":{"start":{"line":7,"column":46},"end":{"line":36,"column":5}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":27,"column":51},"end":{"line":27,"column":52}},"loc":{"start":{"line":27,"column":63},"end":{"line":33,"column":9}},"line":27},"2":{"name":"(anonymous_2)","decl":{"start":{"line":37,"column":4},"end":{"line":37,"column":5}},"loc":{"start":{"line":37,"column":43},"end":{"line":89,"column":5}},"line":37},"3":{"name":"(anonymous_3)","decl":{"start":{"line":49,"column":49},"end":{"line":49,"column":50}},"loc":{"start":{"line":49,"column":61},"end":{"line":49,"column":125}},"line":49},"4":{"name":"(anonymous_4)","decl":{"start":{"line":52,"column":49},"end":{"line":52,"column":50}},"loc":{"start":{"line":52,"column":61},"end":{"line":52,"column":121}},"line":52},"5":{"name":"(anonymous_5)","decl":{"start":{"line":55,"column":49},"end":{"line":55,"column":50}},"loc":{"start":{"line":55,"column":61},"end":{"line":55,"column":121}},"line":55},"6":{"name":"(anonymous_6)","decl":{"start":{"line":58,"column":49},"end":{"line":58,"column":50}},"loc":{"start":{"line":58,"column":61},"end":{"line":58,"column":119}},"line":58},"7":{"name":"(anonymous_7)","decl":{"start":{"line":80,"column":50},"end":{"line":80,"column":51}},"loc":{"start":{"line":80,"column":70},"end":{"line":80,"column":127}},"line":80},"8":{"name":"(anonymous_8)","decl":{"start":{"line":90,"column":4},"end":{"line":90,"column":5}},"loc":{"start":{"line":90,"column":35},"end":{"line":104,"column":5}},"line":90},"9":{"name":"(anonymous_9)","decl":{"start":{"line":96,"column":49},"end":{"line":96,"column":50}},"loc":{"start":{"line":96,"column":62},"end":{"line":96,"column":82}},"line":96},"10":{"name":"(anonymous_10)","decl":{"start":{"line":98,"column":49},"end":{"line":98,"column":50}},"loc":{"start":{"line":98,"column":62},"end":{"line":98,"column":82}},"line":98},"11":{"name":"(anonymous_11)","decl":{"start":{"line":100,"column":49},"end":{"line":100,"column":50}},"loc":{"start":{"line":100,"column":62},"end":{"line":100,"column":84}},"line":100},"12":{"name":"(anonymous_12)","decl":{"start":{"line":105,"column":4},"end":{"line":105,"column":5}},"loc":{"start":{"line":105,"column":35},"end":{"line":123,"column":5}},"line":105},"13":{"name":"(anonymous_13)","decl":{"start":{"line":108,"column":37},"end":{"line":108,"column":38}},"loc":{"start":{"line":108,"column":50},"end":{"line":122,"column":9}},"line":108},"14":{"name":"(anonymous_14)","decl":{"start":{"line":124,"column":4},"end":{"line":124,"column":5}},"loc":{"start":{"line":124,"column":39},"end":{"line":142,"column":5}},"line":124},"15":{"name":"(anonymous_15)","decl":{"start":{"line":139,"column":37},"end":{"line":139,"column":38}},"loc":{"start":{"line":139,"column":49},"end":{"line":141,"column":9}},"line":139},"16":{"name":"(anonymous_16)","decl":{"start":{"line":143,"column":4},"end":{"line":143,"column":5}},"loc":{"start":{"line":143,"column":36},"end":{"line":158,"column":5}},"line":143},"17":{"name":"(anonymous_17)","decl":{"start":{"line":147,"column":33},"end":{"line":147,"column":34}},"loc":{"start":{"line":147,"column":43},"end":{"line":157,"column":9}},"line":147}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":8},"end":{"line":21,"column":9}},"type":"if","locations":[{"start":{"line":10,"column":8},"end":{"line":21,"column":9}},{"start":{"line":10,"column":8},"end":{"line":21,"column":9}}],"line":10},"1":{"loc":{"start":{"line":10,"column":12},"end":{"line":10,"column":53}},"type":"binary-expr","locations":[{"start":{"line":10,"column":12},"end":{"line":10,"column":31}},{"start":{"line":10,"column":35},"end":{"line":10,"column":53}}],"line":10},"2":{"loc":{"start":{"line":13,"column":13},"end":{"line":21,"column":9}},"type":"if","locations":[{"start":{"line":13,"column":13},"end":{"line":21,"column":9}},{"start":{"line":13,"column":13},"end":{"line":21,"column":9}}],"line":13},"3":{"loc":{"start":{"line":13,"column":17},"end":{"line":13,"column":79}},"type":"binary-expr","locations":[{"start":{"line":13,"column":17},"end":{"line":13,"column":35}},{"start":{"line":13,"column":39},"end":{"line":13,"column":57}},{"start":{"line":13,"column":61},"end":{"line":13,"column":79}}],"line":13},"4":{"loc":{"start":{"line":16,"column":13},"end":{"line":21,"column":9}},"type":"if","locations":[{"start":{"line":16,"column":13},"end":{"line":21,"column":9}},{"start":{"line":16,"column":13},"end":{"line":21,"column":9}}],"line":16},"5":{"loc":{"start":{"line":19,"column":13},"end":{"line":21,"column":9}},"type":"if","locations":[{"start":{"line":19,"column":13},"end":{"line":21,"column":9}},{"start":{"line":19,"column":13},"end":{"line":21,"column":9}}],"line":19},"6":{"loc":{"start":{"line":22,"column":8},"end":{"line":24,"column":9}},"type":"if","locations":[{"start":{"line":22,"column":8},"end":{"line":24,"column":9}},{"start":{"line":22,"column":8},"end":{"line":24,"column":9}}],"line":22},"7":{"loc":{"start":{"line":40,"column":8},"end":{"line":42,"column":9}},"type":"if","locations":[{"start":{"line":40,"column":8},"end":{"line":42,"column":9}},{"start":{"line":40,"column":8},"end":{"line":42,"column":9}}],"line":40},"8":{"loc":{"start":{"line":44,"column":8},"end":{"line":88,"column":9}},"type":"switch","locations":[{"start":{"line":45,"column":12},"end":{"line":61,"column":31}},{"start":{"line":62,"column":12},"end":{"line":86,"column":13}},{"start":{"line":87,"column":12},"end":{"line":87,"column":88}}],"line":44},"9":{"loc":{"start":{"line":48,"column":20},"end":{"line":59,"column":21}},"type":"if","locations":[{"start":{"line":48,"column":20},"end":{"line":59,"column":21}},{"start":{"line":48,"column":20},"end":{"line":59,"column":21}}],"line":48},"10":{"loc":{"start":{"line":48,"column":24},"end":{"line":48,"column":71}},"type":"binary-expr","locations":[{"start":{"line":48,"column":24},"end":{"line":48,"column":46}},{"start":{"line":48,"column":50},"end":{"line":48,"column":71}}],"line":48},"11":{"loc":{"start":{"line":51,"column":25},"end":{"line":59,"column":21}},"type":"if","locations":[{"start":{"line":51,"column":25},"end":{"line":59,"column":21}},{"start":{"line":51,"column":25},"end":{"line":59,"column":21}}],"line":51},"12":{"loc":{"start":{"line":51,"column":29},"end":{"line":51,"column":100}},"type":"binary-expr","locations":[{"start":{"line":51,"column":29},"end":{"line":51,"column":50}},{"start":{"line":51,"column":54},"end":{"line":51,"column":75}},{"start":{"line":51,"column":79},"end":{"line":51,"column":100}}],"line":51},"13":{"loc":{"start":{"line":54,"column":25},"end":{"line":59,"column":21}},"type":"if","locations":[{"start":{"line":54,"column":25},"end":{"line":59,"column":21}},{"start":{"line":54,"column":25},"end":{"line":59,"column":21}}],"line":54},"14":{"loc":{"start":{"line":57,"column":25},"end":{"line":59,"column":21}},"type":"if","locations":[{"start":{"line":57,"column":25},"end":{"line":59,"column":21}},{"start":{"line":57,"column":25},"end":{"line":59,"column":21}}],"line":57},"15":{"loc":{"start":{"line":67,"column":20},"end":{"line":78,"column":21}},"type":"if","locations":[{"start":{"line":67,"column":20},"end":{"line":78,"column":21}},{"start":{"line":67,"column":20},"end":{"line":78,"column":21}}],"line":67},"16":{"loc":{"start":{"line":67,"column":24},"end":{"line":67,"column":71}},"type":"binary-expr","locations":[{"start":{"line":67,"column":24},"end":{"line":67,"column":46}},{"start":{"line":67,"column":50},"end":{"line":67,"column":71}}],"line":67},"17":{"loc":{"start":{"line":70,"column":25},"end":{"line":78,"column":21}},"type":"if","locations":[{"start":{"line":70,"column":25},"end":{"line":78,"column":21}},{"start":{"line":70,"column":25},"end":{"line":78,"column":21}}],"line":70},"18":{"loc":{"start":{"line":70,"column":29},"end":{"line":70,"column":100}},"type":"binary-expr","locations":[{"start":{"line":70,"column":29},"end":{"line":70,"column":50}},{"start":{"line":70,"column":54},"end":{"line":70,"column":75}},{"start":{"line":70,"column":79},"end":{"line":70,"column":100}}],"line":70},"19":{"loc":{"start":{"line":73,"column":25},"end":{"line":78,"column":21}},"type":"if","locations":[{"start":{"line":73,"column":25},"end":{"line":78,"column":21}},{"start":{"line":73,"column":25},"end":{"line":78,"column":21}}],"line":73},"20":{"loc":{"start":{"line":76,"column":25},"end":{"line":78,"column":21}},"type":"if","locations":[{"start":{"line":76,"column":25},"end":{"line":78,"column":21}},{"start":{"line":76,"column":25},"end":{"line":78,"column":21}}],"line":76},"21":{"loc":{"start":{"line":80,"column":24},"end":{"line":82,"column":25}},"type":"if","locations":[{"start":{"line":80,"column":24},"end":{"line":82,"column":25}},{"start":{"line":80,"column":24},"end":{"line":82,"column":25}}],"line":80},"22":{"loc":{"start":{"line":94,"column":8},"end":{"line":103,"column":9}},"type":"switch","locations":[{"start":{"line":95,"column":12},"end":{"line":96,"column":84}},{"start":{"line":97,"column":12},"end":{"line":98,"column":84}},{"start":{"line":99,"column":12},"end":{"line":100,"column":86}},{"start":{"line":101,"column":12},"end":{"line":102,"column":80}}],"line":94},"23":{"loc":{"start":{"line":110,"column":12},"end":{"line":121,"column":13}},"type":"if","locations":[{"start":{"line":110,"column":12},"end":{"line":121,"column":13}},{"start":{"line":110,"column":12},"end":{"line":121,"column":13}}],"line":110},"24":{"loc":{"start":{"line":110,"column":16},"end":{"line":110,"column":60}},"type":"binary-expr","locations":[{"start":{"line":110,"column":16},"end":{"line":110,"column":37}},{"start":{"line":110,"column":41},"end":{"line":110,"column":60}}],"line":110},"25":{"loc":{"start":{"line":113,"column":17},"end":{"line":121,"column":13}},"type":"if","locations":[{"start":{"line":113,"column":17},"end":{"line":121,"column":13}},{"start":{"line":113,"column":17},"end":{"line":121,"column":13}}],"line":113},"26":{"loc":{"start":{"line":116,"column":17},"end":{"line":121,"column":13}},"type":"if","locations":[{"start":{"line":116,"column":17},"end":{"line":121,"column":13}},{"start":{"line":116,"column":17},"end":{"line":121,"column":13}}],"line":116},"27":{"loc":{"start":{"line":127,"column":8},"end":{"line":138,"column":9}},"type":"if","locations":[{"start":{"line":127,"column":8},"end":{"line":138,"column":9}},{"start":{"line":127,"column":8},"end":{"line":138,"column":9}}],"line":127},"28":{"loc":{"start":{"line":127,"column":12},"end":{"line":127,"column":57}},"type":"binary-expr","locations":[{"start":{"line":127,"column":12},"end":{"line":127,"column":33}},{"start":{"line":127,"column":37},"end":{"line":127,"column":57}}],"line":127},"29":{"loc":{"start":{"line":130,"column":13},"end":{"line":138,"column":9}},"type":"if","locations":[{"start":{"line":130,"column":13},"end":{"line":138,"column":9}},{"start":{"line":130,"column":13},"end":{"line":138,"column":9}}],"line":130},"30":{"loc":{"start":{"line":130,"column":17},"end":{"line":130,"column":85}},"type":"binary-expr","locations":[{"start":{"line":130,"column":17},"end":{"line":130,"column":37}},{"start":{"line":130,"column":41},"end":{"line":130,"column":61}},{"start":{"line":130,"column":65},"end":{"line":130,"column":85}}],"line":130},"31":{"loc":{"start":{"line":133,"column":13},"end":{"line":138,"column":9}},"type":"if","locations":[{"start":{"line":133,"column":13},"end":{"line":138,"column":9}},{"start":{"line":133,"column":13},"end":{"line":138,"column":9}}],"line":133},"32":{"loc":{"start":{"line":136,"column":13},"end":{"line":138,"column":9}},"type":"if","locations":[{"start":{"line":136,"column":13},"end":{"line":138,"column":9}},{"start":{"line":136,"column":13},"end":{"line":138,"column":9}}],"line":136},"33":{"loc":{"start":{"line":144,"column":8},"end":{"line":146,"column":9}},"type":"if","locations":[{"start":{"line":144,"column":8},"end":{"line":146,"column":9}},{"start":{"line":144,"column":8},"end":{"line":146,"column":9}}],"line":144},"34":{"loc":{"start":{"line":144,"column":12},"end":{"line":144,"column":40}},"type":"binary-expr","locations":[{"start":{"line":144,"column":12},"end":{"line":144,"column":18}},{"start":{"line":144,"column":22},"end":{"line":144,"column":40}}],"line":144},"35":{"loc":{"start":{"line":150,"column":12},"end":{"line":155,"column":13}},"type":"if","locations":[{"start":{"line":150,"column":12},"end":{"line":155,"column":13}},{"start":{"line":150,"column":12},"end":{"line":155,"column":13}}],"line":150},"36":{"loc":{"start":{"line":150,"column":16},"end":{"line":150,"column":72}},"type":"binary-expr","locations":[{"start":{"line":150,"column":16},"end":{"line":150,"column":42}},{"start":{"line":150,"column":46},"end":{"line":150,"column":72}}],"line":150},"37":{"loc":{"start":{"line":153,"column":17},"end":{"line":155,"column":13}},"type":"if","locations":[{"start":{"line":153,"column":17},"end":{"line":155,"column":13}},{"start":{"line":153,"column":17},"end":{"line":155,"column":13}}],"line":153},"38":{"loc":{"start":{"line":153,"column":21},"end":{"line":153,"column":77}},"type":"binary-expr","locations":[{"start":{"line":153,"column":21},"end":{"line":153,"column":47}},{"start":{"line":153,"column":51},"end":{"line":153,"column":77}}],"line":153}},"s":{"0":1,"1":1,"2":1,"3":24,"4":24,"5":24,"6":24,"7":10,"8":14,"9":11,"10":3,"11":2,"12":1,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":10,"26":10,"27":10,"28":0,"29":10,"30":10,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":10,"64":12,"65":12,"66":12,"67":12,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":12,"75":2,"76":2,"77":2,"78":2,"79":2,"80":1,"81":1,"82":0,"83":1,"84":1,"85":0,"86":1,"87":1,"88":1,"89":0,"90":1,"91":1,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":1},"f":{"0":24,"1":0,"2":10,"3":0,"4":0,"5":0,"6":0,"7":0,"8":12,"9":0,"10":0,"11":0,"12":2,"13":2,"14":1,"15":0,"16":0,"17":0},"b":{"0":[10,14],"1":[24,19],"2":[11,3],"3":[14,11,5],"4":[2,1],"5":[1,0],"6":[0,0],"7":[0,10],"8":[0,0,10],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0,0,12],"23":[1,1],"24":[2,1],"25":[0,1],"26":[1,0],"27":[0,1],"28":[1,1],"29":[1,0],"30":[1,0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/stephaniesong/Desktop/CPSC 310/project_team170/src/controller/utilities/PerformQuery.ts","sources":["/Users/stephaniesong/Desktop/CPSC 310/project_team170/src/controller/utilities/PerformQuery.ts"],"names":[],"mappings":"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","sourcesContent":["import {InsightError, InsightResult, ResultTooLargeError} from \"../IInsightFacade\";\n\nexport class PerformQuery{\n\tpublic insightResult: InsightResult[] = [];\n\n\tpublic performQueryHelper(query: any, datasetContent: any[]): InsightResult[]{\n\t\tthis.insightResult = datasetContent;\n\t\tlet filterKey = Object.keys(query[\"WHERE\"])[0];\n\t\tif (filterKey === \"AND\" || filterKey === \"OR\"){\n\t\t\tthis.insightResult = this.logicComparison(query[\"WHERE\"][filterKey], datasetContent);\n\t\t} else if (filterKey === \"LT\" || filterKey === \"GT\" || filterKey === \"EQ\"){\n\t\t\tthis.insightResult = this.mComparison(query[\"WHERE\"][filterKey], datasetContent);\n\t\t} else if (filterKey === \"IS\"){\n\t\t\tthis.insightResult = this.sComparison(query[\"WHERE\"][filterKey], datasetContent);\n\t\t} else if (filterKey === \"NOT\"){\n\t\t\tthis.insightResult = this.negation(query[\"WHERE\"][filterKey], datasetContent);\n\t\t}\n\n\t\tif (this.insightResult.length > 5000) {\n\t\t\tthrow new ResultTooLargeError(\"The result is too large.\");\n\t\t}\n\n\t\tconst columns = query[\"OPTIONS\"][\"COLUMNS\"];\n\t\tconst order = query[\"OPTIONS\"][\"ORDER\"];\n\t\tlet optionsResult = this.insightResult.map((result) => {\n\t\t\tlet columnResult: InsightResult = {};\n\t\t\tfor (let column of columns){\n\t\t\t\tcolumnResult[column] = result[column];\n\t\t\t}\n\t\t\treturn columnResult;\n\t\t});\n\t\tthis.insightResult = this.orderQuery(optionsResult, order);\n\t\treturn this.insightResult;\n\t}\n\n\tprivate logicComparison(logic: any, datasetContent: any[]): InsightResult[]{\n\t\tconst logicOperator: string = Object.keys(logic)[0];\n\t\tconst conditions = logic[logicOperator];\n\t\tif (conditions.length === 0){\n\t\t\tthrow new InsightError(\"No conditions provided for logic operator.\");\n\t\t}\n\t\tlet results: InsightResult[] = datasetContent;\n\t\tswitch (logicOperator){\n\t\t\tcase \"AND\":\n\t\t\t\tfor (let condition of conditions) {\n\t\t\t\t\tconst conditionKey = Object.keys(condition)[0];\n\t\t\t\t\tif (conditionKey === \"AND\" || conditionKey === \"OR\") {\n\t\t\t\t\t\tresults = results.filter((result) =>\n\t\t\t\t\t\t\tthis.logicComparison(condition, datasetContent).includes(result));\n\t\t\t\t\t} else if (conditionKey === \"LT\" || conditionKey === \"GT\" || conditionKey === \"EQ\") {\n\t\t\t\t\t\tresults = results.filter((result) =>\n\t\t\t\t\t\t\tthis.mComparison(condition, datasetContent).includes(result));\n\t\t\t\t\t} else if (conditionKey === \"IS\") {\n\t\t\t\t\t\tresults = results.filter((result) =>\n\t\t\t\t\t\t\tthis.sComparison(condition, datasetContent).includes(result));\n\t\t\t\t\t} else if (conditionKey === \"NOT\") {\n\t\t\t\t\t\tresults = results.filter((result) =>\n\t\t\t\t\t\t\t!this.negation(condition, datasetContent).includes(result));\n\t\t\t\t\t}\n\t\t\t\t}return results;\n\t\t\tcase \"OR\": {\n\t\t\t\tlet combinedResults: InsightResult[] = [];\n\t\t\t\tfor (let condition of conditions) {\n\t\t\t\t\tconst conditionKey = Object.keys(condition)[0];\n\t\t\t\t\tlet tempResults: InsightResult[] = [];\n\t\t\t\t\tif (conditionKey === \"AND\" || conditionKey === \"OR\") {\n\t\t\t\t\t\ttempResults = this.logicComparison(condition, datasetContent);\n\t\t\t\t\t} else if (conditionKey === \"LT\" || conditionKey === \"GT\" || conditionKey === \"EQ\") {\n\t\t\t\t\t\ttempResults = this.mComparison(condition, datasetContent);\n\t\t\t\t\t} else if (conditionKey === \"IS\") {\n\t\t\t\t\t\ttempResults = this.sComparison(condition, datasetContent);\n\t\t\t\t\t} else if (conditionKey === \"NOT\") {\n\t\t\t\t\t\ttempResults = this.negation(condition, datasetContent);\n\t\t\t\t\t}\n\t\t\t\t\tfor (let result of tempResults) {\n\t\t\t\t\t\tif (!combinedResults.some((combinedResult) =>\n\t\t\t\t\t\t\tJSON.stringify(combinedResult) === JSON.stringify(result))) {\n\t\t\t\t\t\t\tcombinedResults.push(result);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}return combinedResults;\n\t\t\t}\n\t\t\tdefault: throw new InsightError(\"Invalid logic operator.\");\n\t\t}\n\t}\n\n\tprivate mComparison(m: any, datasetContent: any[]): InsightResult[]{\n\t\tconst comparator: string = Object.keys(m)[0];\n\t\tconst key: string = Object.keys(m[comparator])[0];\n\t\tconst value: number = m[comparator][key];\n\n\t\tswitch (comparator) {\n\t\t\tcase \"GT\":\n\t\t\t\treturn this.insightResult.filter((section) => section[key] > value);\n\t\t\tcase \"LT\":\n\t\t\t\treturn this.insightResult.filter((section) => section[key] < value);\n\t\t\tcase \"EQ\":\n\t\t\t\treturn this.insightResult.filter((section) => section[key] === value);\n\t\t\tdefault:\n\t\t\t\tthrow new InsightError(\"Invalid M COMPARATOR\");\n\t\t}\n\t}\n\n\tprivate sComparison(s: any, datasetContent: any[]): InsightResult[]{\n\t\tconst sKey: string = Object.keys(s)[0];\n\t\tconst value: string = s[sKey];\n\t\treturn datasetContent.filter((section: any) => {\n\t\t\tconst sectionValue: string = section[sKey] as string;\n\n\t\t\tif (value.startsWith(\"*\") && value.endsWith(\"*\")) {\n\t\t\t\treturn sectionValue.includes(value.substring(1, value.length - 1));\n\t\t\t} else if (value.startsWith(\"*\")) {\n\t\t\t\treturn sectionValue.endsWith(value.substring(1));\n\t\t\t} else if (value.endsWith(\"*\")) {\n\t\t\t\treturn sectionValue.startsWith(value.substring(0, value.length - 1));\n\t\t\t} else {\n\t\t\t\treturn sectionValue === value;\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate negation(negation: any, datasetContent: any[]): InsightResult[]{\n\t\tlet negationResults: InsightResult[] = [];\n\t\tconst negationKey = Object.keys(negation)[0];\n\t\tif (negationKey === \"AND\" || negationKey === \"OR\"){\n\t\t\tnegationResults = this.logicComparison(negation[negationKey], datasetContent);\n\t\t} else if (negationKey === \"LT\" || negationKey === \"GT\" || negationKey === \"EQ\"){\n\t\t\tnegationResults = this.mComparison(negation[negationKey], datasetContent);\n\t\t} else if (negationKey === \"IS\"){\n\t\t\tnegationResults = this.sComparison(negation[negationKey], datasetContent);\n\t\t} else if (negationKey === \"NOT\"){\n\t\t\tnegationResults = this.negation(negation[negationKey], datasetContent);\n\t\t}\n\t\treturn datasetContent.filter((result) => {\n\t\t\treturn !negationResults.includes(result);\n\t\t});\n\t}\n\n\tprivate orderQuery(orderDataset: InsightResult[], order: any): InsightResult[]{\n\t\tif (!order || order.length === 0) {\n\t\t\treturn orderDataset;\n\t\t}\n\t\treturn orderDataset.sort((a: any, b: any) => {\n\t\t\tlet aValue = a[order];\n\t\t\tlet bValue = b[order];\n\t\t\tif (typeof aValue === \"number\" && typeof bValue === \"number\") {\n\t\t\t\treturn (aValue - bValue);\n\t\t\t} else if (typeof aValue === \"string\" && typeof bValue === \"string\") {\n\t\t\t\treturn aValue.localeCompare(bValue);\n\t\t\t}\n\t\t\tthrow new InsightError(\"Wrong type for order key.\");\n\t\t});\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ad4a2938ac44dc02ffc79557e4fdbc5cbcccf2f2","contentHash":"dc0a740a515fa20387d15043ec5dab644edfc8e64f564d19204cd1a2b8929dac"}}