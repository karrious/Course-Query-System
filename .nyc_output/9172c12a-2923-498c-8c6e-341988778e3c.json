{"C:\\Users\\karry\\IdeaProjects\\project_team170\\src\\controller\\IInsightFacade.ts":{"path":"C:\\Users\\karry\\IdeaProjects\\project_team170\\src\\controller\\IInsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":113}},"2":{"start":{"line":5,"column":0},"end":{"line":8,"column":89}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":48}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":42}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":23}},"6":{"start":{"line":12,"column":8},"end":{"line":12,"column":52}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}},"8":{"start":{"line":18,"column":8},"end":{"line":18,"column":23}},"9":{"start":{"line":19,"column":8},"end":{"line":19,"column":53}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":38}},"11":{"start":{"line":25,"column":8},"end":{"line":25,"column":23}},"12":{"start":{"line":26,"column":8},"end":{"line":26,"column":59}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":31},"end":{"line":8,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":25},"end":{"line":13,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":25},"end":{"line":20,"column":5}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":25},"end":{"line":27,"column":5}},"line":24}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":24},"end":{"line":8,"column":87}},"type":"binary-expr","locations":[{"start":{"line":8,"column":24},"end":{"line":8,"column":50}},{"start":{"line":8,"column":55},"end":{"line":8,"column":86}}],"line":8}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":40,"6":40,"7":1,"8":2,"9":2,"10":1,"11":1,"12":1,"13":1},"f":{"0":1,"1":40,"2":2,"3":1},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"C:/Users/karry/IdeaProjects/project_team170/src/controller/IInsightFacade.ts","sources":["C:/Users/karry/IdeaProjects/project_team170/src/controller/IInsightFacade.ts"],"names":[],"mappings":";;;AAMA,IAAY,kBAGX;AAHD,WAAY,kBAAkB;IAC7B,2CAAqB,CAAA;IACrB,qCAAe,CAAA;AAChB,CAAC,EAHW,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAG7B;AAYD,MAAa,YAAa,SAAQ,KAAK;IACtC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IAC7C,CAAC;CACD;AALD,oCAKC;AAED,MAAa,aAAc,SAAQ,KAAK;IACvC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;IAC9C,CAAC;CACD;AALD,sCAKC;AAED,MAAa,mBAAoB,SAAQ,KAAK;IAC7C,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;IACpD,CAAC;CACD;AALD,kDAKC","sourcesContent":["/*\r\n * This is the primary high-level API for the project. In this folder there should be:\r\n * A class called InsightFacade, this should be in a file called InsightFacade.ts.\r\n * You should not change this interface at all or the test suite will not work.\r\n */\r\n\r\nexport enum InsightDatasetKind {\r\n\tSections = \"sections\",\r\n\tRooms = \"rooms\",\r\n}\r\n\r\nexport interface InsightDataset {\r\n\tid: string;\r\n\tkind: InsightDatasetKind;\r\n\tnumRows: number;\r\n}\r\n\r\nexport interface InsightResult {\r\n\t[key: string]: string | number;\r\n}\r\n\r\nexport class InsightError extends Error {\r\n\tconstructor(message?: string) {\r\n\t\tsuper(message);\r\n\t\tError.captureStackTrace(this, InsightError);\r\n\t}\r\n}\r\n\r\nexport class NotFoundError extends Error {\r\n\tconstructor(message?: string) {\r\n\t\tsuper(message);\r\n\t\tError.captureStackTrace(this, NotFoundError);\r\n\t}\r\n}\r\n\r\nexport class ResultTooLargeError extends Error {\r\n\tconstructor(message?: string) {\r\n\t\tsuper(message);\r\n\t\tError.captureStackTrace(this, ResultTooLargeError);\r\n\t}\r\n}\r\n\r\nexport interface IInsightFacade {\r\n\t/**\r\n\t * Add a dataset to insightUBC.\r\n\t *\r\n\t * @param id  The id of the dataset being added. Follows the format /^[^_]+$/\r\n\t * @param content  The base64 content of the dataset. This content should be in the form of a serialized zip file.\r\n\t * @param kind  The kind of the dataset\r\n\t *\r\n\t * @return Promise <string[]>\r\n\t *\r\n\t * The promise should fulfill on a successful add, reject for any failures.\r\n\t * The promise should fulfill with a string array,\r\n\t * containing the ids of all currently added datasets upon a successful add.\r\n\t * The promise should reject with an InsightError describing the error.\r\n\t *\r\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\r\n\t * If id is the same as the id of an already added dataset, the dataset should be rejected and not saved.\r\n\t *\r\n\t * After receiving the dataset, it should be processed into a data structure of\r\n\t * your design. The processed data structure should be persisted to disk; your\r\n\t * system should be able to load this persisted value into memory for answering\r\n\t * queries.\r\n\t *\r\n\t * Ultimately, a dataset must be added or loaded from disk before queries can\r\n\t * be successfully answered.\r\n\t */\r\n\taddDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]>;\r\n\r\n\t/**\r\n\t * Remove a dataset from insightUBC.\r\n\t *\r\n\t * @param id  The id of the dataset to remove. Follows the format /^[^_]+$/\r\n\t *\r\n\t * @return Promise <string>\r\n\t *\r\n\t * The promise should fulfill upon a successful removal, reject on any error.\r\n\t * Attempting to remove a dataset that hasn't been added yet counts as an error.\r\n\t *\r\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\r\n\t *\r\n\t * The promise should fulfill the id of the dataset that was removed.\r\n\t * The promise should reject with a NotFoundError (if a valid id was not yet added)\r\n\t * or an InsightError (invalid id or any other source of failure) describing the error.\r\n\t *\r\n\t * This will delete both disk and memory caches for the dataset for the id meaning\r\n\t * that subsequent queries for that id should fail unless a new addDataset happens first.\r\n\t */\r\n\tremoveDataset(id: string): Promise<string>;\r\n\r\n\t/**\r\n\t * Perform a query on insightUBC.\r\n\t *\r\n\t * @param query  The query to be performed.\r\n\t *\r\n\t * If a query is incorrectly formatted, references a dataset not added (in memory or on disk),\r\n\t * or references multiple datasets, it should be rejected.\r\n\t *\r\n\t * @return Promise <InsightResult[]>\r\n\t *\r\n\t * The promise should fulfill with an array of results.\r\n\t * The promise should reject with a ResultTooLargeError (if the query returns too many results)\r\n\t * or an InsightError (for any other source of failure) describing the error.\r\n\t */\r\n\tperformQuery(query: unknown): Promise<InsightResult[]>;\r\n\r\n\t/**\r\n\t * List all currently added datasets, their types, and number of rows.\r\n\t *\r\n\t * @return Promise <InsightDataset[]>\r\n\t * The promise should fulfill an array of currently added InsightDatasets, and will only fulfill.\r\n\t */\r\n\tlistDatasets(): Promise<InsightDataset[]>;\r\n}\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"09c1b7d93373a2f6d96aa63a09b3c550a809b1c6","contentHash":"a209c46dd297814dcb9f485c6e3eb4a0dddeba6532da71953e1940f96bb7b44f"},"C:\\Users\\karry\\IdeaProjects\\project_team170\\src\\controller\\InsightFacade.ts":{"path":"C:\\Users\\karry\\IdeaProjects\\project_team170\\src\\controller\\InsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"16":{"start":{"line":19,"column":31},"end":{"line":19,"column":42}},"17":{"start":{"line":20,"column":17},"end":{"line":20,"column":19}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"19":{"start":{"line":21,"column":21},"end":{"line":21,"column":141}},"20":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"21":{"start":{"line":21,"column":109},"end":{"line":21,"column":141}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"23":{"start":{"line":23,"column":4},"end":{"line":23,"column":18}},"24":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"25":{"start":{"line":26,"column":4},"end":{"line":26,"column":62}},"26":{"start":{"line":28,"column":0},"end":{"line":28,"column":62}},"27":{"start":{"line":29,"column":11},"end":{"line":29,"column":38}},"28":{"start":{"line":30,"column":16},"end":{"line":30,"column":49}},"29":{"start":{"line":31,"column":25},"end":{"line":31,"column":52}},"30":{"start":{"line":32,"column":25},"end":{"line":32,"column":62}},"31":{"start":{"line":33,"column":23},"end":{"line":33,"column":58}},"32":{"start":{"line":37,"column":8},"end":{"line":37,"column":34}},"33":{"start":{"line":38,"column":8},"end":{"line":38,"column":21}},"34":{"start":{"line":41,"column":8},"end":{"line":54,"column":9}},"35":{"start":{"line":42,"column":25},"end":{"line":42,"column":49}},"36":{"start":{"line":43,"column":12},"end":{"line":53,"column":13}},"37":{"start":{"line":44,"column":16},"end":{"line":52,"column":17}},"38":{"start":{"line":45,"column":38},"end":{"line":45,"column":63}},"39":{"start":{"line":46,"column":20},"end":{"line":51,"column":21}},"40":{"start":{"line":47,"column":44},"end":{"line":47,"column":101}},"41":{"start":{"line":48,"column":47},"end":{"line":48,"column":70}},"42":{"start":{"line":49,"column":24},"end":{"line":49,"column":69}},"43":{"start":{"line":50,"column":24},"end":{"line":50,"column":69}},"44":{"start":{"line":57,"column":8},"end":{"line":69,"column":9}},"45":{"start":{"line":58,"column":12},"end":{"line":58,"column":39}},"46":{"start":{"line":59,"column":12},"end":{"line":59,"column":36}},"47":{"start":{"line":60,"column":12},"end":{"line":60,"column":38}},"48":{"start":{"line":61,"column":36},"end":{"line":61,"column":70}},"49":{"start":{"line":62,"column":12},"end":{"line":62,"column":50}},"50":{"start":{"line":63,"column":29},"end":{"line":63,"column":61}},"51":{"start":{"line":64,"column":12},"end":{"line":64,"column":47}},"52":{"start":{"line":67,"column":12},"end":{"line":67,"column":31}},"53":{"start":{"line":68,"column":12},"end":{"line":68,"column":41}},"54":{"start":{"line":72,"column":8},"end":{"line":74,"column":9}},"55":{"start":{"line":73,"column":12},"end":{"line":73,"column":74}},"56":{"start":{"line":77,"column":8},"end":{"line":79,"column":9}},"57":{"start":{"line":78,"column":12},"end":{"line":78,"column":76}},"58":{"start":{"line":82,"column":8},"end":{"line":84,"column":9}},"59":{"start":{"line":83,"column":12},"end":{"line":83,"column":80}},"60":{"start":{"line":87,"column":8},"end":{"line":107,"column":9}},"61":{"start":{"line":88,"column":27},"end":{"line":88,"column":29}},"62":{"start":{"line":89,"column":22},"end":{"line":89,"column":43}},"63":{"start":{"line":90,"column":12},"end":{"line":90,"column":77}},"64":{"start":{"line":91,"column":12},"end":{"line":101,"column":15}},"65":{"start":{"line":92,"column":16},"end":{"line":100,"column":17}},"66":{"start":{"line":93,"column":20},"end":{"line":96,"column":21}},"67":{"start":{"line":94,"column":44},"end":{"line":94,"column":64}},"68":{"start":{"line":95,"column":24},"end":{"line":95,"column":51}},"69":{"start":{"line":99,"column":20},"end":{"line":99,"column":115}},"70":{"start":{"line":102,"column":32},"end":{"line":102,"column":59}},"71":{"start":{"line":103,"column":12},"end":{"line":103,"column":31}},"72":{"start":{"line":106,"column":12},"end":{"line":106,"column":71}},"73":{"start":{"line":110,"column":26},"end":{"line":110,"column":28}},"74":{"start":{"line":111,"column":8},"end":{"line":131,"column":9}},"75":{"start":{"line":112,"column":12},"end":{"line":130,"column":13}},"76":{"start":{"line":113,"column":33},"end":{"line":113,"column":48}},"77":{"start":{"line":114,"column":33},"end":{"line":125,"column":19}},"78":{"start":{"line":114,"column":66},"end":{"line":125,"column":17}},"79":{"start":{"line":126,"column":16},"end":{"line":126,"column":59}},"80":{"start":{"line":129,"column":16},"end":{"line":129,"column":75}},"81":{"start":{"line":132,"column":8},"end":{"line":132,"column":43}},"82":{"start":{"line":133,"column":35},"end":{"line":133,"column":62}},"83":{"start":{"line":134,"column":8},"end":{"line":136,"column":9}},"84":{"start":{"line":135,"column":12},"end":{"line":135,"column":35}},"85":{"start":{"line":137,"column":8},"end":{"line":137,"column":80}},"86":{"start":{"line":140,"column":8},"end":{"line":150,"column":9}},"87":{"start":{"line":141,"column":12},"end":{"line":141,"column":39}},"88":{"start":{"line":142,"column":12},"end":{"line":142,"column":29}},"89":{"start":{"line":143,"column":12},"end":{"line":143,"column":37}},"90":{"start":{"line":144,"column":12},"end":{"line":144,"column":52}},"91":{"start":{"line":145,"column":12},"end":{"line":145,"column":39}},"92":{"start":{"line":148,"column":12},"end":{"line":148,"column":31}},"93":{"start":{"line":149,"column":12},"end":{"line":149,"column":41}},"94":{"start":{"line":153,"column":8},"end":{"line":155,"column":9}},"95":{"start":{"line":154,"column":12},"end":{"line":154,"column":82}},"96":{"start":{"line":158,"column":8},"end":{"line":174,"column":9}},"97":{"start":{"line":159,"column":35},"end":{"line":159,"column":72}},"98":{"start":{"line":160,"column":30},"end":{"line":160,"column":66}},"99":{"start":{"line":161,"column":12},"end":{"line":163,"column":13}},"100":{"start":{"line":162,"column":16},"end":{"line":162,"column":95}},"101":{"start":{"line":164,"column":35},"end":{"line":164,"column":63}},"102":{"start":{"line":165,"column":12},"end":{"line":167,"column":13}},"103":{"start":{"line":166,"column":16},"end":{"line":166,"column":103}},"104":{"start":{"line":168,"column":39},"end":{"line":168,"column":72}},"105":{"start":{"line":169,"column":28},"end":{"line":169,"column":99}},"106":{"start":{"line":170,"column":12},"end":{"line":170,"column":44}},"107":{"start":{"line":173,"column":12},"end":{"line":173,"column":41}},"108":{"start":{"line":177,"column":26},"end":{"line":177,"column":28}},"109":{"start":{"line":178,"column":8},"end":{"line":185,"column":9}},"110":{"start":{"line":179,"column":28},"end":{"line":183,"column":13}},"111":{"start":{"line":184,"column":12},"end":{"line":184,"column":38}},"112":{"start":{"line":186,"column":8},"end":{"line":186,"column":33}},"113":{"start":{"line":187,"column":8},"end":{"line":187,"column":44}},"114":{"start":{"line":190,"column":0},"end":{"line":190,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":80},"end":{"line":13,"column":81}},"loc":{"start":{"line":13,"column":95},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":5},"end":{"line":15,"column":6}},"loc":{"start":{"line":15,"column":20},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":50},"end":{"line":18,"column":51}},"loc":{"start":{"line":18,"column":65},"end":{"line":24,"column":1}},"line":18},"6":{"name":"(anonymous_6)","decl":{"start":{"line":25,"column":56},"end":{"line":25,"column":57}},"loc":{"start":{"line":25,"column":71},"end":{"line":27,"column":1}},"line":25},"7":{"name":"(anonymous_7)","decl":{"start":{"line":36,"column":4},"end":{"line":36,"column":5}},"loc":{"start":{"line":36,"column":18},"end":{"line":39,"column":5}},"line":36},"8":{"name":"(anonymous_8)","decl":{"start":{"line":40,"column":4},"end":{"line":40,"column":5}},"loc":{"start":{"line":40,"column":12},"end":{"line":55,"column":5}},"line":40},"9":{"name":"(anonymous_9)","decl":{"start":{"line":56,"column":4},"end":{"line":56,"column":5}},"loc":{"start":{"line":56,"column":40},"end":{"line":70,"column":5}},"line":56},"10":{"name":"(anonymous_10)","decl":{"start":{"line":71,"column":4},"end":{"line":71,"column":5}},"loc":{"start":{"line":71,"column":26},"end":{"line":75,"column":5}},"line":71},"11":{"name":"(anonymous_11)","decl":{"start":{"line":76,"column":4},"end":{"line":76,"column":5}},"loc":{"start":{"line":76,"column":23},"end":{"line":80,"column":5}},"line":76},"12":{"name":"(anonymous_12)","decl":{"start":{"line":81,"column":4},"end":{"line":81,"column":5}},"loc":{"start":{"line":81,"column":25},"end":{"line":85,"column":5}},"line":81},"13":{"name":"(anonymous_13)","decl":{"start":{"line":86,"column":4},"end":{"line":86,"column":5}},"loc":{"start":{"line":86,"column":34},"end":{"line":108,"column":5}},"line":86},"14":{"name":"(anonymous_14)","decl":{"start":{"line":91,"column":24},"end":{"line":91,"column":25}},"loc":{"start":{"line":91,"column":48},"end":{"line":101,"column":13}},"line":91},"15":{"name":"(anonymous_15)","decl":{"start":{"line":109,"column":4},"end":{"line":109,"column":5}},"loc":{"start":{"line":109,"column":37},"end":{"line":138,"column":5}},"line":109},"16":{"name":"(anonymous_16)","decl":{"start":{"line":114,"column":53},"end":{"line":114,"column":54}},"loc":{"start":{"line":114,"column":66},"end":{"line":125,"column":17}},"line":114},"17":{"name":"(anonymous_17)","decl":{"start":{"line":139,"column":4},"end":{"line":139,"column":5}},"loc":{"start":{"line":139,"column":22},"end":{"line":151,"column":5}},"line":139},"18":{"name":"(anonymous_18)","decl":{"start":{"line":152,"column":4},"end":{"line":152,"column":5}},"loc":{"start":{"line":152,"column":16},"end":{"line":156,"column":5}},"line":152},"19":{"name":"(anonymous_19)","decl":{"start":{"line":157,"column":4},"end":{"line":157,"column":5}},"loc":{"start":{"line":157,"column":24},"end":{"line":175,"column":5}},"line":157},"20":{"name":"(anonymous_20)","decl":{"start":{"line":176,"column":4},"end":{"line":176,"column":5}},"loc":{"start":{"line":176,"column":25},"end":{"line":188,"column":5}},"line":176}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":57}},{"start":{"line":13,"column":63},"end":{"line":17,"column":1}}],"line":13},"9":{"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":1}},"type":"cond-expr","locations":[{"start":{"line":13,"column":80},"end":{"line":15,"column":1}},{"start":{"line":15,"column":5},"end":{"line":17,"column":1}}],"line":13},"10":{"loc":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":45}},{"start":{"line":18,"column":50},"end":{"line":24,"column":1}}],"line":18},"11":{"loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},{"start":{"line":19,"column":4},"end":{"line":19,"column":42}}],"line":19},"12":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":11}},{"start":{"line":19,"column":15},"end":{"line":19,"column":29}}],"line":19},"13":{"loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},{"start":{"line":21,"column":4},"end":{"line":21,"column":141}}],"line":21},"14":{"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},{"start":{"line":21,"column":40},"end":{"line":21,"column":141}}],"line":21},"15":{"loc":{"start":{"line":21,"column":44},"end":{"line":21,"column":107}},"type":"binary-expr","locations":[{"start":{"line":21,"column":44},"end":{"line":21,"column":59}},{"start":{"line":21,"column":63},"end":{"line":21,"column":107}}],"line":21},"16":{"loc":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":27}},{"start":{"line":25,"column":31},"end":{"line":25,"column":51}},{"start":{"line":25,"column":56},"end":{"line":27,"column":1}}],"line":25},"17":{"loc":{"start":{"line":26,"column":11},"end":{"line":26,"column":61}},"type":"cond-expr","locations":[{"start":{"line":26,"column":37},"end":{"line":26,"column":40}},{"start":{"line":26,"column":43},"end":{"line":26,"column":61}}],"line":26},"18":{"loc":{"start":{"line":26,"column":12},"end":{"line":26,"column":33}},"type":"binary-expr","locations":[{"start":{"line":26,"column":12},"end":{"line":26,"column":15}},{"start":{"line":26,"column":19},"end":{"line":26,"column":33}}],"line":26},"19":{"loc":{"start":{"line":41,"column":8},"end":{"line":54,"column":9}},"type":"if","locations":[{"start":{"line":41,"column":8},"end":{"line":54,"column":9}},{"start":{"line":41,"column":8},"end":{"line":54,"column":9}}],"line":41},"20":{"loc":{"start":{"line":43,"column":12},"end":{"line":53,"column":13}},"type":"if","locations":[{"start":{"line":43,"column":12},"end":{"line":53,"column":13}},{"start":{"line":43,"column":12},"end":{"line":53,"column":13}}],"line":43},"21":{"loc":{"start":{"line":46,"column":20},"end":{"line":51,"column":21}},"type":"if","locations":[{"start":{"line":46,"column":20},"end":{"line":51,"column":21}},{"start":{"line":46,"column":20},"end":{"line":51,"column":21}}],"line":46},"22":{"loc":{"start":{"line":72,"column":8},"end":{"line":74,"column":9}},"type":"if","locations":[{"start":{"line":72,"column":8},"end":{"line":74,"column":9}},{"start":{"line":72,"column":8},"end":{"line":74,"column":9}}],"line":72},"23":{"loc":{"start":{"line":72,"column":12},"end":{"line":72,"column":55}},"type":"binary-expr","locations":[{"start":{"line":72,"column":12},"end":{"line":72,"column":21}},{"start":{"line":72,"column":25},"end":{"line":72,"column":41}},{"start":{"line":72,"column":45},"end":{"line":72,"column":55}}],"line":72},"24":{"loc":{"start":{"line":77,"column":8},"end":{"line":79,"column":9}},"type":"if","locations":[{"start":{"line":77,"column":8},"end":{"line":79,"column":9}},{"start":{"line":77,"column":8},"end":{"line":79,"column":9}}],"line":77},"25":{"loc":{"start":{"line":82,"column":8},"end":{"line":84,"column":9}},"type":"if","locations":[{"start":{"line":82,"column":8},"end":{"line":84,"column":9}},{"start":{"line":82,"column":8},"end":{"line":84,"column":9}}],"line":82},"26":{"loc":{"start":{"line":92,"column":16},"end":{"line":100,"column":17}},"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":100,"column":17}},{"start":{"line":92,"column":16},"end":{"line":100,"column":17}}],"line":92},"27":{"loc":{"start":{"line":93,"column":20},"end":{"line":96,"column":21}},"type":"if","locations":[{"start":{"line":93,"column":20},"end":{"line":96,"column":21}},{"start":{"line":93,"column":20},"end":{"line":96,"column":21}}],"line":93},"28":{"loc":{"start":{"line":134,"column":8},"end":{"line":136,"column":9}},"type":"if","locations":[{"start":{"line":134,"column":8},"end":{"line":136,"column":9}},{"start":{"line":134,"column":8},"end":{"line":136,"column":9}}],"line":134},"29":{"loc":{"start":{"line":153,"column":8},"end":{"line":155,"column":9}},"type":"if","locations":[{"start":{"line":153,"column":8},"end":{"line":155,"column":9}},{"start":{"line":153,"column":8},"end":{"line":155,"column":9}}],"line":153},"30":{"loc":{"start":{"line":161,"column":12},"end":{"line":163,"column":13}},"type":"if","locations":[{"start":{"line":161,"column":12},"end":{"line":163,"column":13}},{"start":{"line":161,"column":12},"end":{"line":163,"column":13}}],"line":161},"31":{"loc":{"start":{"line":165,"column":12},"end":{"line":167,"column":13}},"type":"if","locations":[{"start":{"line":165,"column":12},"end":{"line":167,"column":13}},{"start":{"line":165,"column":12},"end":{"line":167,"column":13}}],"line":165}},"s":{"0":1,"1":103,"2":103,"3":103,"4":103,"5":98,"6":65,"7":103,"8":0,"9":0,"10":0,"11":1,"12":1,"13":0,"14":1,"15":1,"16":0,"17":1,"18":1,"19":1,"20":103,"21":103,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":23,"33":23,"34":23,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":22,"45":22,"46":19,"47":18,"48":16,"49":12,"50":12,"51":12,"52":10,"53":10,"54":28,"55":5,"56":19,"57":1,"58":18,"59":2,"60":16,"61":16,"62":16,"63":16,"64":15,"65":17849,"66":17846,"67":17843,"68":17843,"69":3,"70":12,"71":12,"72":4,"73":12,"74":12,"75":17843,"76":17843,"77":17843,"78":193974,"79":17843,"80":0,"81":12,"82":12,"83":12,"84":10,"85":12,"86":6,"87":6,"88":4,"89":2,"90":2,"91":2,"92":4,"93":4,"94":4,"95":2,"96":39,"97":39,"98":39,"99":20,"100":1,"101":19,"102":19,"103":0,"104":19,"105":19,"106":14,"107":25,"108":4,"109":4,"110":4,"111":4,"112":4,"113":4,"114":1},"f":{"0":103,"1":65,"2":0,"3":1,"4":0,"5":1,"6":1,"7":23,"8":23,"9":22,"10":28,"11":19,"12":18,"13":16,"14":17849,"15":12,"16":193974,"17":6,"18":4,"19":39,"20":4},"b":{"0":[1,1,1],"1":[1,0],"2":[103,0],"3":[98,5],"4":[103,103],"5":[5,98],"6":[98,5],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[0,1],"12":[1,1],"13":[1,0],"14":[103,0],"15":[103,103],"16":[1,1,1],"17":[0,1],"18":[1,1],"19":[1,22],"20":[1,0],"21":[1,0],"22":[5,23],"23":[28,26,24],"24":[1,18],"25":[2,16],"26":[17846,3],"27":[17843,3],"28":[10,2],"29":[2,2],"30":[1,19],"31":[0,19]},"inputSourceMap":{"version":3,"file":"C:/Users/karry/IdeaProjects/project_team170/src/controller/InsightFacade.ts","sources":["C:/Users/karry/IdeaProjects/project_team170/src/controller/InsightFacade.ts"],"names":[],"mappings":"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","sourcesContent":["import * as fs from \"fs\";\r\nimport JSZip from \"jszip\";\r\nimport {\r\n\tIInsightFacade,\r\n\tInsightDataset,\r\n\tInsightDatasetKind,\r\n\tInsightError,\r\n\tInsightResult,\r\n\tNotFoundError\r\n} from \"./IInsightFacade\";\r\nimport {Section} from \"./section\";\r\n\r\n\r\nimport {QueryValidator} from \"./utilities/QueryValidator\";\r\nimport {PerformQuery} from \"./utilities/PerformQuery\";\r\n\r\n/**\r\n * This is the main programmatic entry point for the project.\r\n * Method documentation is in IInsightFacade\r\n *\r\n */\r\nexport default class InsightFacade implements IInsightFacade {\r\n\tpublic datasets: Map<string, any[]>;\r\n\r\n\tconstructor() {\r\n\t\tthis.datasets = new Map();\r\n\r\n\t\t// crash handling\r\n\t\tthis.crash();\r\n\t}\r\n\r\n\t// crash handling\r\n\tprivate crash() {\r\n\t\tif (fs.existsSync(\"./data\")) {\r\n\t\t\tconst disk: string[] = fs.readdirSync(\"./data\");\r\n\r\n\t\t\t// if datasets is missing courses compared to disk\r\n\t\t\tif (this.datasets.size < disk.length) {\r\n\t\t\t\tfor (const file of disk) {\r\n\t\t\t\t\tconst datasetId = file.replace(\".json\", \"\");\r\n\r\n\t\t\t\t\tif (!this.datasets.has(datasetId)) {\r\n\t\t\t\t\t\tconst fileContent = fs.readFileSync(\"./data/\" + datasetId + \".json\", \"utf-8\");\r\n\t\t\t\t\t\tconst datasetContent = JSON.parse(fileContent);\r\n\t\t\t\t\t\tthis.datasets.set(datasetId, datasetContent);\r\n\t\t\t\t\t\tthis.datasets.set(datasetId, datasetContent);\r\n\t\t\t\t\t\t// TODO: when crash happens, populate datasets from disk\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic async addDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]> {\r\n\t\ttry {\r\n\t\t\t// Make sure id is valid\r\n\t\t\tthis.validateDatasetId(id);\r\n\r\n\t\t\t// Make sure kind is valid\r\n\t\t\tthis.validateKind(kind);\r\n\r\n\t\t\t// Check if the dataset with the same id already exists\r\n\t\t\tthis.checkDuplicateId(id);\r\n\r\n\t\t\t// Extract and validate content\r\n\t\t\tconst contentUnzipped = await this.extractContent(content);\r\n\r\n\t\t\t// Parse content\r\n\t\t\tthis.saveContent(id, contentUnzipped);\r\n\r\n\t\t\t// console.log([...this.datasets.values()]);\r\n\t\t\t// return id after dataset successfully added\r\n\t\t\tlet datasetIds: string[] = Array.from(this.datasets.keys());\r\n\t\t\treturn Promise.resolve(datasetIds);\r\n\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\treturn Promise.reject(error);\r\n\t\t}\r\n\t}\r\n\r\n\t// Make sure id is valid\r\n\tprivate validateDatasetId(id: string) {\r\n\t\tif (id === \"\" || id.includes(\"_\") || id === \" \") {\r\n\t\t\tthrow new InsightError(\"Invalid dataset id\");\r\n\t\t}\r\n\t}\r\n\r\n\t// Make sure kind is valid\r\n\tprivate validateKind(kind: InsightDatasetKind) {\r\n\t\tif (kind !== InsightDatasetKind.Sections) {\r\n\t\t\tthrow new InsightError(\"Invalid dataset kind\");\r\n\t\t}\r\n\t}\r\n\r\n\t// Check if the dataset with the same id already exists\r\n\tprivate checkDuplicateId(id: string) {\r\n\t\tif (this.datasets.has(id)) {\r\n\t\t\tthrow new InsightError(\"Dataset id already exist\");\r\n\t\t}\r\n\t}\r\n\r\n\tprivate async extractContent(content: string){\r\n\t\ttry {\r\n\t\t\tlet promises: Array<Promise<string>> = [];\r\n\t\t\tlet zip = new JSZip();\r\n\t\t\tzip = await JSZip.loadAsync(content, {base64: true});\r\n\r\n\t\t\t// for each to iterate through jszip object\r\n\t\t\tzip.forEach((relativePath, file) => {\r\n\t\t\t\tif (relativePath.startsWith(\"courses/\")) {\r\n\t\t\t\t\tif (!relativePath.endsWith(\"/\")){\r\n\t\t\t\t\t\t// call await promise.all on array to hold all those promises & push promise onto array\r\n\t\t\t\t\t\t// Access the contents of the file and add it to the result array\r\n\t\t\t\t\t\tconst promiseFile = file.async(\"string\");\r\n\t\t\t\t\t\tpromises.push(promiseFile);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new InsightError(\"Invalid content (folder not named courses or empty)\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tconst courseFiles: string[] = await Promise.all(promises);\r\n\t\t\t// console.log(courseFiles);\r\n\t\t\treturn courseFiles;\r\n\t\t} catch (error) {\r\n\t\t\tthrow new InsightError(\"Invalid content\");\r\n\t\t}\r\n\t}\r\n\r\n\tprivate saveContent(id: string, contentUnzipped: string[]){\r\n\t\tlet allSections: Section[] = [];\r\n\r\n\t\tfor (const str of contentUnzipped){\r\n\t\t\ttry {\r\n\t\t\t\t// console.log(str);\r\n\t\t\t\t// console.log(\"inside try\");\r\n\t\t\t\tconst jsonData = JSON.parse(str);\r\n\t\t\t\t// console.log(\"inside parse\");\r\n\t\t\t\t// console.log(jsonData);\r\n\t\t\t\tconst sections: Section[] = jsonData.result.map((course: any) => ({\r\n\t\t\t\t\ttitle: course.Title,\r\n\t\t\t\t\tuuid: course.id,\r\n\t\t\t\t\tinstructor: course.Professor,\r\n\t\t\t\t\taudit: course.Audit,\r\n\t\t\t\t\tyear: course.Year,\r\n\t\t\t\t\tid: course.Course,\r\n\t\t\t\t\tpass: course.Pass,\r\n\t\t\t\t\tfail: course.Fail,\r\n\t\t\t\t\tavg: course.Avg,\r\n\t\t\t\t\tdept: course.Subject\r\n\t\t\t\t}));\r\n\t\t\t\tallSections = allSections.concat(sections);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tthrow new InsightError(\"Invalid content\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.datasets.set(id, allSections);\r\n\t\tconst serializedSections = JSON.stringify(allSections);\r\n\t\t// console.log(serializedSections);\r\n\t\tif (!fs.existsSync(\"./data\")) {\r\n\t\t\tfs.mkdirSync(\"./data\");\r\n\t\t}\r\n\t\tfs.writeFileSync(\"./data/\" + id + \".json\", serializedSections, \"utf-8\");\r\n\t}\r\n\r\n\tpublic removeDataset(id: string): Promise<string> {\r\n\t\ttry {\r\n\t\t\t// Make sure id is valid\r\n\t\t\tthis.validateDatasetId(id);\r\n\r\n\t\t\t// Make sure id exist\r\n\t\t\tthis.idExist(id);\r\n\r\n\t\t\t// Remove dataset\r\n\t\t\tthis.datasets.delete(id);\r\n\t\t\tfs.unlinkSync(\"./data/\" + id + \".json\");\r\n\r\n\t\t\treturn Promise.resolve(id);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\treturn Promise.reject(error);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate idExist(id: string) {\r\n\t\tif (!fs.existsSync(\"./data/\" + id + \".json\")) {\r\n\t\t\tthrow new NotFoundError(\"Dataset id does not exist\");\r\n\t\t}\r\n\t}\r\n\r\n\tpublic performQuery(query: unknown): Promise<InsightResult[]> {\r\n\t\ttry {\r\n\t\t\tconst queryValidator = new QueryValidator();\r\n\t\t\tconst datasetID = queryValidator.queryValidator(query);\r\n\t\t\tif (!this.datasets.has(datasetID)) {\r\n\t\t\t\tthrow new InsightError(\"Reference dataset id not added yet.\");\r\n\t\t\t}\r\n\t\t\tconst datasetContent = this.datasets.get(datasetID);\r\n\t\t\tif (!datasetContent) {\r\n\t\t\t\tthrow new InsightError(\"Dataset content not found for the given id.\");\r\n\t\t\t}\r\n\t\t\tconst performQueryHelper = new PerformQuery();\r\n\t\t\tconst results = performQueryHelper.performQueryHelper(query, datasetContent, datasetID);\r\n\t\t\treturn Promise.resolve(results);\r\n\t\t} catch (error) {\r\n\t\t\treturn Promise.reject(error);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic async listDatasets(): Promise<InsightDataset[]> {\r\n\t\tlet datasetList: InsightDataset[] = [];\r\n\t\t// let totalRows = 0;\r\n\r\n\t\tfor (let [key, value] of this.datasets) {\r\n\t\t\t// totalRows += value.length;\r\n\t\t\tconst dataset: InsightDataset = {\r\n\t\t\t\tid: key,\r\n\t\t\t\tkind: InsightDatasetKind.Sections,\r\n\t\t\t\tnumRows: value.length\r\n\t\t\t};\r\n\t\t\tdatasetList.push(dataset);\r\n\t\t}\r\n\t\tconsole.log(datasetList);\r\n\t\treturn Promise.resolve(datasetList);\r\n\t}\r\n}\r\n\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"548e1bf4760dc7148bba94c37ed4a67646e5c8e2","contentHash":"9d3a9bb75fce9b03a5950031cd548f21271b91b74b025047902ff27c2e8857f5"},"C:\\Users\\karry\\IdeaProjects\\project_team170\\src\\controller\\utilities\\QueryValidator.ts":{"path":"C:\\Users\\karry\\IdeaProjects\\project_team170\\src\\controller\\utilities\\QueryValidator.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"2":{"start":{"line":4,"column":25},"end":{"line":4,"column":53}},"3":{"start":{"line":6,"column":14},"end":{"line":6,"column":54}},"4":{"start":{"line":7,"column":14},"end":{"line":7,"column":59}},"5":{"start":{"line":9,"column":8},"end":{"line":26,"column":9}},"6":{"start":{"line":10,"column":25},"end":{"line":10,"column":43}},"7":{"start":{"line":11,"column":12},"end":{"line":13,"column":13}},"8":{"start":{"line":12,"column":16},"end":{"line":12,"column":92}},"9":{"start":{"line":14,"column":12},"end":{"line":18,"column":13}},"10":{"start":{"line":15,"column":16},"end":{"line":17,"column":17}},"11":{"start":{"line":16,"column":20},"end":{"line":16,"column":84}},"12":{"start":{"line":19,"column":23},"end":{"line":19,"column":62}},"13":{"start":{"line":20,"column":12},"end":{"line":20,"column":52}},"14":{"start":{"line":21,"column":12},"end":{"line":21,"column":22}},"15":{"start":{"line":24,"column":12},"end":{"line":24,"column":33}},"16":{"start":{"line":25,"column":12},"end":{"line":25,"column":24}},"17":{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},"18":{"start":{"line":30,"column":12},"end":{"line":30,"column":24}},"19":{"start":{"line":32,"column":24},"end":{"line":32,"column":42}},"20":{"start":{"line":33,"column":8},"end":{"line":35,"column":9}},"21":{"start":{"line":34,"column":12},"end":{"line":34,"column":107}},"22":{"start":{"line":36,"column":24},"end":{"line":36,"column":45}},"23":{"start":{"line":37,"column":8},"end":{"line":51,"column":9}},"24":{"start":{"line":38,"column":12},"end":{"line":38,"column":71}},"25":{"start":{"line":40,"column":13},"end":{"line":51,"column":9}},"26":{"start":{"line":41,"column":12},"end":{"line":41,"column":67}},"27":{"start":{"line":43,"column":13},"end":{"line":51,"column":9}},"28":{"start":{"line":44,"column":12},"end":{"line":44,"column":67}},"29":{"start":{"line":46,"column":13},"end":{"line":51,"column":9}},"30":{"start":{"line":47,"column":12},"end":{"line":47,"column":64}},"31":{"start":{"line":50,"column":12},"end":{"line":50,"column":88}},"32":{"start":{"line":54,"column":8},"end":{"line":56,"column":9}},"33":{"start":{"line":55,"column":12},"end":{"line":55,"column":68}},"34":{"start":{"line":57,"column":8},"end":{"line":61,"column":9}},"35":{"start":{"line":58,"column":12},"end":{"line":60,"column":13}},"36":{"start":{"line":59,"column":16},"end":{"line":59,"column":85}},"37":{"start":{"line":62,"column":8},"end":{"line":62,"column":20}},"38":{"start":{"line":65,"column":21},"end":{"line":65,"column":48}},"39":{"start":{"line":66,"column":8},"end":{"line":68,"column":9}},"40":{"start":{"line":67,"column":12},"end":{"line":67,"column":86}},"41":{"start":{"line":69,"column":8},"end":{"line":71,"column":9}},"42":{"start":{"line":70,"column":12},"end":{"line":70,"column":85}},"43":{"start":{"line":72,"column":8},"end":{"line":72,"column":20}},"44":{"start":{"line":75,"column":21},"end":{"line":75,"column":48}},"45":{"start":{"line":76,"column":22},"end":{"line":76,"column":39}},"46":{"start":{"line":77,"column":8},"end":{"line":79,"column":9}},"47":{"start":{"line":78,"column":12},"end":{"line":78,"column":86}},"48":{"start":{"line":80,"column":8},"end":{"line":82,"column":9}},"49":{"start":{"line":81,"column":12},"end":{"line":81,"column":85}},"50":{"start":{"line":83,"column":8},"end":{"line":85,"column":9}},"51":{"start":{"line":84,"column":12},"end":{"line":84,"column":102}},"52":{"start":{"line":86,"column":8},"end":{"line":86,"column":20}},"53":{"start":{"line":89,"column":8},"end":{"line":91,"column":9}},"54":{"start":{"line":90,"column":12},"end":{"line":90,"column":39}},"55":{"start":{"line":92,"column":8},"end":{"line":94,"column":9}},"56":{"start":{"line":93,"column":12},"end":{"line":93,"column":57}},"57":{"start":{"line":95,"column":8},"end":{"line":97,"column":9}},"58":{"start":{"line":96,"column":12},"end":{"line":96,"column":25}},"59":{"start":{"line":98,"column":8},"end":{"line":98,"column":20}},"60":{"start":{"line":101,"column":8},"end":{"line":103,"column":9}},"61":{"start":{"line":102,"column":12},"end":{"line":102,"column":86}},"62":{"start":{"line":104,"column":8},"end":{"line":106,"column":9}},"63":{"start":{"line":105,"column":12},"end":{"line":105,"column":71}},"64":{"start":{"line":107,"column":8},"end":{"line":107,"column":49}},"65":{"start":{"line":110,"column":8},"end":{"line":135,"column":9}},"66":{"start":{"line":111,"column":25},"end":{"line":111,"column":45}},"67":{"start":{"line":112,"column":12},"end":{"line":114,"column":13}},"68":{"start":{"line":113,"column":16},"end":{"line":113,"column":83}},"69":{"start":{"line":115,"column":12},"end":{"line":119,"column":13}},"70":{"start":{"line":116,"column":16},"end":{"line":118,"column":17}},"71":{"start":{"line":117,"column":20},"end":{"line":117,"column":87}},"72":{"start":{"line":120,"column":12},"end":{"line":122,"column":13}},"73":{"start":{"line":121,"column":16},"end":{"line":121,"column":93}},"74":{"start":{"line":123,"column":23},"end":{"line":123,"column":53}},"75":{"start":{"line":124,"column":33},"end":{"line":124,"column":75}},"76":{"start":{"line":125,"column":12},"end":{"line":130,"column":13}},"77":{"start":{"line":126,"column":16},"end":{"line":128,"column":17}},"78":{"start":{"line":127,"column":20},"end":{"line":127,"column":82}},"79":{"start":{"line":129,"column":16},"end":{"line":129,"column":68}},"80":{"start":{"line":131,"column":12},"end":{"line":131,"column":22}},"81":{"start":{"line":134,"column":12},"end":{"line":134,"column":83}},"82":{"start":{"line":138,"column":24},"end":{"line":138,"column":39}},"83":{"start":{"line":139,"column":28},"end":{"line":139,"column":38}},"84":{"start":{"line":140,"column":8},"end":{"line":142,"column":9}},"85":{"start":{"line":141,"column":12},"end":{"line":141,"column":45}},"86":{"start":{"line":143,"column":8},"end":{"line":143,"column":70}},"87":{"start":{"line":146,"column":8},"end":{"line":153,"column":9}},"88":{"start":{"line":147,"column":12},"end":{"line":149,"column":13}},"89":{"start":{"line":148,"column":16},"end":{"line":148,"column":86}},"90":{"start":{"line":150,"column":12},"end":{"line":152,"column":13}},"91":{"start":{"line":151,"column":16},"end":{"line":151,"column":81}},"92":{"start":{"line":154,"column":8},"end":{"line":154,"column":23}},"93":{"start":{"line":157,"column":22},"end":{"line":157,"column":38}},"94":{"start":{"line":158,"column":8},"end":{"line":160,"column":9}},"95":{"start":{"line":159,"column":12},"end":{"line":159,"column":25}},"96":{"start":{"line":161,"column":8},"end":{"line":161,"column":41}},"97":{"start":{"line":164,"column":8},"end":{"line":166,"column":9}},"98":{"start":{"line":165,"column":12},"end":{"line":165,"column":100}},"99":{"start":{"line":169,"column":0},"end":{"line":169,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":26},"end":{"line":27,"column":5}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":30},"end":{"line":52,"column":5}},"line":28},"2":{"name":"(anonymous_2)","decl":{"start":{"line":53,"column":4},"end":{"line":53,"column":5}},"loc":{"start":{"line":53,"column":50},"end":{"line":63,"column":5}},"line":53},"3":{"name":"(anonymous_3)","decl":{"start":{"line":64,"column":4},"end":{"line":64,"column":5}},"loc":{"start":{"line":64,"column":42},"end":{"line":73,"column":5}},"line":64},"4":{"name":"(anonymous_4)","decl":{"start":{"line":74,"column":4},"end":{"line":74,"column":5}},"loc":{"start":{"line":74,"column":42},"end":{"line":87,"column":5}},"line":74},"5":{"name":"(anonymous_5)","decl":{"start":{"line":88,"column":4},"end":{"line":88,"column":5}},"loc":{"start":{"line":88,"column":31},"end":{"line":99,"column":5}},"line":88},"6":{"name":"(anonymous_6)","decl":{"start":{"line":100,"column":4},"end":{"line":100,"column":5}},"loc":{"start":{"line":100,"column":36},"end":{"line":108,"column":5}},"line":100},"7":{"name":"(anonymous_7)","decl":{"start":{"line":109,"column":4},"end":{"line":109,"column":5}},"loc":{"start":{"line":109,"column":30},"end":{"line":136,"column":5}},"line":109},"8":{"name":"(anonymous_8)","decl":{"start":{"line":137,"column":4},"end":{"line":137,"column":5}},"loc":{"start":{"line":137,"column":30},"end":{"line":144,"column":5}},"line":137},"9":{"name":"(anonymous_9)","decl":{"start":{"line":145,"column":4},"end":{"line":145,"column":5}},"loc":{"start":{"line":145,"column":34},"end":{"line":155,"column":5}},"line":145},"10":{"name":"(anonymous_10)","decl":{"start":{"line":156,"column":4},"end":{"line":156,"column":5}},"loc":{"start":{"line":156,"column":38},"end":{"line":162,"column":5}},"line":156},"11":{"name":"(anonymous_11)","decl":{"start":{"line":163,"column":4},"end":{"line":163,"column":5}},"loc":{"start":{"line":163,"column":43},"end":{"line":167,"column":5}},"line":163}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":12},"end":{"line":13,"column":13}},"type":"if","locations":[{"start":{"line":11,"column":12},"end":{"line":13,"column":13}},{"start":{"line":11,"column":12},"end":{"line":13,"column":13}}],"line":11},"1":{"loc":{"start":{"line":11,"column":16},"end":{"line":11,"column":68}},"type":"binary-expr","locations":[{"start":{"line":11,"column":16},"end":{"line":11,"column":39}},{"start":{"line":11,"column":43},"end":{"line":11,"column":68}}],"line":11},"2":{"loc":{"start":{"line":15,"column":16},"end":{"line":17,"column":17}},"type":"if","locations":[{"start":{"line":15,"column":16},"end":{"line":17,"column":17}},{"start":{"line":15,"column":16},"end":{"line":17,"column":17}}],"line":15},"3":{"loc":{"start":{"line":15,"column":20},"end":{"line":15,"column":56}},"type":"binary-expr","locations":[{"start":{"line":15,"column":20},"end":{"line":15,"column":35}},{"start":{"line":15,"column":39},"end":{"line":15,"column":56}}],"line":15},"4":{"loc":{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},{"start":{"line":29,"column":8},"end":{"line":31,"column":9}}],"line":29},"5":{"loc":{"start":{"line":33,"column":8},"end":{"line":35,"column":9}},"type":"if","locations":[{"start":{"line":33,"column":8},"end":{"line":35,"column":9}},{"start":{"line":33,"column":8},"end":{"line":35,"column":9}}],"line":33},"6":{"loc":{"start":{"line":37,"column":8},"end":{"line":51,"column":9}},"type":"if","locations":[{"start":{"line":37,"column":8},"end":{"line":51,"column":9}},{"start":{"line":37,"column":8},"end":{"line":51,"column":9}}],"line":37},"7":{"loc":{"start":{"line":37,"column":12},"end":{"line":37,"column":53}},"type":"binary-expr","locations":[{"start":{"line":37,"column":12},"end":{"line":37,"column":31}},{"start":{"line":37,"column":35},"end":{"line":37,"column":53}}],"line":37},"8":{"loc":{"start":{"line":40,"column":13},"end":{"line":51,"column":9}},"type":"if","locations":[{"start":{"line":40,"column":13},"end":{"line":51,"column":9}},{"start":{"line":40,"column":13},"end":{"line":51,"column":9}}],"line":40},"9":{"loc":{"start":{"line":40,"column":17},"end":{"line":40,"column":79}},"type":"binary-expr","locations":[{"start":{"line":40,"column":17},"end":{"line":40,"column":35}},{"start":{"line":40,"column":39},"end":{"line":40,"column":57}},{"start":{"line":40,"column":61},"end":{"line":40,"column":79}}],"line":40},"10":{"loc":{"start":{"line":43,"column":13},"end":{"line":51,"column":9}},"type":"if","locations":[{"start":{"line":43,"column":13},"end":{"line":51,"column":9}},{"start":{"line":43,"column":13},"end":{"line":51,"column":9}}],"line":43},"11":{"loc":{"start":{"line":46,"column":13},"end":{"line":51,"column":9}},"type":"if","locations":[{"start":{"line":46,"column":13},"end":{"line":51,"column":9}},{"start":{"line":46,"column":13},"end":{"line":51,"column":9}}],"line":46},"12":{"loc":{"start":{"line":54,"column":8},"end":{"line":56,"column":9}},"type":"if","locations":[{"start":{"line":54,"column":8},"end":{"line":56,"column":9}},{"start":{"line":54,"column":8},"end":{"line":56,"column":9}}],"line":54},"13":{"loc":{"start":{"line":54,"column":12},"end":{"line":54,"column":75}},"type":"binary-expr","locations":[{"start":{"line":54,"column":12},"end":{"line":54,"column":43}},{"start":{"line":54,"column":47},"end":{"line":54,"column":75}}],"line":54},"14":{"loc":{"start":{"line":58,"column":12},"end":{"line":60,"column":13}},"type":"if","locations":[{"start":{"line":58,"column":12},"end":{"line":60,"column":13}},{"start":{"line":58,"column":12},"end":{"line":60,"column":13}}],"line":58},"15":{"loc":{"start":{"line":66,"column":8},"end":{"line":68,"column":9}},"type":"if","locations":[{"start":{"line":66,"column":8},"end":{"line":68,"column":9}},{"start":{"line":66,"column":8},"end":{"line":68,"column":9}}],"line":66},"16":{"loc":{"start":{"line":69,"column":8},"end":{"line":71,"column":9}},"type":"if","locations":[{"start":{"line":69,"column":8},"end":{"line":71,"column":9}},{"start":{"line":69,"column":8},"end":{"line":71,"column":9}}],"line":69},"17":{"loc":{"start":{"line":69,"column":12},"end":{"line":69,"column":97}},"type":"binary-expr","locations":[{"start":{"line":69,"column":12},"end":{"line":69,"column":56}},{"start":{"line":69,"column":60},"end":{"line":69,"column":97}}],"line":69},"18":{"loc":{"start":{"line":77,"column":8},"end":{"line":79,"column":9}},"type":"if","locations":[{"start":{"line":77,"column":8},"end":{"line":79,"column":9}},{"start":{"line":77,"column":8},"end":{"line":79,"column":9}}],"line":77},"19":{"loc":{"start":{"line":80,"column":8},"end":{"line":82,"column":9}},"type":"if","locations":[{"start":{"line":80,"column":8},"end":{"line":82,"column":9}},{"start":{"line":80,"column":8},"end":{"line":82,"column":9}}],"line":80},"20":{"loc":{"start":{"line":80,"column":12},"end":{"line":80,"column":85}},"type":"binary-expr","locations":[{"start":{"line":80,"column":12},"end":{"line":80,"column":56}},{"start":{"line":80,"column":60},"end":{"line":80,"column":85}}],"line":80},"21":{"loc":{"start":{"line":83,"column":8},"end":{"line":85,"column":9}},"type":"if","locations":[{"start":{"line":83,"column":8},"end":{"line":85,"column":9}},{"start":{"line":83,"column":8},"end":{"line":85,"column":9}}],"line":83},"22":{"loc":{"start":{"line":89,"column":8},"end":{"line":91,"column":9}},"type":"if","locations":[{"start":{"line":89,"column":8},"end":{"line":91,"column":9}},{"start":{"line":89,"column":8},"end":{"line":91,"column":9}}],"line":89},"23":{"loc":{"start":{"line":92,"column":8},"end":{"line":94,"column":9}},"type":"if","locations":[{"start":{"line":92,"column":8},"end":{"line":94,"column":9}},{"start":{"line":92,"column":8},"end":{"line":94,"column":9}}],"line":92},"24":{"loc":{"start":{"line":95,"column":8},"end":{"line":97,"column":9}},"type":"if","locations":[{"start":{"line":95,"column":8},"end":{"line":97,"column":9}},{"start":{"line":95,"column":8},"end":{"line":97,"column":9}}],"line":95},"25":{"loc":{"start":{"line":101,"column":8},"end":{"line":103,"column":9}},"type":"if","locations":[{"start":{"line":101,"column":8},"end":{"line":103,"column":9}},{"start":{"line":101,"column":8},"end":{"line":103,"column":9}}],"line":101},"26":{"loc":{"start":{"line":104,"column":8},"end":{"line":106,"column":9}},"type":"if","locations":[{"start":{"line":104,"column":8},"end":{"line":106,"column":9}},{"start":{"line":104,"column":8},"end":{"line":106,"column":9}}],"line":104},"27":{"loc":{"start":{"line":104,"column":12},"end":{"line":104,"column":78}},"type":"binary-expr","locations":[{"start":{"line":104,"column":12},"end":{"line":104,"column":40}},{"start":{"line":104,"column":44},"end":{"line":104,"column":78}}],"line":104},"28":{"loc":{"start":{"line":112,"column":12},"end":{"line":114,"column":13}},"type":"if","locations":[{"start":{"line":112,"column":12},"end":{"line":114,"column":13}},{"start":{"line":112,"column":12},"end":{"line":114,"column":13}}],"line":112},"29":{"loc":{"start":{"line":116,"column":16},"end":{"line":118,"column":17}},"type":"if","locations":[{"start":{"line":116,"column":16},"end":{"line":118,"column":17}},{"start":{"line":116,"column":16},"end":{"line":118,"column":17}}],"line":116},"30":{"loc":{"start":{"line":116,"column":20},"end":{"line":116,"column":56}},"type":"binary-expr","locations":[{"start":{"line":116,"column":20},"end":{"line":116,"column":37}},{"start":{"line":116,"column":41},"end":{"line":116,"column":56}}],"line":116},"31":{"loc":{"start":{"line":120,"column":12},"end":{"line":122,"column":13}},"type":"if","locations":[{"start":{"line":120,"column":12},"end":{"line":122,"column":13}},{"start":{"line":120,"column":12},"end":{"line":122,"column":13}}],"line":120},"32":{"loc":{"start":{"line":120,"column":16},"end":{"line":120,"column":79}},"type":"binary-expr","locations":[{"start":{"line":120,"column":16},"end":{"line":120,"column":47}},{"start":{"line":120,"column":51},"end":{"line":120,"column":79}}],"line":120},"33":{"loc":{"start":{"line":125,"column":12},"end":{"line":130,"column":13}},"type":"if","locations":[{"start":{"line":125,"column":12},"end":{"line":130,"column":13}},{"start":{"line":125,"column":12},"end":{"line":130,"column":13}}],"line":125},"34":{"loc":{"start":{"line":126,"column":16},"end":{"line":128,"column":17}},"type":"if","locations":[{"start":{"line":126,"column":16},"end":{"line":128,"column":17}},{"start":{"line":126,"column":16},"end":{"line":128,"column":17}}],"line":126},"35":{"loc":{"start":{"line":140,"column":8},"end":{"line":142,"column":9}},"type":"if","locations":[{"start":{"line":140,"column":8},"end":{"line":142,"column":9}},{"start":{"line":140,"column":8},"end":{"line":142,"column":9}}],"line":140},"36":{"loc":{"start":{"line":140,"column":12},"end":{"line":140,"column":72}},"type":"binary-expr","locations":[{"start":{"line":140,"column":12},"end":{"line":140,"column":43}},{"start":{"line":140,"column":47},"end":{"line":140,"column":72}}],"line":140},"37":{"loc":{"start":{"line":147,"column":12},"end":{"line":149,"column":13}},"type":"if","locations":[{"start":{"line":147,"column":12},"end":{"line":149,"column":13}},{"start":{"line":147,"column":12},"end":{"line":149,"column":13}}],"line":147},"38":{"loc":{"start":{"line":150,"column":12},"end":{"line":152,"column":13}},"type":"if","locations":[{"start":{"line":150,"column":12},"end":{"line":152,"column":13}},{"start":{"line":150,"column":12},"end":{"line":152,"column":13}}],"line":150},"39":{"loc":{"start":{"line":150,"column":16},"end":{"line":150,"column":112}},"type":"binary-expr","locations":[{"start":{"line":150,"column":16},"end":{"line":150,"column":62}},{"start":{"line":150,"column":66},"end":{"line":150,"column":112}}],"line":150},"40":{"loc":{"start":{"line":158,"column":8},"end":{"line":160,"column":9}},"type":"if","locations":[{"start":{"line":158,"column":8},"end":{"line":160,"column":9}},{"start":{"line":158,"column":8},"end":{"line":160,"column":9}}],"line":158},"41":{"loc":{"start":{"line":158,"column":12},"end":{"line":158,"column":79}},"type":"binary-expr","locations":[{"start":{"line":158,"column":12},"end":{"line":158,"column":30}},{"start":{"line":158,"column":34},"end":{"line":158,"column":49}},{"start":{"line":158,"column":53},"end":{"line":158,"column":79}}],"line":158},"42":{"loc":{"start":{"line":164,"column":8},"end":{"line":166,"column":9}},"type":"if","locations":[{"start":{"line":164,"column":8},"end":{"line":166,"column":9}},{"start":{"line":164,"column":8},"end":{"line":166,"column":9}}],"line":164},"43":{"loc":{"start":{"line":164,"column":12},"end":{"line":164,"column":70}},"type":"binary-expr","locations":[{"start":{"line":164,"column":12},"end":{"line":164,"column":37}},{"start":{"line":164,"column":41},"end":{"line":164,"column":70}}],"line":164}},"s":{"0":1,"1":1,"2":1,"3":39,"4":39,"5":39,"6":39,"7":39,"8":3,"9":36,"10":73,"11":1,"12":35,"13":30,"14":20,"15":19,"16":19,"17":62,"18":0,"19":62,"20":62,"21":0,"22":62,"23":62,"24":16,"25":46,"26":26,"27":20,"28":16,"29":4,"30":2,"31":2,"32":16,"33":1,"34":15,"35":30,"36":0,"37":14,"38":26,"39":26,"40":1,"41":25,"42":3,"43":22,"44":16,"45":16,"46":16,"47":0,"48":16,"49":2,"50":14,"51":1,"52":13,"53":14,"54":7,"55":14,"56":6,"57":14,"58":1,"59":13,"60":2,"61":0,"62":2,"63":0,"64":2,"65":35,"66":35,"67":35,"68":1,"69":34,"70":57,"71":0,"72":34,"73":1,"74":33,"75":32,"76":31,"77":21,"78":0,"79":21,"80":30,"81":5,"82":33,"83":33,"84":33,"85":32,"86":1,"87":32,"88":98,"89":0,"90":98,"91":1,"92":31,"93":200,"94":200,"95":67,"96":133,"97":21,"98":1,"99":1},"f":{"0":39,"1":62,"2":16,"3":26,"4":16,"5":14,"6":2,"7":35,"8":33,"9":32,"10":200,"11":21},"b":{"0":[3,36],"1":[39,37],"2":[1,72],"3":[73,37],"4":[0,62],"5":[0,62],"6":[16,46],"7":[62,53],"8":[26,20],"9":[46,41,26],"10":[16,4],"11":[2,2],"12":[1,15],"13":[16,16],"14":[0,29],"15":[1,25],"16":[3,22],"17":[25,22],"18":[0,16],"19":[2,14],"20":[16,14],"21":[1,13],"22":[7,7],"23":[6,8],"24":[1,13],"25":[0,2],"26":[0,2],"27":[2,2],"28":[1,34],"29":[0,57],"30":[57,23],"31":[1,33],"32":[34,34],"33":[21,10],"34":[0,21],"35":[32,1],"36":[33,33],"37":[0,98],"38":[1,97],"39":[98,61],"40":[67,133],"41":[200,199,199],"42":[1,20],"43":[21,21]},"inputSourceMap":{"version":3,"file":"C:/Users/karry/IdeaProjects/project_team170/src/controller/utilities/QueryValidator.ts","sources":["C:/Users/karry/IdeaProjects/project_team170/src/controller/utilities/QueryValidator.ts"],"names":[],"mappings":"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","sourcesContent":["import {InsightError} from \"../IInsightFacade\";\r\n\r\nexport class QueryValidator{\r\n\tprivate mfields: string[] = [\"avg\", \"pass\", \"fail\", \"audit\", \"year\"];\r\n\tprivate sfields: string[] = [\"dept\", \"id\", \"instructor\", \"title\", \"uuid\"];\r\n\r\n\tpublic queryValidator(query: any) {\r\n\t\ttry {\r\n\t\t\tconst keys = Object.keys(query);\r\n\r\n\t\t\t// make sure both WHERE and OPTIONS exist\r\n\t\t\tif (!keys.includes(\"WHERE\") || !keys.includes(\"OPTIONS\")) {\r\n\t\t\t\t// console.log(keys);\r\n\t\t\t\t// console.log(!keys.includes(\"WHERE\") || !keys.includes(\"OPTIONS\"));\r\n\t\t\t\tthrow new InsightError(\"Missing WHERE or OPTIONS or both\");\r\n\t\t\t}\r\n\r\n\t\t\t// make sure nothing weird is in the mix\r\n\t\t\tfor (let key of keys) {\r\n\t\t\t\tif (key !== \"WHERE\" && key !== \"OPTIONS\") {\r\n\t\t\t\t\tthrow new InsightError(\"Excess keys in query\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst id = this.optionsValidator(query[\"OPTIONS\"]);\r\n\t\t\tthis.whereValidator(query[\"WHERE\"], id);\r\n\t\t\treturn id;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate whereValidator(where: any, id: string): boolean{\r\n\t\t// true if WHERE is empty, we just probably have over 5k results\r\n\t\tif (Object.keys(where).length === 0) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tconst filters = Object.keys(where);\r\n\t\t// false if there are more than one filter key not nested\r\n\t\tif (filters.length > 1) {\r\n\t\t\tthrow new InsightError(\"WHERE should only have 1 key, has \" + filters.length);\r\n\t\t}\r\n\r\n\t\tlet filterKey = Object.keys(where)[0];\r\n\t\tif (filterKey === \"AND\" || filterKey === \"OR\"){\r\n\t\t\treturn this.logicComparisonValidator(where[filterKey], id);\r\n\t\t} else if (filterKey === \"LT\" || filterKey === \"GT\" || filterKey === \"EQ\"){\r\n\t\t\treturn this.mComparisonValidator(where[filterKey], id);\r\n\t\t} else if (filterKey === \"IS\"){\r\n\t\t\treturn this.sComparisonValidator(where[filterKey], id);\r\n\t\t} else if (filterKey === \"NOT\"){\r\n\t\t\treturn this.negationValidator(where[filterKey], id);\r\n\t\t} else {\r\n\t\t\tthrow new InsightError(\"Invalid filter key: \" + filterKey);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate logicComparisonValidator(logicComparison: any[], id: string): boolean {\r\n\t\tif (!Array.isArray(logicComparison) || logicComparison.length === 0){\r\n\t\t\tthrow new InsightError(\"Wrong logic.\");\r\n\t\t}\r\n\r\n\t\tfor (let condition of logicComparison) {\r\n\t\t\tif (!this.whereValidator(condition, id)) {\r\n\t\t\t\tthrow new InsightError(\"Invalid direct comparison\");\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tprivate mComparisonValidator(mComparison: any, id: string): boolean{\r\n\t\tconst mKey = Object.keys(mComparison)[0];\r\n\r\n\t\tif (Object.keys(mComparison).length > 1) {\r\n\t\t\tthrow new InsightError(\"Invalid argument in comparator\");\r\n\t\t}\r\n\r\n\t\t// make sure key is equal to \"id_field\" and value is a number\r\n\t\tif (!this.fieldValidator(mKey, id, this.mfields) || typeof mComparison[mKey] !== \"number\"){\r\n\t\t\tthrow new InsightError(\"Invalid value in mComparison.\");\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tprivate sComparisonValidator(sComparison: any, id: string): boolean{\r\n\t\tconst sKey = Object.keys(sComparison)[0];\r\n\t\tconst value = sComparison[sKey];\r\n\r\n\t\tif (Object.keys(sComparison).length > 1) {\r\n\t\t\tthrow new InsightError(\"Invalid argument in comparator\");\r\n\t\t}\r\n\r\n\t\t// make sure key is equal to \"id_field\" and value is a string\r\n\t\tif (!this.fieldValidator(sKey, id, this.sfields) || typeof value !== \"string\"){\r\n\t\t\tthrow new InsightError(\"Invalid value in sComparison.\");\r\n\t\t}\r\n\r\n\t\t// Validate wildcard asterisks\r\n\t\tif (!this.validWildcardString(value)) {\r\n\t\t\tthrow new InsightError(\"Invalid wildcard string in IS filter: \" + value);\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tprivate validWildcardString(value: string): boolean {\r\n\t\t// Validate that if asterisks are used, and are only at the beginning and/or end, max: 1\r\n\t\tif (value.startsWith(\"*\")) {\r\n\t\t\tvalue = value.substring(1);\r\n\t\t}\r\n\t\tif (value.endsWith(\"*\")) {\r\n\t\t\tvalue = value.substring(0, value.length - 1);\r\n\t\t}\r\n\r\n\t\t// Check if there's still an asterisk in the string\r\n\t\tif (value.includes(\"*\")) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tprivate negationValidator(negation: any, id: string): boolean{\r\n\t\tif (Object.keys(negation).length > 1) {\r\n\t\t\tthrow new InsightError(\"Invalid argument in comparator\");\r\n\t\t}\r\n\r\n\t\tif (typeof negation !== \"object\" || Object.keys(negation).length !== 1){\r\n\t\t\tthrow new InsightError(\"Wrong negation.\");\r\n\t\t}\r\n\t\treturn this.whereValidator(negation, id);\r\n\t}\r\n\r\n\tprivate optionsValidator(options: any): string {\r\n\t\ttry{\r\n\t\t\tconst keys = Object.keys(options);\r\n\t\t\t// make sure COLUMNS exist\r\n\t\t\tif (!keys.includes(\"COLUMNS\")) {\r\n\t\t\t\tthrow new InsightError(\"OPTIONS missing COLUMNS\");\r\n\t\t\t}\r\n\r\n\t\t\t// make sure nothing weird is in the mix of COLUMNS and ORDER\r\n\t\t\tfor (let key of keys) {\r\n\t\t\t\tif (key !== \"COLUMNS\" && key !== \"ORDER\") {\r\n\t\t\t\t\tthrow new InsightError(\"Invalid keys in OPTIONS\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// make sure COLUMNS is an array and has at least one value\r\n\t\t\tif (!Array.isArray(options.COLUMNS) || options.COLUMNS.length === 0) {\r\n\t\t\t\tthrow new InsightError(\"COLUMNS must be a non-empty array\");\r\n\t\t\t}\r\n\r\n\t\t\tconst id = this.getIdFromOptions(options);\r\n\t\t\tconst validColumns: string[] = this.columnsValidator(options.COLUMNS, id);\r\n\t\t\t// ORDER is optional, it can exist or not exist\r\n\t\t\tif (options.ORDER){\r\n\t\t\t\tif (typeof options.ORDER !== \"string\") {\r\n\t\t\t\t\tthrow new InsightError(\"Invalid ORDER type\");\r\n\t\t\t\t}\r\n\t\t\t\tthis.validateOrder(options.ORDER, validColumns, id);\r\n\t\t\t}\r\n\r\n\t\t\treturn id;\r\n\t\t} catch (error){\r\n\t\t\tthrow new InsightError(\"Incorrect format of OPTIONS\");\r\n\t\t}\r\n\t}\r\n\r\n\tprivate getIdFromOptions(options: any): string {\r\n\t\tconst columns = options.COLUMNS;\r\n\t\tconst firstColumn = columns[0];\r\n\t\tif (typeof firstColumn === \"string\" && firstColumn.includes(\"_\")) {\r\n\t\t\treturn firstColumn.split(\"_\")[0];  // Split the string and get the id\r\n\t\t}\r\n\t\tthrow new InsightError(\"Invalid dataset id\");\r\n\t}\r\n\r\n\tprivate columnsValidator(columns: any[], id: string): string[] {\r\n\t\tfor (let column of columns) {\r\n\t\t\tif (typeof column !== \"string\") {\r\n\t\t\t\tthrow new InsightError(\"Invalid type of COLUMN key\");\r\n\t\t\t}\r\n\t\t\tif(!this.fieldValidator(column, id, this.mfields) && !this.fieldValidator(column, id, this.sfields)) {\r\n\t\t\t\tthrow new InsightError(\"Invalid COLUMNS field\");\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn columns;\r\n\t}\r\n\r\n\t// pass in \"id_field\", id, and type of field\r\n\t// check if \"id_field\" is valid\r\n\tprivate fieldValidator(field: string, id: string, fields: string[]): boolean {\r\n\t\tconst parts = field.split(\"_\");\r\n\t\tif (parts.length !== 2 || parts[0] !== id || !fields.includes(parts[1])) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn fields.includes(parts[1]);\r\n\t}\r\n\r\n\tprivate validateOrder(order: string, validColumns: string[], id: string) {\r\n\t\tif (typeof order !== \"string\" || !validColumns.includes(order)) {\r\n\t\t\tthrow new InsightError(\"Wrong order or order not included in columns\");\r\n\t\t}\r\n\t}\r\n}\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c094b76c3928011b01843555faca1eb09e72e625","contentHash":"bedc1528eaddf5fcc3226c093b68d94bfd79feca98e1a989befc89c3c0a7526e"},"C:\\Users\\karry\\IdeaProjects\\project_team170\\src\\controller\\utilities\\PerformQuery.ts":{"path":"C:\\Users\\karry\\IdeaProjects\\project_team170\\src\\controller\\utilities\\PerformQuery.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":4,"column":25},"end":{"line":4,"column":53}},"3":{"start":{"line":6,"column":20},"end":{"line":6,"column":22}},"4":{"start":{"line":8,"column":8},"end":{"line":59,"column":9}},"5":{"start":{"line":9,"column":12},"end":{"line":9,"column":48}},"6":{"start":{"line":10,"column":28},"end":{"line":10,"column":58}},"7":{"start":{"line":11,"column":12},"end":{"line":22,"column":13}},"8":{"start":{"line":12,"column":16},"end":{"line":12,"column":90}},"9":{"start":{"line":14,"column":17},"end":{"line":22,"column":13}},"10":{"start":{"line":15,"column":16},"end":{"line":15,"column":86}},"11":{"start":{"line":17,"column":17},"end":{"line":22,"column":13}},"12":{"start":{"line":18,"column":16},"end":{"line":18,"column":97}},"13":{"start":{"line":20,"column":17},"end":{"line":22,"column":13}},"14":{"start":{"line":21,"column":16},"end":{"line":21,"column":94}},"15":{"start":{"line":23,"column":12},"end":{"line":25,"column":13}},"16":{"start":{"line":24,"column":16},"end":{"line":24,"column":91}},"17":{"start":{"line":26,"column":36},"end":{"line":26,"column":63}},"18":{"start":{"line":27,"column":26},"end":{"line":27,"column":51}},"19":{"start":{"line":28,"column":26},"end":{"line":28,"column":28}},"20":{"start":{"line":29,"column":12},"end":{"line":31,"column":13}},"21":{"start":{"line":30,"column":16},"end":{"line":30,"column":51}},"22":{"start":{"line":32,"column":32},"end":{"line":46,"column":14}},"23":{"start":{"line":33,"column":35},"end":{"line":33,"column":37}},"24":{"start":{"line":34,"column":16},"end":{"line":44,"column":17}},"25":{"start":{"line":35,"column":20},"end":{"line":43,"column":21}},"26":{"start":{"line":36,"column":24},"end":{"line":36,"column":81}},"27":{"start":{"line":38,"column":25},"end":{"line":43,"column":21}},"28":{"start":{"line":39,"column":24},"end":{"line":39,"column":81}},"29":{"start":{"line":42,"column":24},"end":{"line":42,"column":73}},"30":{"start":{"line":45,"column":16},"end":{"line":45,"column":36}},"31":{"start":{"line":47,"column":25},"end":{"line":47,"column":54}},"32":{"start":{"line":48,"column":12},"end":{"line":53,"column":13}},"33":{"start":{"line":49,"column":16},"end":{"line":49,"column":75}},"34":{"start":{"line":52,"column":16},"end":{"line":52,"column":51}},"35":{"start":{"line":54,"column":12},"end":{"line":54,"column":38}},"36":{"start":{"line":57,"column":12},"end":{"line":57,"column":33}},"37":{"start":{"line":58,"column":12},"end":{"line":58,"column":24}},"38":{"start":{"line":62,"column":20},"end":{"line":62,"column":37}},"39":{"start":{"line":63,"column":8},"end":{"line":63,"column":40}},"40":{"start":{"line":66,"column":30},"end":{"line":66,"column":51}},"41":{"start":{"line":67,"column":27},"end":{"line":67,"column":47}},"42":{"start":{"line":68,"column":8},"end":{"line":70,"column":9}},"43":{"start":{"line":69,"column":12},"end":{"line":69,"column":98}},"44":{"start":{"line":71,"column":22},"end":{"line":71,"column":36}},"45":{"start":{"line":72,"column":8},"end":{"line":118,"column":9}},"46":{"start":{"line":74,"column":16},"end":{"line":90,"column":17}},"47":{"start":{"line":75,"column":41},"end":{"line":75,"column":66}},"48":{"start":{"line":76,"column":38},"end":{"line":76,"column":40}},"49":{"start":{"line":77,"column":20},"end":{"line":88,"column":21}},"50":{"start":{"line":78,"column":24},"end":{"line":78,"column":86}},"51":{"start":{"line":80,"column":25},"end":{"line":88,"column":21}},"52":{"start":{"line":81,"column":24},"end":{"line":81,"column":82}},"53":{"start":{"line":83,"column":25},"end":{"line":88,"column":21}},"54":{"start":{"line":84,"column":24},"end":{"line":84,"column":82}},"55":{"start":{"line":86,"column":25},"end":{"line":88,"column":21}},"56":{"start":{"line":87,"column":24},"end":{"line":87,"column":79}},"57":{"start":{"line":89,"column":20},"end":{"line":89,"column":87}},"58":{"start":{"line":89,"column":57},"end":{"line":89,"column":85}},"59":{"start":{"line":91,"column":16},"end":{"line":91,"column":31}},"60":{"start":{"line":93,"column":38},"end":{"line":93,"column":40}},"61":{"start":{"line":94,"column":16},"end":{"line":114,"column":17}},"62":{"start":{"line":95,"column":41},"end":{"line":95,"column":66}},"63":{"start":{"line":96,"column":38},"end":{"line":96,"column":40}},"64":{"start":{"line":97,"column":20},"end":{"line":108,"column":21}},"65":{"start":{"line":98,"column":24},"end":{"line":98,"column":86}},"66":{"start":{"line":100,"column":25},"end":{"line":108,"column":21}},"67":{"start":{"line":101,"column":24},"end":{"line":101,"column":82}},"68":{"start":{"line":103,"column":25},"end":{"line":108,"column":21}},"69":{"start":{"line":104,"column":24},"end":{"line":104,"column":96}},"70":{"start":{"line":106,"column":25},"end":{"line":108,"column":21}},"71":{"start":{"line":107,"column":24},"end":{"line":107,"column":93}},"72":{"start":{"line":109,"column":20},"end":{"line":113,"column":21}},"73":{"start":{"line":110,"column":24},"end":{"line":112,"column":25}},"74":{"start":{"line":110,"column":70},"end":{"line":110,"column":127}},"75":{"start":{"line":111,"column":28},"end":{"line":111,"column":57}},"76":{"start":{"line":115,"column":16},"end":{"line":115,"column":39}},"77":{"start":{"line":117,"column":21},"end":{"line":117,"column":88}},"78":{"start":{"line":121,"column":27},"end":{"line":121,"column":44}},"79":{"start":{"line":122,"column":28},"end":{"line":122,"column":57}},"80":{"start":{"line":123,"column":20},"end":{"line":123,"column":45}},"81":{"start":{"line":124,"column":22},"end":{"line":124,"column":48}},"82":{"start":{"line":125,"column":22},"end":{"line":125,"column":36}},"83":{"start":{"line":126,"column":8},"end":{"line":138,"column":9}},"84":{"start":{"line":128,"column":16},"end":{"line":128,"column":76}},"85":{"start":{"line":128,"column":54},"end":{"line":128,"column":74}},"86":{"start":{"line":129,"column":16},"end":{"line":129,"column":22}},"87":{"start":{"line":131,"column":16},"end":{"line":131,"column":76}},"88":{"start":{"line":131,"column":54},"end":{"line":131,"column":74}},"89":{"start":{"line":132,"column":16},"end":{"line":132,"column":22}},"90":{"start":{"line":134,"column":16},"end":{"line":134,"column":78}},"91":{"start":{"line":134,"column":54},"end":{"line":134,"column":76}},"92":{"start":{"line":135,"column":16},"end":{"line":135,"column":22}},"93":{"start":{"line":137,"column":16},"end":{"line":137,"column":80}},"94":{"start":{"line":139,"column":8},"end":{"line":139,"column":23}},"95":{"start":{"line":142,"column":29},"end":{"line":142,"column":46}},"96":{"start":{"line":143,"column":21},"end":{"line":143,"column":47}},"97":{"start":{"line":144,"column":20},"end":{"line":144,"column":35}},"98":{"start":{"line":145,"column":22},"end":{"line":145,"column":36}},"99":{"start":{"line":146,"column":8},"end":{"line":148,"column":9}},"100":{"start":{"line":147,"column":12},"end":{"line":147,"column":49}},"101":{"start":{"line":149,"column":8},"end":{"line":151,"column":9}},"102":{"start":{"line":150,"column":12},"end":{"line":150,"column":77}},"103":{"start":{"line":152,"column":8},"end":{"line":166,"column":9}},"104":{"start":{"line":153,"column":12},"end":{"line":153,"column":57}},"105":{"start":{"line":154,"column":12},"end":{"line":154,"column":81}},"106":{"start":{"line":154,"column":50},"end":{"line":154,"column":79}},"107":{"start":{"line":156,"column":13},"end":{"line":166,"column":9}},"108":{"start":{"line":157,"column":12},"end":{"line":157,"column":39}},"109":{"start":{"line":158,"column":12},"end":{"line":158,"column":81}},"110":{"start":{"line":158,"column":50},"end":{"line":158,"column":79}},"111":{"start":{"line":160,"column":13},"end":{"line":166,"column":9}},"112":{"start":{"line":161,"column":12},"end":{"line":161,"column":57}},"113":{"start":{"line":162,"column":12},"end":{"line":162,"column":83}},"114":{"start":{"line":162,"column":50},"end":{"line":162,"column":81}},"115":{"start":{"line":165,"column":12},"end":{"line":165,"column":75}},"116":{"start":{"line":165,"column":50},"end":{"line":165,"column":73}},"117":{"start":{"line":167,"column":8},"end":{"line":167,"column":23}},"118":{"start":{"line":170,"column":30},"end":{"line":170,"column":32}},"119":{"start":{"line":171,"column":28},"end":{"line":171,"column":52}},"120":{"start":{"line":172,"column":8},"end":{"line":183,"column":9}},"121":{"start":{"line":173,"column":12},"end":{"line":173,"column":77}},"122":{"start":{"line":175,"column":13},"end":{"line":183,"column":9}},"123":{"start":{"line":176,"column":12},"end":{"line":176,"column":73}},"124":{"start":{"line":178,"column":13},"end":{"line":183,"column":9}},"125":{"start":{"line":179,"column":12},"end":{"line":179,"column":86}},"126":{"start":{"line":181,"column":13},"end":{"line":183,"column":9}},"127":{"start":{"line":182,"column":12},"end":{"line":182,"column":83}},"128":{"start":{"line":184,"column":22},"end":{"line":184,"column":36}},"129":{"start":{"line":185,"column":30},"end":{"line":185,"column":83}},"130":{"start":{"line":185,"column":70},"end":{"line":185,"column":81}},"131":{"start":{"line":186,"column":8},"end":{"line":186,"column":80}},"132":{"start":{"line":186,"column":46},"end":{"line":186,"column":78}},"133":{"start":{"line":187,"column":8},"end":{"line":187,"column":23}},"134":{"start":{"line":190,"column":8},"end":{"line":192,"column":9}},"135":{"start":{"line":191,"column":12},"end":{"line":191,"column":32}},"136":{"start":{"line":193,"column":8},"end":{"line":203,"column":11}},"137":{"start":{"line":194,"column":25},"end":{"line":194,"column":33}},"138":{"start":{"line":195,"column":25},"end":{"line":195,"column":33}},"139":{"start":{"line":196,"column":12},"end":{"line":201,"column":13}},"140":{"start":{"line":197,"column":16},"end":{"line":197,"column":41}},"141":{"start":{"line":199,"column":17},"end":{"line":201,"column":13}},"142":{"start":{"line":200,"column":16},"end":{"line":200,"column":52}},"143":{"start":{"line":202,"column":12},"end":{"line":202,"column":81}},"144":{"start":{"line":206,"column":0},"end":{"line":206,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":4},"end":{"line":7,"column":5}},"loc":{"start":{"line":7,"column":50},"end":{"line":60,"column":5}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":32,"column":55},"end":{"line":32,"column":56}},"loc":{"start":{"line":32,"column":67},"end":{"line":46,"column":13}},"line":32},"2":{"name":"(anonymous_2)","decl":{"start":{"line":61,"column":4},"end":{"line":61,"column":5}},"loc":{"start":{"line":61,"column":23},"end":{"line":64,"column":5}},"line":61},"3":{"name":"(anonymous_3)","decl":{"start":{"line":65,"column":4},"end":{"line":65,"column":5}},"loc":{"start":{"line":65,"column":43},"end":{"line":119,"column":5}},"line":65},"4":{"name":"(anonymous_4)","decl":{"start":{"line":89,"column":45},"end":{"line":89,"column":46}},"loc":{"start":{"line":89,"column":57},"end":{"line":89,"column":85}},"line":89},"5":{"name":"(anonymous_5)","decl":{"start":{"line":110,"column":50},"end":{"line":110,"column":51}},"loc":{"start":{"line":110,"column":70},"end":{"line":110,"column":127}},"line":110},"6":{"name":"(anonymous_6)","decl":{"start":{"line":120,"column":4},"end":{"line":120,"column":5}},"loc":{"start":{"line":120,"column":35},"end":{"line":140,"column":5}},"line":120},"7":{"name":"(anonymous_7)","decl":{"start":{"line":128,"column":41},"end":{"line":128,"column":42}},"loc":{"start":{"line":128,"column":54},"end":{"line":128,"column":74}},"line":128},"8":{"name":"(anonymous_8)","decl":{"start":{"line":131,"column":41},"end":{"line":131,"column":42}},"loc":{"start":{"line":131,"column":54},"end":{"line":131,"column":74}},"line":131},"9":{"name":"(anonymous_9)","decl":{"start":{"line":134,"column":41},"end":{"line":134,"column":42}},"loc":{"start":{"line":134,"column":54},"end":{"line":134,"column":76}},"line":134},"10":{"name":"(anonymous_10)","decl":{"start":{"line":141,"column":4},"end":{"line":141,"column":5}},"loc":{"start":{"line":141,"column":35},"end":{"line":168,"column":5}},"line":141},"11":{"name":"(anonymous_11)","decl":{"start":{"line":154,"column":37},"end":{"line":154,"column":38}},"loc":{"start":{"line":154,"column":50},"end":{"line":154,"column":79}},"line":154},"12":{"name":"(anonymous_12)","decl":{"start":{"line":158,"column":37},"end":{"line":158,"column":38}},"loc":{"start":{"line":158,"column":50},"end":{"line":158,"column":79}},"line":158},"13":{"name":"(anonymous_13)","decl":{"start":{"line":162,"column":37},"end":{"line":162,"column":38}},"loc":{"start":{"line":162,"column":50},"end":{"line":162,"column":81}},"line":162},"14":{"name":"(anonymous_14)","decl":{"start":{"line":165,"column":37},"end":{"line":165,"column":38}},"loc":{"start":{"line":165,"column":50},"end":{"line":165,"column":73}},"line":165},"15":{"name":"(anonymous_15)","decl":{"start":{"line":169,"column":4},"end":{"line":169,"column":5}},"loc":{"start":{"line":169,"column":39},"end":{"line":188,"column":5}},"line":169},"16":{"name":"(anonymous_16)","decl":{"start":{"line":185,"column":58},"end":{"line":185,"column":59}},"loc":{"start":{"line":185,"column":70},"end":{"line":185,"column":81}},"line":185},"17":{"name":"(anonymous_17)","decl":{"start":{"line":186,"column":33},"end":{"line":186,"column":34}},"loc":{"start":{"line":186,"column":46},"end":{"line":186,"column":78}},"line":186},"18":{"name":"(anonymous_18)","decl":{"start":{"line":189,"column":4},"end":{"line":189,"column":5}},"loc":{"start":{"line":189,"column":36},"end":{"line":204,"column":5}},"line":189},"19":{"name":"(anonymous_19)","decl":{"start":{"line":193,"column":33},"end":{"line":193,"column":34}},"loc":{"start":{"line":193,"column":43},"end":{"line":203,"column":9}},"line":193}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":12},"end":{"line":22,"column":13}},"type":"if","locations":[{"start":{"line":11,"column":12},"end":{"line":22,"column":13}},{"start":{"line":11,"column":12},"end":{"line":22,"column":13}}],"line":11},"1":{"loc":{"start":{"line":11,"column":16},"end":{"line":11,"column":57}},"type":"binary-expr","locations":[{"start":{"line":11,"column":16},"end":{"line":11,"column":35}},{"start":{"line":11,"column":39},"end":{"line":11,"column":57}}],"line":11},"2":{"loc":{"start":{"line":14,"column":17},"end":{"line":22,"column":13}},"type":"if","locations":[{"start":{"line":14,"column":17},"end":{"line":22,"column":13}},{"start":{"line":14,"column":17},"end":{"line":22,"column":13}}],"line":14},"3":{"loc":{"start":{"line":14,"column":21},"end":{"line":14,"column":83}},"type":"binary-expr","locations":[{"start":{"line":14,"column":21},"end":{"line":14,"column":39}},{"start":{"line":14,"column":43},"end":{"line":14,"column":61}},{"start":{"line":14,"column":65},"end":{"line":14,"column":83}}],"line":14},"4":{"loc":{"start":{"line":17,"column":17},"end":{"line":22,"column":13}},"type":"if","locations":[{"start":{"line":17,"column":17},"end":{"line":22,"column":13}},{"start":{"line":17,"column":17},"end":{"line":22,"column":13}}],"line":17},"5":{"loc":{"start":{"line":20,"column":17},"end":{"line":22,"column":13}},"type":"if","locations":[{"start":{"line":20,"column":17},"end":{"line":22,"column":13}},{"start":{"line":20,"column":17},"end":{"line":22,"column":13}}],"line":20},"6":{"loc":{"start":{"line":23,"column":12},"end":{"line":25,"column":13}},"type":"if","locations":[{"start":{"line":23,"column":12},"end":{"line":25,"column":13}},{"start":{"line":23,"column":12},"end":{"line":25,"column":13}}],"line":23},"7":{"loc":{"start":{"line":35,"column":20},"end":{"line":43,"column":21}},"type":"if","locations":[{"start":{"line":35,"column":20},"end":{"line":43,"column":21}},{"start":{"line":35,"column":20},"end":{"line":43,"column":21}}],"line":35},"8":{"loc":{"start":{"line":38,"column":25},"end":{"line":43,"column":21}},"type":"if","locations":[{"start":{"line":38,"column":25},"end":{"line":43,"column":21}},{"start":{"line":38,"column":25},"end":{"line":43,"column":21}}],"line":38},"9":{"loc":{"start":{"line":48,"column":12},"end":{"line":53,"column":13}},"type":"if","locations":[{"start":{"line":48,"column":12},"end":{"line":53,"column":13}},{"start":{"line":48,"column":12},"end":{"line":53,"column":13}}],"line":48},"10":{"loc":{"start":{"line":68,"column":8},"end":{"line":70,"column":9}},"type":"if","locations":[{"start":{"line":68,"column":8},"end":{"line":70,"column":9}},{"start":{"line":68,"column":8},"end":{"line":70,"column":9}}],"line":68},"11":{"loc":{"start":{"line":72,"column":8},"end":{"line":118,"column":9}},"type":"switch","locations":[{"start":{"line":73,"column":12},"end":{"line":91,"column":31}},{"start":{"line":92,"column":12},"end":{"line":116,"column":13}},{"start":{"line":117,"column":12},"end":{"line":117,"column":88}}],"line":72},"12":{"loc":{"start":{"line":77,"column":20},"end":{"line":88,"column":21}},"type":"if","locations":[{"start":{"line":77,"column":20},"end":{"line":88,"column":21}},{"start":{"line":77,"column":20},"end":{"line":88,"column":21}}],"line":77},"13":{"loc":{"start":{"line":77,"column":24},"end":{"line":77,"column":71}},"type":"binary-expr","locations":[{"start":{"line":77,"column":24},"end":{"line":77,"column":46}},{"start":{"line":77,"column":50},"end":{"line":77,"column":71}}],"line":77},"14":{"loc":{"start":{"line":80,"column":25},"end":{"line":88,"column":21}},"type":"if","locations":[{"start":{"line":80,"column":25},"end":{"line":88,"column":21}},{"start":{"line":80,"column":25},"end":{"line":88,"column":21}}],"line":80},"15":{"loc":{"start":{"line":80,"column":29},"end":{"line":80,"column":100}},"type":"binary-expr","locations":[{"start":{"line":80,"column":29},"end":{"line":80,"column":50}},{"start":{"line":80,"column":54},"end":{"line":80,"column":75}},{"start":{"line":80,"column":79},"end":{"line":80,"column":100}}],"line":80},"16":{"loc":{"start":{"line":83,"column":25},"end":{"line":88,"column":21}},"type":"if","locations":[{"start":{"line":83,"column":25},"end":{"line":88,"column":21}},{"start":{"line":83,"column":25},"end":{"line":88,"column":21}}],"line":83},"17":{"loc":{"start":{"line":86,"column":25},"end":{"line":88,"column":21}},"type":"if","locations":[{"start":{"line":86,"column":25},"end":{"line":88,"column":21}},{"start":{"line":86,"column":25},"end":{"line":88,"column":21}}],"line":86},"18":{"loc":{"start":{"line":97,"column":20},"end":{"line":108,"column":21}},"type":"if","locations":[{"start":{"line":97,"column":20},"end":{"line":108,"column":21}},{"start":{"line":97,"column":20},"end":{"line":108,"column":21}}],"line":97},"19":{"loc":{"start":{"line":97,"column":24},"end":{"line":97,"column":71}},"type":"binary-expr","locations":[{"start":{"line":97,"column":24},"end":{"line":97,"column":46}},{"start":{"line":97,"column":50},"end":{"line":97,"column":71}}],"line":97},"20":{"loc":{"start":{"line":100,"column":25},"end":{"line":108,"column":21}},"type":"if","locations":[{"start":{"line":100,"column":25},"end":{"line":108,"column":21}},{"start":{"line":100,"column":25},"end":{"line":108,"column":21}}],"line":100},"21":{"loc":{"start":{"line":100,"column":29},"end":{"line":100,"column":100}},"type":"binary-expr","locations":[{"start":{"line":100,"column":29},"end":{"line":100,"column":50}},{"start":{"line":100,"column":54},"end":{"line":100,"column":75}},{"start":{"line":100,"column":79},"end":{"line":100,"column":100}}],"line":100},"22":{"loc":{"start":{"line":103,"column":25},"end":{"line":108,"column":21}},"type":"if","locations":[{"start":{"line":103,"column":25},"end":{"line":108,"column":21}},{"start":{"line":103,"column":25},"end":{"line":108,"column":21}}],"line":103},"23":{"loc":{"start":{"line":106,"column":25},"end":{"line":108,"column":21}},"type":"if","locations":[{"start":{"line":106,"column":25},"end":{"line":108,"column":21}},{"start":{"line":106,"column":25},"end":{"line":108,"column":21}}],"line":106},"24":{"loc":{"start":{"line":110,"column":24},"end":{"line":112,"column":25}},"type":"if","locations":[{"start":{"line":110,"column":24},"end":{"line":112,"column":25}},{"start":{"line":110,"column":24},"end":{"line":112,"column":25}}],"line":110},"25":{"loc":{"start":{"line":126,"column":8},"end":{"line":138,"column":9}},"type":"switch","locations":[{"start":{"line":127,"column":12},"end":{"line":129,"column":22}},{"start":{"line":130,"column":12},"end":{"line":132,"column":22}},{"start":{"line":133,"column":12},"end":{"line":135,"column":22}},{"start":{"line":136,"column":12},"end":{"line":137,"column":80}}],"line":126},"26":{"loc":{"start":{"line":146,"column":8},"end":{"line":148,"column":9}},"type":"if","locations":[{"start":{"line":146,"column":8},"end":{"line":148,"column":9}},{"start":{"line":146,"column":8},"end":{"line":148,"column":9}}],"line":146},"27":{"loc":{"start":{"line":146,"column":12},"end":{"line":146,"column":55}},"type":"binary-expr","locations":[{"start":{"line":146,"column":12},"end":{"line":146,"column":37}},{"start":{"line":146,"column":41},"end":{"line":146,"column":55}}],"line":146},"28":{"loc":{"start":{"line":149,"column":8},"end":{"line":151,"column":9}},"type":"if","locations":[{"start":{"line":149,"column":8},"end":{"line":151,"column":9}},{"start":{"line":149,"column":8},"end":{"line":151,"column":9}}],"line":149},"29":{"loc":{"start":{"line":152,"column":8},"end":{"line":166,"column":9}},"type":"if","locations":[{"start":{"line":152,"column":8},"end":{"line":166,"column":9}},{"start":{"line":152,"column":8},"end":{"line":166,"column":9}}],"line":152},"30":{"loc":{"start":{"line":152,"column":12},"end":{"line":152,"column":62}},"type":"binary-expr","locations":[{"start":{"line":152,"column":12},"end":{"line":152,"column":39}},{"start":{"line":152,"column":43},"end":{"line":152,"column":62}}],"line":152},"31":{"loc":{"start":{"line":156,"column":13},"end":{"line":166,"column":9}},"type":"if","locations":[{"start":{"line":156,"column":13},"end":{"line":166,"column":9}},{"start":{"line":156,"column":13},"end":{"line":166,"column":9}}],"line":156},"32":{"loc":{"start":{"line":160,"column":13},"end":{"line":166,"column":9}},"type":"if","locations":[{"start":{"line":160,"column":13},"end":{"line":166,"column":9}},{"start":{"line":160,"column":13},"end":{"line":166,"column":9}}],"line":160},"33":{"loc":{"start":{"line":172,"column":8},"end":{"line":183,"column":9}},"type":"if","locations":[{"start":{"line":172,"column":8},"end":{"line":183,"column":9}},{"start":{"line":172,"column":8},"end":{"line":183,"column":9}}],"line":172},"34":{"loc":{"start":{"line":172,"column":12},"end":{"line":172,"column":57}},"type":"binary-expr","locations":[{"start":{"line":172,"column":12},"end":{"line":172,"column":33}},{"start":{"line":172,"column":37},"end":{"line":172,"column":57}}],"line":172},"35":{"loc":{"start":{"line":175,"column":13},"end":{"line":183,"column":9}},"type":"if","locations":[{"start":{"line":175,"column":13},"end":{"line":183,"column":9}},{"start":{"line":175,"column":13},"end":{"line":183,"column":9}}],"line":175},"36":{"loc":{"start":{"line":175,"column":17},"end":{"line":175,"column":85}},"type":"binary-expr","locations":[{"start":{"line":175,"column":17},"end":{"line":175,"column":37}},{"start":{"line":175,"column":41},"end":{"line":175,"column":61}},{"start":{"line":175,"column":65},"end":{"line":175,"column":85}}],"line":175},"37":{"loc":{"start":{"line":178,"column":13},"end":{"line":183,"column":9}},"type":"if","locations":[{"start":{"line":178,"column":13},"end":{"line":183,"column":9}},{"start":{"line":178,"column":13},"end":{"line":183,"column":9}}],"line":178},"38":{"loc":{"start":{"line":181,"column":13},"end":{"line":183,"column":9}},"type":"if","locations":[{"start":{"line":181,"column":13},"end":{"line":183,"column":9}},{"start":{"line":181,"column":13},"end":{"line":183,"column":9}}],"line":181},"39":{"loc":{"start":{"line":190,"column":8},"end":{"line":192,"column":9}},"type":"if","locations":[{"start":{"line":190,"column":8},"end":{"line":192,"column":9}},{"start":{"line":190,"column":8},"end":{"line":192,"column":9}}],"line":190},"40":{"loc":{"start":{"line":190,"column":12},"end":{"line":190,"column":40}},"type":"binary-expr","locations":[{"start":{"line":190,"column":12},"end":{"line":190,"column":18}},{"start":{"line":190,"column":22},"end":{"line":190,"column":40}}],"line":190},"41":{"loc":{"start":{"line":196,"column":12},"end":{"line":201,"column":13}},"type":"if","locations":[{"start":{"line":196,"column":12},"end":{"line":201,"column":13}},{"start":{"line":196,"column":12},"end":{"line":201,"column":13}}],"line":196},"42":{"loc":{"start":{"line":196,"column":16},"end":{"line":196,"column":72}},"type":"binary-expr","locations":[{"start":{"line":196,"column":16},"end":{"line":196,"column":42}},{"start":{"line":196,"column":46},"end":{"line":196,"column":72}}],"line":196},"43":{"loc":{"start":{"line":199,"column":17},"end":{"line":201,"column":13}},"type":"if","locations":[{"start":{"line":199,"column":17},"end":{"line":201,"column":13}},{"start":{"line":199,"column":17},"end":{"line":201,"column":13}}],"line":199},"44":{"loc":{"start":{"line":199,"column":21},"end":{"line":199,"column":77}},"type":"binary-expr","locations":[{"start":{"line":199,"column":21},"end":{"line":199,"column":47}},{"start":{"line":199,"column":51},"end":{"line":199,"column":77}}],"line":199}},"s":{"0":1,"1":1,"2":1,"3":19,"4":19,"5":19,"6":19,"7":19,"8":10,"9":9,"10":7,"11":2,"12":1,"13":1,"14":1,"15":15,"16":1,"17":14,"18":14,"19":14,"20":14,"21":49,"22":14,"23":4769,"24":4769,"25":14048,"26":1973,"27":12075,"28":49,"29":12026,"30":4769,"31":14,"32":14,"33":8,"34":6,"35":14,"36":5,"37":5,"38":49,"39":49,"40":12,"41":12,"42":12,"43":0,"44":12,"45":12,"46":7,"47":12,"48":12,"49":12,"50":0,"51":12,"52":5,"53":7,"54":7,"55":0,"56":0,"57":9,"58":264800,"59":4,"60":5,"61":5,"62":10,"63":10,"64":10,"65":2,"66":8,"67":4,"68":4,"69":4,"70":0,"71":0,"72":9,"73":1959,"74":1754144,"75":1954,"76":4,"77":0,"78":17,"79":17,"80":17,"81":17,"82":17,"83":17,"84":9,"85":581508,"86":9,"87":4,"88":258448,"89":4,"90":4,"91":258448,"92":4,"93":0,"94":17,"95":12,"96":12,"97":12,"98":12,"99":12,"100":7,"101":12,"102":0,"103":12,"104":0,"105":0,"106":0,"107":12,"108":0,"109":0,"110":0,"111":12,"112":6,"113":6,"114":129228,"115":6,"116":387672,"117":8,"118":1,"119":1,"120":1,"121":0,"122":1,"123":1,"124":0,"125":0,"126":0,"127":0,"128":1,"129":1,"130":64560,"131":1,"132":64612,"133":1,"134":8,"135":0,"136":8,"137":24865,"138":24865,"139":24865,"140":24865,"141":0,"142":0,"143":0,"144":1},"f":{"0":19,"1":4769,"2":49,"3":12,"4":264800,"5":1754144,"6":17,"7":581508,"8":258448,"9":258448,"10":12,"11":0,"12":0,"13":129228,"14":387672,"15":1,"16":64560,"17":64612,"18":8,"19":24865},"b":{"0":[10,9],"1":[19,14],"2":[7,2],"3":[9,7,3],"4":[1,1],"5":[1,0],"6":[1,14],"7":[1973,12075],"8":[49,12026],"9":[8,6],"10":[0,12],"11":[7,5,0],"12":[0,12],"13":[12,12],"14":[5,7],"15":[12,11,7],"16":[7,0],"17":[0,0],"18":[2,8],"19":[10,8],"20":[4,4],"21":[8,8,7],"22":[4,0],"23":[0,0],"24":[1954,5],"25":[9,4,4,0],"26":[7,5],"27":[12,7],"28":[0,12],"29":[0,12],"30":[12,0],"31":[0,12],"32":[6,6],"33":[0,1],"34":[1,1],"35":[1,0],"36":[1,0,0],"37":[0,0],"38":[0,0],"39":[0,8],"40":[8,8],"41":[24865,0],"42":[24865,24865],"43":[0,0],"44":[0,0]},"inputSourceMap":{"version":3,"file":"C:/Users/karry/IdeaProjects/project_team170/src/controller/utilities/PerformQuery.ts","sources":["C:/Users/karry/IdeaProjects/project_team170/src/controller/utilities/PerformQuery.ts"],"names":[],"mappings":"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","sourcesContent":["import {InsightError, InsightResult, ResultTooLargeError} from \"../IInsightFacade\";\r\n\r\nexport class PerformQuery{\r\n\tpublic insightResult: InsightResult[] = [];\r\n\r\n\tpublic performQueryHelper(query: any, datasetContent: any[], id: string): InsightResult[]{\r\n\t\ttry {\r\n\t\t\tthis.insightResult = datasetContent;\r\n\t\t\tlet filterKey = Object.keys(query[\"WHERE\"])[0];\r\n\t\t\tif (filterKey === \"AND\" || filterKey === \"OR\"){\r\n\t\t\t\tthis.insightResult = this.logicComparison(query[\"WHERE\"], datasetContent);\r\n\t\t\t} else if (filterKey === \"LT\" || filterKey === \"GT\" || filterKey === \"EQ\"){\r\n\t\t\t\tthis.insightResult = this.mComparison(query[\"WHERE\"], datasetContent);\r\n\t\t\t} else if (filterKey === \"IS\"){\r\n\t\t\t\tthis.insightResult = this.sComparison(query[\"WHERE\"][filterKey], datasetContent);\r\n\t\t\t} else if (filterKey === \"NOT\"){\r\n\t\t\t\tthis.insightResult = this.negation(query[\"WHERE\"][filterKey], datasetContent);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.insightResult.length > 5000) {\r\n\t\t\t\tthrow new ResultTooLargeError(\"The result is too large.\");\r\n\t\t\t}\r\n\r\n\t\t\tconst columnsOriginal = query[\"OPTIONS\"][\"COLUMNS\"];\r\n\t\t\tconst order = query[\"OPTIONS\"][\"ORDER\"];\r\n\t\t\tlet columns: string[] = [];\r\n\t\t\tfor (const col of columnsOriginal) {\r\n\t\t\t\tcolumns.push(this.splitField(col));\r\n\t\t\t}\r\n\t\t\tlet optionsResult = this.insightResult.map((result) => {\r\n\t\t\t\tlet columnResult: InsightResult = {};\r\n\t\t\t\tfor (let column of columns){\r\n\t\t\t\t\tif (column === \"year\") {\r\n\t\t\t\t\t\tcolumnResult[id + \"_\" + column] = Number(result[column]);\r\n\t\t\t\t\t} else if (column === \"uuid\") {\r\n\t\t\t\t\t\tcolumnResult[id + \"_\" + column] = String(result[column]);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcolumnResult[id + \"_\" + column] = result[column];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn columnResult;\r\n\t\t\t});\r\n\r\n\t\t\tconst keys = Object.keys(query[\"OPTIONS\"]);\r\n\t\t\tif (keys.includes(\"ORDER\")) {\r\n\t\t\t\tthis.insightResult = this.orderQuery(optionsResult, order);\r\n\t\t\t} else {\r\n\t\t\t\tthis.insightResult = optionsResult;\r\n\t\t\t}\r\n\t\t\treturn this.insightResult;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate splitField (column: string): string {\r\n\t\tlet parts = column.split(\"_\");\r\n\t\treturn parts.slice(1).join(\"_\");\r\n\t}\r\n\r\n\tprivate logicComparison(logic: any, datasetContent: any[]): InsightResult[]{\r\n\t\tconst logicOperator: string = Object.keys(logic)[0];\r\n\t\tconst conditions = logic[logicOperator];\r\n\t\tif (conditions.length === 0){\r\n\t\t\tthrow new InsightError(\"No conditions provided for logic operator.\");\r\n\t\t}\r\n\t\tlet results: InsightResult[] = datasetContent;\r\n\t\tswitch (logicOperator){\r\n\t\t\tcase \"AND\":\r\n\t\t\t\tfor (let condition of conditions) {\r\n\t\t\t\t\tconst conditionKey = Object.keys(condition)[0];\r\n\t\t\t\t\tlet tempResults: InsightResult[] = [];\r\n\t\t\t\t\tif (conditionKey === \"AND\" || conditionKey === \"OR\") {\r\n\t\t\t\t\t\ttempResults = this.logicComparison(condition, datasetContent);\r\n\t\t\t\t\t} else if (conditionKey === \"LT\" || conditionKey === \"GT\" || conditionKey === \"EQ\") {\r\n\t\t\t\t\t\ttempResults = this.mComparison(condition, datasetContent);\r\n\t\t\t\t\t} else if (conditionKey === \"IS\") {\r\n\t\t\t\t\t\ttempResults = this.sComparison(condition, datasetContent);\r\n\t\t\t\t\t} else if (conditionKey === \"NOT\") {\r\n\t\t\t\t\t\ttempResults = this.negation(condition, datasetContent);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Intersect results with tempResults\r\n\t\t\t\t\tresults = results.filter((result) => tempResults.includes(result));\r\n\t\t\t\t}\r\n\t\t\t\treturn results;\r\n\t\t\tcase \"OR\": {\r\n\t\t\t\tlet combinedResults: InsightResult[] = [];\r\n\t\t\t\tfor (let condition of conditions) {\r\n\t\t\t\t\tconst conditionKey = Object.keys(condition)[0];\r\n\t\t\t\t\tlet tempResults: InsightResult[] = [];\r\n\t\t\t\t\tif (conditionKey === \"AND\" || conditionKey === \"OR\") {\r\n\t\t\t\t\t\ttempResults = this.logicComparison(condition, datasetContent);\r\n\t\t\t\t\t} else if (conditionKey === \"LT\" || conditionKey === \"GT\" || conditionKey === \"EQ\") {\r\n\t\t\t\t\t\ttempResults = this.mComparison(condition, datasetContent);\r\n\t\t\t\t\t} else if (conditionKey === \"IS\") {\r\n\t\t\t\t\t\ttempResults = this.sComparison(condition[conditionKey], datasetContent);\r\n\t\t\t\t\t} else if (conditionKey === \"NOT\") {\r\n\t\t\t\t\t\ttempResults = this.negation(condition[conditionKey], datasetContent);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor (let result of tempResults) {\r\n\t\t\t\t\t\tif (!combinedResults.some((combinedResult) =>\r\n\t\t\t\t\t\t\tJSON.stringify(combinedResult) === JSON.stringify(result))) {\r\n\t\t\t\t\t\t\tcombinedResults.push(result);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} return combinedResults;\r\n\t\t\t}\r\n\t\t\tdefault: throw new InsightError(\"Invalid logic operator.\");\r\n\t\t}\r\n\t}\r\n\r\n\tprivate mComparison(m: any, datasetContent: any[]): InsightResult[]{\r\n\t\tconst comparator: string = Object.keys(m)[0];\r\n\t\tconst keyOriginal: string = Object.keys(m[comparator])[0]; // \"id_field\"\r\n\t\tconst key: string = keyOriginal.split(\"_\")[1]; // \"field\"\r\n\t\tconst value: number = m[comparator][keyOriginal];\r\n\t\tlet results: InsightResult[] = datasetContent;\r\n\r\n\t\tswitch (comparator) {\r\n\t\t\tcase \"GT\":\r\n\t\t\t\tresults = results.filter((section) => section[key] > value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"LT\":\r\n\t\t\t\tresults = results.filter((section) => section[key] < value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"EQ\":\r\n\t\t\t\tresults = results.filter((section) => section[key] === value);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new InsightError(\"Invalid M COMPARATOR\");\r\n\t\t}\r\n\t\treturn results;\r\n\t}\r\n\r\n\tprivate sComparison(s: any, datasetContent: any[]): InsightResult[]{\r\n\t\tconst sKeyOriginal: string = Object.keys(s)[0]; // \"id_field\"\r\n\t\tconst sKey: string = sKeyOriginal.split(\"_\")[1]; // \"field\"\r\n\t\tlet value: any = s[sKeyOriginal];\r\n\t\tlet results: InsightResult[] = datasetContent;\r\n\r\n\t\tif (typeof value === \"object\" && value !== null) {\r\n\t\t\tvalue = value[Object.keys(value)[0]];\r\n\t\t}\r\n\r\n\t\tif (typeof value !== \"string\") {\r\n\t\t\tconsole.error(\"Expected a string but got:\", typeof value, value);\r\n\t\t}\r\n\r\n\r\n\t\tif (value.startsWith(\"*\") === 0 && value.endsWith(\"*\")) {\r\n\t\t\tvalue = value.substring(1, value.length - 1);\r\n\t\t\tresults = results.filter((section) => (section[sKey] as string).includes(value));\r\n\t\t} else if (value.startsWith(\"*\") === 0) {\r\n\t\t\tvalue = value.substring(1);\r\n\t\t\tresults = results.filter((section) => (section[sKey] as string).endsWith(value));\r\n\t\t} else if (value.endsWith(\"*\")) {\r\n\t\t\tvalue = value.substring(0, value.length - 1);\r\n\t\t\tresults = results.filter((section) => (section[sKey] as string).startsWith(value));\r\n\t\t} else {\r\n\t\t\tresults = results.filter((section) => section[sKey] === value);\r\n\t\t}\r\n\r\n\t\treturn results;\r\n\t}\r\n\r\n\tprivate negation(negation: any, datasetContent: any[]): InsightResult[]{\r\n\t\tlet negationResults: InsightResult[] = [];\r\n\t\tconst negationKey = Object.keys(negation)[0];\r\n\r\n\t\tif (negationKey === \"AND\" || negationKey === \"OR\"){\r\n\t\t\tnegationResults = this.logicComparison(negation, datasetContent);\r\n\t\t} else if (negationKey === \"LT\" || negationKey === \"GT\" || negationKey === \"EQ\"){\r\n\t\t\tnegationResults = this.mComparison(negation, datasetContent);\r\n\t\t} else if (negationKey === \"IS\"){\r\n\t\t\tnegationResults = this.sComparison(negation[negationKey], datasetContent);\r\n\t\t} else if (negationKey === \"NOT\"){\r\n\t\t\tnegationResults = this.negation(negation[negationKey], datasetContent);\r\n\t\t}\r\n\r\n\t\t// I cannot think of a case where this is not valid TODO: please verify\r\n\t\tlet results: InsightResult[] = datasetContent;\r\n\t\tconst negationUUIDs = new Set(negationResults.map((result) => result.uuid));\r\n\t\tresults = results.filter((section) => !negationUUIDs.has(section.uuid));\r\n\t\treturn results;\r\n\t}\r\n\r\n\tprivate orderQuery(orderDataset: InsightResult[], order: string): InsightResult[]{\r\n\t\tif (!order || order.length === 0) {\r\n\t\t\treturn orderDataset;\r\n\t\t}\r\n\t\treturn orderDataset.sort((a: any, b: any) => {\r\n\t\t\tlet aValue = a[order];\r\n\t\t\tlet bValue = b[order];\r\n\t\t\tif (typeof aValue === \"number\" && typeof bValue === \"number\") {\r\n\t\t\t\treturn (aValue - bValue);\r\n\t\t\t} else if (typeof aValue === \"string\" && typeof bValue === \"string\") {\r\n\t\t\t\treturn aValue.localeCompare(bValue);\r\n\t\t\t}\r\n\t\t\tthrow new InsightError(\"Wrong type for order key.\");\r\n\t\t});\r\n\t}\r\n}\r\n\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2b038bbe51d17504b6aaede83569ad2403b7cba8","contentHash":"e6e7638f8f3b643b20b3c45aa0cc90cf2ca89da734ea2e45ca0ba152e4883554"}}